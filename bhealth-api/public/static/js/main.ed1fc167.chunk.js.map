{"version":3,"sources":["images/icons/blood-pressure.svg","images/icons/diamond-icon.svg","images/icons/happy-face.svg","images/icons/sad-face.svg","images/icons/blood-sugar.svg","images/icons/heart-rate.svg","images/icons/temperature.svg","images/icons/weight.svg","images/icons/add-vitals.svg","images/icons/sick-face.svg","images/icons/blue-icon.svg","logo.svg","AppContext.js","components/landing/Landing.js","services/auth-services.js","components/auth/AuthForm.js","hooks/useForm.js","components/auth/Signup.js","components/auth/Login.js","components/profile/Profile.js","services/profile-services.js","components/vitalsigns/VitalSignsCard.js","services/vitalsigns-services.js","components/vitalsigns/VitalSignsForm.js","components/home/Home.js","services/study-services.js","components/study/StudyForm.js","components/study/StudyInfo.js","components/study/Study.js","services/consultation-services.js","services/emergency-services.js","services/hospitalization-services.js","components/disease/Disease.js","components/common/CatalogSearchbar.js","components/consultation/ConsultationFormSpecial.js","components/consultation/ConsultationInfo.js","components/consultation/Consultation.js","hooks/useDrugsForm.js","services/drug-services.js","components/prescription/PrescriptionForm.js","components/prescription/PrescriptionInfo.js","components/prescription/Prescription.js","services/prescription-services.js","services/medhistory-services.js","components/medHistory/MedHistory.js","components/hospitalization/HospitalizationForm.js","components/hospitalization/HospitalizationInfo.js","components/hospitalization/Hozpitalization.js","components/emergency/EmergencyForm.js","components/emergency/EmergencyInfo.js","components/emergency/Emergency.js","components/common/DrugSearchbar.js","components/drug/DrugForm.js","components/drug/DrugInfo.js","components/drug/Drug.js","Router.js","components/common/Navbar.js","components/common/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppContext","createContext","AppProvider","children","initialUserState","JSON","parse","localStorage","getItem","useState","user","setUser","route","setRoute","objectHandler","setObjectHandler","userContext","resetUserContext","Provider","value","Landing","className","to","src","placeholderImg","alt","base_url","AuthForm","submit","action","email","password","confirm_password","handleChange","emailInputState","setEmailInputState","passwordInputState","setPasswordInputState","confPasswordInputState","setConfPasswordInputState","isButtonDisabled","setIsButtonDisabled","useEffect","inputValidation","event","target","name","test","validateEmail","validatePassword","onSubmit","uk-icon","onChange","type","disabled","useForm","form","setForm","array","setArray","handleInput","push","prevState","console","log","handleFileInput","files","Signup","useContext","useHistory","data","preventDefault","axios","post","then","res","token","setItem","stringify","UIkit","notification","message","pos","status","catch","msg","response","Login","Profile","_id","width","height","profile_picture","first_name","last_name1","onClick","last_name2","moment","utc","date_of_birth","format","curp","gender","formData","FormData","key","append","patch","headers","Authorization","editProfile","error","htmlFor","placeholder","VitalSignsCard","vitalsign_name","vitalsign_icon","form_name","handleInputChange","showInput","setShowInput","step","createVitalSigns","VitalSignsForm","setShowVitalsForm","setVitalsFormValues","vitalsFormValues","persist","parseFloat","currentValues","temperature_icon","blood_pressure_icon","blood_sugar_icon","heart_rate_icon","weight_icon","vitalsigns","Home","temperature","blood_pressure_sys","blood_pressure_dias","blood_sugar","heart_rate","weight","Date","now","locale","happy_img","sad_img","sick_img","uk-accordion","href","StudyForm","handleSubmit","drugQuantity","uk-form-custom","multiple","tabIndex","StudyInfo","study","date","doctor","image","uk-lightbox","data-alt","study_name","facility_name","Study","setStudy","studies","setStudies","get","getStudies","length","map","index","loadStudy","createStudy","getConsultations","getEmergencies","getHospitalizations","Disease","diseases","setDiseases","setConsultations","setEmergencies","setHospitalizations","diseasesHandler","consultations","i","diagnosis","emergencies","hospitalizations","disease","uk-toggle","id","uk-modal","uk-close","CatalogSearchbar","handleFormInput","searchResults","setSearchResults","searchValue","setSearchValue","showDrop","setShowDrop","results","cie10","filter","NOMBRE","toLowerCase","includes","procedures","PRO_NOMBRE","drugs","generic_name","uk-search-icon","ConsultationForm","showVitalsForm","toggleVitalsForm","ConsultationInfo","consultation","vitals","setVitals","consultationID","getOneVitalSignsConsultation","chief_complaint","glucose","Consultation","setConsultation","goToPrescription","newRoute","goToStudies","loadConsultation","prescription","ConsultationFormSpecial","createConsultation","useDrugsForm","drugsArray","PrescriptionForm","drugFields","setDrugFields","setDrugQuantity","drug","handleDrugInput","brand_name","dosage_form","dose","directions","drugField","pop","deleteDrugField","addDrugField","PrescriptionInfo","Prescription","setPrescription","prescriptions","setPrescriptions","getPrescriptions","loadPrescription","drugsJSON","createPrescription","MedHistory","medHistory","setMedHistory","familyHistoryObj","healthHistoryObj","addictionsObj","allergiesObj","weekly_exercise_hours","getMedicalHistory","medicalHistory","editMedicalHistory","createMedicalHistory","handleMedHistoryInput","parseInt","family_history","Object","entries","entry","health_history","addictions","allergies","slice","defaultValue","defaultChecked","HospitalizationForm","HospitalizationInfo","hospitalization","admission_date","description","Hozpitalization","setHospitalization","loadHospitalization","createHospitalization","EmergencyForm","EmergencyInfo","emergency","Emergency","setEmergency","loadEmergency","treatment","createEmergency","DrugForm","DrugSearchbar","Drug","setDrug","setDrugs","getDrugs","date_added","loadDrug","createDrug","DrugInfo","Router","exact","path","Navbar","handleRoute","closeMenu","toggle","document","getElementById","checked","logo","clear","Sidebar","uk-nav","App","Boolean","window","location","hostname","match","use","Icons","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed1fc167.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blood-pressure.cf3aa91f.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond-icon.7b010418.svg\";","module.exports = __webpack_public_path__ + \"static/media/happy-face.df981ce0.svg\";","module.exports = __webpack_public_path__ + \"static/media/sad-face.18bccf67.svg\";","module.exports = __webpack_public_path__ + \"static/media/blood-sugar.cac6f5ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-rate.669e9159.svg\";","module.exports = __webpack_public_path__ + \"static/media/temperature.135f44d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/weight.74bdac82.svg\";","module.exports = __webpack_public_path__ + \"static/media/add-vitals.77332c1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/sick-face.e921748a.svg\";","module.exports = __webpack_public_path__ + \"static/media/blue-icon.233a6f76.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { createContext, useState } from 'react';   // Import React and 2 hooks for context-creation and state-manipulation\n\n// Create context object, and export it so children components can use it through the useContext hook\nexport const AppContext = createContext();\n\n// Create Provider component \nconst AppProvider = ({ children }) => {\n\n  // Obtain user data from the localStorage, or set it as an empty object in case there is no user stored\n  const initialUserState = JSON.parse( localStorage.getItem('user') ) || {};\n\n  // Declare user state variable and setUser function to update the user state variable\n  const [ user, setUser ] = useState(initialUserState);\n  const [ route, setRoute ] = useState(\"none\");\n  const [ objectHandler, setObjectHandler ] = useState({});\n  \n  // Declare resetUserContext function that will allow us to reset the user context\n  const resetUserContext = () => {\n\n    setUser({});    // Sets user context to an empty object \n    setRoute(\"none\");\n    setObjectHandler({});\n\n  };\n\n  // Create the context objects to be passed as props in the Provider, with our created state and functions\n  const userContext = { user, setUser, route, setRoute, objectHandler, setObjectHandler, resetUserContext };\n\n  // Return a context Provider component, sending the userContext as value prop\n  return (\n    <AppContext.Provider value={ userContext }>\n      { children }\n    </AppContext.Provider>\n  );\n\n};\n\nexport default AppProvider;","import React from 'react'\nimport { Link, NavLink } from 'react-router-dom';         // Import NavLink for \"navigation\"\nimport placeholderImg from '../../images/icons/diamond-icon.svg'\n\nconst Landing = () => {\n  \n  return (\n    <div className=\"content\">\n\n      <div className=\"uk-section\">\n        <div className=\"uk-container uk-height-1-1\">\n          <div className=\"uk-width-1-1 uk-width-2-3@m uk-height-1-1 uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n            <h1>La <span className=\"uk-text-secondary uk-text-bold\">salud</span> de tu <span className=\"uk-text-primary uk-text-bold\">familia</span>, <br/> en tus manos.</h1>\n            <h3 className=\"uk-margin-remove\">Tus datos. Tus medicamentos. Tu salud.</h3>\n            <Link to=\"/registro\" className=\"uk-width-1-1 uk-margin-large uk-hidden@s\">\n              <button className=\"uk-button uk-button-primary uk-width-2-3 uk-border-pill\">\n                Regístrate Gratis\n              </button>\n            </Link>\n            <Link to=\"/login\" className=\"uk-width-1-1 uk-hidden@s\">\n              <button className=\"uk-button uk-button-muted uk-width-2-3 uk-border-pill\">\n                Inicia Sesión\n              </button>\n            </Link>        \n            <button className=\"uk-visible@s uk-button uk-button-primary uk-button-large uk-border-pill uk-margin-large\">\n              Regístrate Gratis\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"uk-section\">\n        <div className=\"uk-container\">\n          <div className=\"uk-grid uk-child-width-1-1 uk-child-width-1-3@m\">\n            <div>\n              <div className=\"uk-card uk-card-default uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n                <div className=\"uk-card-media-top uk-width-1-5 uk-flex uk-flex-center uk-flex-middle\">\n                  <img className=\"uk-margin-small-top\" src={placeholderImg} alt=\"\" />\n                </div>\n                <div className=\"uk-card-body uk-padding-small\">\n                  <h3 className=\"uk-margin-remove\">Tu Expediente Clínico</h3>\n                  <p className=\"uk-margin-remove\">La información clínica de tu <span className=\"uk-text-primary uk-text-bold\">familia</span>, siempre segura y disponible.</p>\n                </div>\n              </div>\n            </div>\n            <div>\n              <div className=\"uk-card uk-card-default uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n                <div className=\"uk-card-media-top uk-width-1-5 uk-flex uk-flex-center uk-flex-middle\">\n                  <img className=\"uk-margin-small-top\" src={placeholderImg} alt=\"\" />\n                </div>\n                <div className=\"uk-card-body uk-padding-small\">\n                  <h3 className=\"uk-margin-remove\">Monitorea tu salud</h3>\n                  <p className=\"uk-margin-remove\">Recordatorios para tus <span className=\"uk-text-primary uk-text-bold\">medicamentos</span> y <span className=\"uk-text-primary uk-text-bold\">signos vitales</span></p>\n                </div>\n              </div>\n            </div>\n            <div>\n              <div className=\"uk-card uk-card-default uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n                <div className=\"uk-card-media-top uk-width-1-5 uk-flex uk-flex-center uk-flex-middle\">\n                  <img className=\"uk-margin-small-top\" src={placeholderImg} alt=\"\" />\n                </div>\n                <div className=\"uk-card-body uk-padding-small\">\n                  <h3 className=\"uk-margin-remove\">Controla el acceso</h3>\n                  <p className=\"uk-margin-remove\">Tú decides la información que quieras compartir con <span className=\"uk-text-primary uk-text-bold\">familiares o médicos</span></p>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* \n          <div className=\"uk-visible@s uk-flex uk-width-1-1 uk-child-width-1-3\">\n            <div>Test</div>\n            <div>Test</div>\n            <div>Test</div>\n          </div> */}\n        </div>\n      </div>\n\n      <div className=\"uk-section uk-hidden@s\">\n        <div className=\"uk-container\">\n          <div className=\"uk-text-left\">\n            <h1>Toma el control <br/> de tu salud</h1>\n            <h4>Nadie conoce mejor tu salud <br/>y la de tu familia que tú.</h4>\n            <h3>Con B-Health, nunca fue más sencillo</h3>\n          </div>\n          \n        </div>\n        {/* <div className=\"uk-flex uk-flex-column uk-width-1-1 uk-child-width-1-1\">\n          <div>Test</div>\n          <div>Test</div>\n          <div>Test</div>\n        </div> */}\n      </div>\n\n    </div>\n  )\n}\n\nexport default Landing\n","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api' : 'http://localhost:3000/api';\n\n// Export signup function, which receives data as parameters to enable signup\nexport const signup = (data) => {\n  \n  // Return a call to our /signup route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/signup`, data);\n\n};\n\n// Export login function, which receives data as parameters to enable login\nexport const login = (data) => {\n\n  // Return a call to our /login route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/login`, data);\n\n};\n\n// Export logout function, which \"erases\" the token from the localStorage, and without a token any user\n// that is not logged in will not be able to access the routes that require authentication/token\nexport const logout = () => {\n\n  localStorage.clear();\n\n};","import React, { useEffect, useState } from 'react';                        // Import React\nimport { NavLink } from 'react-router-dom';       // Import NavLink for \"navigation\"\n\n// Declare AuthForm functional component, receives action variable for conditional rendering,\n// email, password and confirm_password variables from form state variable, and submit and handleChange functions\nconst AuthForm = ( { submit, action, email = '', password = '', confirm_password = '', handleChange } ) => {\n\n  let error = null;\n  const [ emailInputState, setEmailInputState ] = useState(null)\n  const [ passwordInputState, setPasswordInputState ] = useState(null)\n  const [ confPasswordInputState, setConfPasswordInputState ] = useState(null)\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(true)\n\n  useEffect( () => {\n    if ( emailInputState === 'uk-form-success' && passwordInputState === 'uk-form-success' && confPasswordInputState === 'uk-form-success' )\n      setIsButtonDisabled(false);\n    else\n      setIsButtonDisabled(true);\n  }, [emailInputState, passwordInputState, confPasswordInputState])\n\n  const validateEmail = (email) => {\n    const regEx = /\\S+@\\S+\\.\\S+/;\n    return regEx.test(email);\n  }\n\n  const validatePassword = (password) => {\n    const regEx = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\n    return regEx.test(password);\n  }\n\n  const inputValidation = (event) => {\n\n    const { name, value } = event.target;\n\n    handleChange(event);\n\n    switch( name ) {\n      case 'email': {\n        if ( validateEmail(value) ) \n          setEmailInputState('uk-form-success');\n        else \n          setEmailInputState('uk-form-danger');\n        break;\n      }\n      case 'password': {\n        if (  validatePassword(value) )\n          setPasswordInputState('uk-form-success');\n        else\n          setPasswordInputState('uk-form-danger');\n        break;\n      }\n      case 'confirm_password': {\n        if ( value === password )\n          setConfPasswordInputState('uk-form-success')\n        else\n          setConfPasswordInputState('uk-form-danger')\n      }\n    }\n    \n  }\n\n  return (\n    <div className=\" uk-width-1-1 uk-margin-top uk-margin-remove-top@s\">\n\n      <div className=\"uk-margin\">\n\n        <h2>{action === \"signup\" ? \"Registro\" : \"Inicia Sesión\"}</h2>\n    \n        { action === \"signup\" ? (\n          <p>¿Ya tienes cuenta? \n            <NavLink to=\"/login\" className=\"uk-margin-small-left\">\n              Accede aquí\n            </NavLink>\n          </p>\n          ) : (\n          <p>¿No tienes cuenta? \n            <NavLink to=\"/signup\" className=\"uk-margin-small-left\">\n              Regístrate aquí\n            </NavLink>\n          </p>\n          )\n        }\n      \n      </div>\n\n        <form className=\"uk-form-stacked uk-margin-large\" onSubmit={submit}>\n          \n          <div className=\"uk-margin\">\n            <label className=\"uk-form-label\">Correo Electrónico:</label>\n            <div className=\"uk-inline uk-width-4-5\">\n              <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n              <input onChange={event => inputValidation(event)} name=\"email\" value={email} className={emailInputState !== null ? `${emailInputState} uk-input uk-width-1-1 uk-border-pill` : \"uk-input uk-width-1-1 uk-border-pill\"} type=\"email\" />\n            </div>\n          </div>\n          <div className=\"uk-margin\">\n            <label className=\"uk-form-label\">Contraseña:</label>\n            <div className=\"uk-inline uk-width-4-5\">\n              <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n              <input\n                onChange={event => inputValidation(event)}\n                name=\"password\"\n                value={password}\n                className={passwordInputState !== null ? `${passwordInputState} uk-input uk-width-1-1 uk-border-pill` : \"uk-input uk-width-1-1 uk-border-pill\"}\n                type=\"password\"\n              />\n            </div>\n          </div>\n            { action === \"signup\" ? (\n            <div className=\"uk-margin\">\n              <label className=\"uk-form-label\">Confirma tu contraseña:</label>\n              <div className=\"uk-inline uk-width-4-5\">\n                <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n                <input\n                  onChange={event => inputValidation(event)}\n                  name=\"confirm_password\"\n                  value={confirm_password}\n                  className={passwordInputState !== null ? `${confPasswordInputState} uk-input uk-width-1-1 uk-border-pill` : \"uk-input uk-width-1-1 uk-border-pill\"}\n                  type=\"password\"\n                />\n              </div>\n            </div>\n            ) : null }\n\n          \n\n          <button disabled={action === 'signup' ? isButtonDisabled : false} className=\"uk-button uk-button-primary uk-border-pill uk-width-3-5 uk-margin\" type=\"submit\">\n            {action === \"signup\" ? \"Registrar\" : \"Entrar\"}\n          </button>\n\n        </form>\n    </div>\n  )\n\n}\n\nexport default AuthForm;","import { useState } from 'react';   // Import useState hook to create custom hook\n\n// Declare hook as a React functional component\nconst useForm = () => {\n  \n  // Declare form state variable and setForm function to update the form state variable\n  const [ form, setForm ] = useState({});\n  const [ array, setArray ] = useState([]);\n\n  // Declare handleInput function for input data manipulation\n  const handleInput = (event) => {\n    \n    // Destructure input name and value (data that is being changed by user)\n    const { name, value } = event.target;\n\n    // When using checkboxes, store the values in an array\n    if ( event.target.type === 'checkbox' ) {\n      \n      array.push(value);\n      setArray(array);\n      setForm( prevState => ({...prevState, [name]: array}) );\n\n    } else {\n      console.log(form)\n      // Update the form state without erasing previos values (with prevState)\n      setForm( prevState => ({...prevState, [name]: value}) );\n\n    }\n\n  };\n\n  // Declare handleInputFile function for files manipulation\n  const handleFileInput = (event) => {\n\n    // Destructure input name and files (data that is being changed by user)\n    const { name, files } = event.target;\n\n    // Update the form state without erasing previos values (with prevState)\n    setForm( prevState => ({...prevState, [name]: files}) );\n\n  };\n\n  // Return the form state variable and input handling functions\n  return { form, setForm, handleInput, handleFileInput };\n\n};\n\nexport default useForm;","import React, { useContext } from 'react';                // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';            // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';            // Import AppContext to use created context\nimport { signup } from '../../services/auth-services';    // Import signup service for API call\nimport AuthForm from './AuthForm';                        // Import AuthForm react component\nimport useForm from '../../hooks/useForm';                // Import useForm custom hook\nimport UIkit from 'uikit';                                // Import UIkit for notifications\n\n// Declare Signup functional component\nconst Signup = () => {\n\n  const { form, handleInput } = useForm();      // Destructure form state variable and handleInput function\n  const { setUser } = useContext(AppContext);   // Destructure setUser function for user state manipulation\n  const { push } = useHistory();                // Destructure push method from useHistory to \"redirect\" user\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();                     // Prevent page reloading after submit action\n    \n    // Call signup service with form state variable as parameter, which includes form data for e-mail and password\n    signup(form)\n    .then( res => {\n      \n      const { user, token } = res.data;         // Destructure user and token from response, sent by API\n      \n      // Store user and token in localStorage\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', token);\n\n      setUser(user);    // Modify user state variable, setting the user data in the state\n      push('/home');    // \"Redirect\" user to home\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='check'></span> Completa tu registro usando la liga que te enviamos a la dirección de correo electrónico proporcionada`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n    })\n    .catch( res => {\n\n      const { msg } = res.response.data;\n      \n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${msg}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n    });\n    \n  };\n\n  const validateEmail = (email) => {\n    const regEx = /\\S+@\\S+\\.\\S+/;\n    return regEx.test(email);\n  }\n\n  return (\n    <div className=\"uk-section\">\n      <div className=\"uk-container\">\n        <AuthForm\n          submit={handleSubmit}\n          action=\"signup\"\n          handleChange={handleInput}\n          validateEmail={validateEmail}\n          {...form}\n        />\n      </div>\n    </div>\n  );\n\n};\n\nexport default Signup;","import React, { useContext } from 'react';              // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';          // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';          // Import AppContext to use created context\nimport { login } from '../../services/auth-services';   // Import login service for API call\nimport AuthForm from './AuthForm';                      // Import AuthForm react component\nimport useForm from '../../hooks/useForm';              // Import useForm custom hook\nimport UIkit from 'uikit';                              // Import UIkit for notifications\n\n// Declare Login functional component\nconst Login = () => {\n\n  const { form, handleInput } = useForm();                // Destructure form state variable and handleInput function\n  const { setUser, setRoute } = useContext(AppContext);   // Destructure setUser function for user state manipulation\n  const { push } = useHistory();                          // Destructure push method from useHistory to \"redirect\" user\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();                     // Prevent page reloading after submit action\n    \n    // Call signup service with form state variable as parameter, which includes form data for e-mail and password\n    login(form)\n    .then( res => {\n      \n      const { user, token } = res.data;         // Destructure user and token from response, sent by API\n      \n      // Store user and token in localStorage\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', token);\n      console.log(user)\n\n      setUser(user);    // Modify user state variable, setting the user data in the state\n      setRoute('');\n      push('/home');    // \"Redirect\" user to home\n\n    })\n    .catch( res => {\n\n      const { msg } = res.response.data;\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${msg}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n    });\n    \n  };\n\n  return (\n    <div className=\"uk-section\">\n      <div className=\"uk-container\">\n        <AuthForm\n          submit={handleSubmit}\n          action=\"login\"\n          handleChange={handleInput}\n          {...form}\n        />\n      </div>\n    </div>\n  );\n\n};\n\nexport default Login;","import React, { useEffect, useContext, useState } from 'react';           // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';                  // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                  // Import AppContext to use created context\nimport { editProfile } from '../../services/profile-services';  // Import edit API call\nimport useForm from '../../hooks/useForm';                      // Import useForm custom hook\nimport UIkit from 'uikit';                                      // Import UIkit for notifications\nimport moment from 'moment';                                    // Import momentjs for date formatting\n\nconst Profile = () => {\n\n  const { form, handleInput, handleFileInput } = useForm();\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  \n  const { user, setUser, route, setRoute } = useContext(AppContext); // Destructure user state variable\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n\n  // Hook to update component when user state variable is modified\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n  }, [user] );\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true);\n\n    const formData = new FormData();      // Declare formData as new instance of FormData class\n    const { profile_picture } = form;     // Destructure profile_picture from form\n\n    // Iterate through every key in form object and append name:value to formData\n    for (let key in form) {\n\n      // If profile_picture, append as first item in array (currently 1 file allowed, index 0)\n      if ( key === 'profile_picture' ) formData.append(key, profile_picture[0]);\n\n      else formData.append(key, form[key]);\n      \n    }\n    \n    // Call edit service with formData as parameter, which includes form data for user profile information\n    editProfile(formData)\n    .then( res => {\n\n      const { user } = res.data   // Destructure updated user document from response\n      \n      setUser(user);              // Modify user state variable with updated information\n      setRoute('none');\n      setIsButtonDisabled(false);\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡Tu perfil fue actualizado exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n    })\n    .catch( error => {\n\n      console.log(error);\n      setIsButtonDisabled(false);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n    });\n    \n  };\n\n  return (\n    <div className=\"uk-section\">\n      <div className=\"uk-width-auto\">\n        <img className=\"uk-border-circle\" width={128} height={128} src={user.profile_picture} alt=\"User profile\" />\n      </div>\n      <h2>{user.first_name} {user.last_name1}</h2>\n      { route !== 'edit' ? (\n          <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('edit')} >\n            Editar mi perfil\n          </button>\n        ) : (\n          <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('none')} >\n            Regresar\n          </button>\n        )}\n      \n      <div className=\"uk-container uk-margin\">\n        { route !== 'edit' ? (\n          <div className=\"uk-text-left\">\n            <p>Nombre completo: {user.first_name} {user.last_name1} {user.last_name2}</p>\n            <p>Email: {user.email}</p>\n            <p>Fecha de nacimiento: {moment.utc(user.date_of_birth).format('LL')}</p>\n            <p>CURP: {user.curp ? user.curp : 'Información no registrada'}</p>\n            <p>Género: {user.gender === 'N' ? 'No definido' : user.gender === 'F' ? 'Femenino' : 'Masculino'}</p>\n          </div>\n        ) : (\n          <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n            <div className=\"uk-margin\">\n              <label className=\"uk-form-label\" htmlFor=\"date\">Nombres:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"first_name\" onChange={handleInput} placeholder={user.first_name} />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Apellido paterno:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"last_name1\" onChange={handleInput} placeholder={user.last_name1} />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Apellido materno:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"last_name2\" onChange={handleInput} placeholder={user.last_name2} />\n              </div>\n              <label className=\"uk-form-label\">Fecha de nacimiento: {moment.utc(user.date_of_birth).format('LL')}</label>\n              <div className=\"uk-inline\">\n                <input onChange={handleInput} name=\"date_of_birth\" className=\"uk-input\" type=\"date\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Género</label>\n              <div className=\"uk-margin uk-flex uk-flex-around\">\n                <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"F\" />Mujer</label>\n                <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"M\" />Hombre</label>\n                <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"N\" />No binario</label>\n              </div>\n              <label className=\"uk-form-label\">Correo electrónico:</label>\n              <div className=\"uk-form-controls\">\n                <input onChange={handleInput} name=\"email\" className=\"uk-input\" type=\"email\" placeholder={user.email} />\n              </div>\n              <label className=\"uk-form-label\">CURP:</label>\n              <div className=\"uk-form-controls\">\n                <input onChange={handleInput} name=\"curp\" className=\"uk-input\" type=\"text\" placeholder={user.curp} />\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n              <button type=\"submit\" className=\"uk-button uk-button-primary uk-button-small uk-border-pill\" disabled={isButtonDisabled} >\n                Editar perfil\n              </button>\n            </div>\n          </form>\n        )}\n        \n      </div>\n      \n      \n    </div>\n  )\n\n}\n\nexport default Profile","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/profile' : 'http://localhost:3000/api/profile';\n\n// Export edit function, which receives data as parameters to enable profile edition\nexport const editProfile = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /edit route, while sending the parameters obtained from the form/front-end\n  return axios.patch(`${base_url}/profile/edit`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n      \"Content-Type\": \"multipart/form-data\"     // Set content as multipart/form-data for files and text\n    }\n  });\n\n};","import React, { useState } from 'react'\n\nconst VitalSignsCard = ({ vitalsign_name, vitalsign_icon, form_name, handleInputChange }) => {\n\n  const [ showInput, setShowInput ] = useState(false)\n\n  const toggleInput = () => setShowInput(true);\n\n  return (\n    <div className={`uk-card uk-card-hover uk-card-body uk-padding-small`} onClick={toggleInput}>\n      <h5>{vitalsign_name}</h5>\n      <div className=\"uk-flex uk-flex-center\">\n        <img className=\"uk-width-4-5\" src={vitalsign_icon} alt=\"\"/>\n      </div>\n      {\n        showInput ? \n          <input className=\"uk-input uk-width-4-5\" type=\"number\" step=\"any\" name={form_name} onChange={handleInputChange} />\n        : null\n      }\n    </div>\n  )\n}\n\n\nexport default VitalSignsCard","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/vitalsigns' : 'http://localhost:3000/api/vitalsigns';\n\n// Export get function to retrieve all prescriptions of the current logged in user\nexport const getVitalSigns = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable prescription creation\nexport const createVitalSigns = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getOneVitalSigns = (vitalSignsID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${vitalSignsID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getOneVitalSignsConsultation = (consultationID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/vitals/${consultationID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editVitalSigns = (vitalSignsID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${vitalSignsID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useState } from 'react';\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport VitalSignsCard from '../vitalsigns/VitalSignsCard'\n\nimport happy_img from '../../images/icons/happy-face.svg'\nimport sad_img from '../../images/icons/sad-face.svg'\nimport add_vitals_icon from '../../images/icons/add-vitals.svg'\nimport blood_pressure_icon from '../../images/icons/blood-pressure.svg'\nimport blood_sugar_icon from '../../images/icons/blood-sugar.svg'\nimport heart_rate_icon from '../../images/icons/heart-rate.svg'\nimport temperature_icon from '../../images/icons/temperature.svg'\nimport weight_icon from '../../images/icons/weight.svg'\n\nimport { getVitalSigns, getOneVitalSigns, createVitalSigns } from '../../services/vitalsigns-services'\n\nconst VitalSignsForm = ({ type, setShowVitalsForm, setVitalsFormValues, setRoute, vitalsFormValues = null }) => {\n\n  // const [ formValues, setFormValues ] = useState({temperature: null, blood_pressure_sys: null, blood_pressure_dias: null, blood_sugar: null, heart_rate: null, weight: null});\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  const saveVitalSigns = (event) => {\n\n    event.preventDefault();\n\n    if ( type === 'consultation' )\n      setShowVitalsForm(false);\n    else {\n\n      createVitalSigns(vitalsFormValues)\n      .then( res => {\n\n        const { vitalsigns } = res.data;\n        console.log(vitalsigns)\n\n        // Send UIkit success notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> '¡Los signos vitales fueron registrados exitosamente!'`,\n          pos: 'bottom-center',\n          status: 'success'\n        });\n\n      })\n      .catch( error => {\n        console.log('error creando signos vitales');\n        console.log(error);\n\n        // Send UIkit error notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> ${error}`,\n          pos: 'bottom-center',\n          status: 'danger'\n        });\n\n      })\n\n    }\n      setRoute(null);\n\n  }\n\n  // const handleSubmit = (event) => {\n\n  //   event.preventDefault();\n  //   console.log(formValues);\n  //   setIsButtonDisabled(true);\n\n  //   createVitalSigns(formValues)\n  //   .then( res => {\n\n  //     const { vitalSigns } = res.data    // Destructure updated preferences document from response\n  //     console.log(vitalSigns)\n\n  //     // Send UIkit success notification\n  //     UIkit.notification({\n  //       message: `<span uk-icon='close'></span> '¡El registro de signos vitales fue creado exitosamente!'`,\n  //       pos: 'bottom-center',\n  //       status: 'success'\n  //     });\n\n  //     if ( type === 'consultation' )\n  //       setShowVitalsForm(false)\n  //     else setRoute('vitalSigns')\n\n  //     // setRoute('consultations');\n  //     setIsButtonDisabled(false);\n\n  //   })\n  //   .catch( error => {\n\n  //     console.log(error);\n\n  //     // Send UIkit error notification\n  //     UIkit.notification({\n  //       message: `<span uk-icon='close'></span> ${error}`,\n  //       pos: 'bottom-center',\n  //       status: 'danger'\n  //     });\n      \n  //     setIsButtonDisabled(false);\n\n  //   });\n\n  // }\n\n  const handleInputChange = (event) => {\n    event.persist();\n\n    if(event.target.type === 'number') event.target.value = parseFloat(event.target.value);\n    setVitalsFormValues( currentValues => ({\n      ...currentValues,\n      [event.target.name]: event.target.value\n    }))\n  }\n\n  return (\n    <form className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <div className=\"uk-width-1-1 uk-width-1-4@s uk-child-width-1-3 uk-grid uk-grid-collapse uk-grid-match\">\n          \n            <VitalSignsCard vitalsign_name=\"Temperatura Corporal\" vitalsign_icon={temperature_icon} handleInputChange={handleInputChange} form_name=\"temperature\" />\n            <VitalSignsCard vitalsign_name=\"Presión Sistólica\" vitalsign_icon={blood_pressure_icon} handleInputChange={handleInputChange} form_name=\"blood_pressure_sys\" />\n            <VitalSignsCard vitalsign_name=\"Glucosa\" vitalsign_icon={blood_sugar_icon} handleInputChange={handleInputChange} form_name=\"blood_sugar\" />\n\n            <VitalSignsCard vitalsign_name=\"Frecuencia Cardiaca\" vitalsign_icon={heart_rate_icon} handleInputChange={handleInputChange} form_name=\"heart_rate\" />\n            <VitalSignsCard vitalsign_name=\"Presión Diastólica\" vitalsign_icon={blood_pressure_icon} handleInputChange={handleInputChange} form_name=\"blood_pressure_dias\" />\n            <VitalSignsCard vitalsign_name=\"Peso\" vitalsign_icon={weight_icon} handleInputChange={handleInputChange} form_name=\"weight\" />\n\n        </div>\n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin\">\n        <button onClick={saveVitalSigns} className=\"uk-button uk-button-primary uk-border-pill\" disabled={isButtonDisabled} >\n          Agregar Signos Vitales\n        </button>\n      </div>     \n    </form>\n  )\n}\n\nexport default VitalSignsForm","import React, { useEffect, useContext, useState } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { AppContext } from '../../AppContext';\nimport UIkit from 'uikit';\nimport moment from 'moment';\n\nimport VitalSignsForm from '../vitalsigns/VitalSignsForm'\nimport ProfileCard from '../profile/ProfileCard'\n\nimport happy_img from '../../images/icons/happy-face.svg'\nimport sad_img from '../../images/icons/sad-face.svg'\nimport sick_img from '../../images/icons/sick-face.svg'\nimport add_vitals_icon from '../../images/icons/add-vitals.svg'\nimport blood_pressure_icon from '../../images/icons/blood-pressure.svg'\nimport blood_sugar_icon from '../../images/icons/blood-sugar.svg'\nimport heart_rate_icon from '../../images/icons/heart-rate.svg'\nimport temperature_icon from '../../images/icons/temperature.svg'\nimport weight_icon from '../../images/icons/weight.svg'\n\nconst Home = () => {\n\n  const { user, setUser, route, setRoute } = useContext(AppContext); // Destructure user state variable\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n\n  const [ vitalsFormValues, setVitalsFormValues ] = useState({temperature: null, blood_pressure_sys: null, blood_pressure_dias: null, blood_sugar: null, heart_rate: null, weight: null});\n\n  // Hook to update component when user state variable is modified\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n  }, [user] );\n  \n  return (\n    <div className=\"content\">\n      <div className=\"uk-section\">\n        <h2 className=\"uk-margin-small-top\">Hola {user.first_name === \"Nombres\" ? \"Usuario\" : user.first_name}</h2>\n        <p>{moment(Date.now()).locale('es').format('LL')}</p>\n        <div className=\"uk-container uk-overflow-auto\">\n          <div className=\"uk-grid uk-grid-collapse\">\n            <div className=\"uk-width-1-1 uk-width-1-3@s uk-grid uk-grid-collapse\">\n              <div className=\"uk-width-1-1\">\n                <h4>¿Cómo te sientes?</h4>\n              </div>\n              <div className=\"uk-width-1-3 uk-card-hover uk-padding\">\n                <img src={happy_img} alt=\"\"/>\n              </div>\n              <div className=\"uk-width-1-3 uk-card-hover uk-padding uk-light\">\n                <img src={sad_img} alt=\"\"/>\n              </div>\n              <div className=\"uk-width-1-3 uk-card-hover uk-padding uk-light\">\n                <img src={sick_img} alt=\"\"/>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-grid uk-grid-collapse\">\n              <ul className=\"uk-width-1-1 uk-child-width-1-2@s\" uk-accordion=\"true\">\n                <li className=\"uk-open\">\n                  <a className=\"uk-accordion-title\" href=\"#\">Mis Medicamentos</a>\n                  <div className=\"uk-accordion-content\">\n                    <table className=\"uk-table uk-table-hover uk-table-divider uk-margin-small-bottom\">\n                      <tbody>\n                        <tr>\n                          <td className=\"uk-text-center\">Medicamento 1</td>\n                          <td>\n                            <span className=\"uk-margin-small-right\" uk-icon=\"bell\"></span>\n                            <span className=\"uk-margin-small-right\" uk-icon=\"info\"></span>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td className=\"uk-text-center\">Medicamento 2</td>\n                          <td>\n                            <span className=\"uk-margin-small-right\" uk-icon=\"bell\"></span>\n                            <span className=\"uk-margin-small-right\" uk-icon=\"info\"></span>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td className=\"uk-text-center\">Medicamento 3</td>\n                          <td>\n                            <span className=\"uk-margin-small-right\" uk-icon=\"bell\"></span>\n                            <span className=\"uk-margin-small-right\" uk-icon=\"info\"></span>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                    <button className=\"uk-button uk-button-default uk-border-pill uk-button-small\">Agregar Medicamento</button>\n                  </div>\n                </li>\n                <li>\n                  <a className=\"uk-accordion-title\" href=\"#\">Mis Padecimientos</a>\n                  <div className=\"uk-accordion-content\">\n                    <table className=\"uk-table uk-table-hover uk-table-divider uk-margin-small-bottom\">\n                        <tbody>\n                          <tr>\n                            <td className=\"uk-text-center\">\n                              Padecimiento 1\n                              <span className=\"uk-margin-small-left\" uk-icon=\"info\"></span>\n                            </td>\n                            <td>\n                              <button className=\"uk-button uk-button-default uk-border-pill uk-button-small\">+ Consulta</button>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"uk-text-center\">\n                              Padecimiento 2\n                              <span className=\"uk-margin-small-left\" uk-icon=\"info\"></span>\n                            </td>\n                            <td>\n                              <button className=\"uk-button uk-button-default uk-border-pill uk-button-small\">+ Consulta</button>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"uk-text-center\">\n                              Padecimiento 3\n                              <span className=\"uk-margin-small-left\" uk-icon=\"info\"></span>\n                            </td>\n                            <td>\n                              <button className=\"uk-button uk-button-default uk-border-pill uk-button-small\">+ Consulta</button>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                      <button className=\"uk-button uk-button-default uk-border-pill uk-button-small\">Agregar Padecimiento</button>\n                  </div>\n                </li>\n                <li>\n                  <a className=\"uk-accordion-title\" href=\"#\">Signos Vitales</a>\n                  <div className=\"uk-accordion-content\">\n                    <VitalSignsForm vitalsFormValues={vitalsFormValues} setVitalsFormValues={setVitalsFormValues} setRoute={setRoute}/>\n                  </div>\n                </li>\n              </ul>\n            </div>\n          </div>\n          \n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/studies' : 'http://localhost:3000/api/studies';\n\n// Export get function to retrieve all prescriptions of the current logged in user\nexport const getStudies = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable prescription creation\nexport const createStudy = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getStudy = (studyID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${studyID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editStudy = (studyID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${studyID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useState } from 'react';\n\nconst StudyForm = ({ handleSubmit, handleInput, handleFileInput, form, isButtonDisabled, objectHandler }) => {\n\n  const [ drugFields, setDrugFields ] = useState([]);\n  const [ drugQuantity, setDrugQuantity] = useState(0);\n\n  useEffect( () => {\n\n  }, [drugQuantity])\n  \n  const addDrugField = (event) => {\n\n    event.preventDefault();\n    drugFields.push(1)\n\n    setDrugFields(drugFields);\n    setDrugQuantity(drugQuantity+1)\n\n    return null;\n\n  }\n\n  const deleteDrugField = (event) => {\n\n    event.preventDefault();\n    drugFields.pop()\n\n    setDrugFields(drugFields);\n    setDrugQuantity(drugQuantity-1)\n\n    return null;\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <h4>Datos del Estudio</h4>\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de estudio:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"date\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"doctor\">Doctor que solicitó:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"doctor\" onChange={handleInput} placeholder=\"Nombre del doctor...\" />\n        </div>\n        \n        <div className=\"uk-margin\">\n          <h4>Estudio</h4>\n          <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre de Estudio:</label>\n          <div className=\"uk-form-controls\">\n            <input className=\"uk-input\" type=\"text\" name=\"study_name\" onChange={handleInput} placeholder=\"Nombre del estudio...\" />\n          </div>\n          <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre de Laboratorio:</label>\n          <div className=\"uk-form-controls\">\n            <input className=\"uk-input\" type=\"text\" name=\"facility_name\" onChange={handleInput} placeholder=\"Dónde se realizó los estudios\" />\n          </div>\n          <div className=\"uk-flex uk-flex-middle uk-flex-around uk-margin\">\n            <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Imagen del Estudio:</label>\n            <div className=\"js-upload uk\" uk-form-custom=\"true\">\n              <input onChange={handleFileInput} name=\"image\" type=\"file\" multiple />\n              <button className=\"uk-button uk-button-default\" type=\"button\" tabIndex=\"-1\">Seleccionar</button>\n            </div>\n          </div>\n        </div>\n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-border-pill uk-width-2-3 uk-width-1-4@m\" disabled={isButtonDisabled} >\n          Crear Estudio\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default StudyForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst StudyInfo = ({ study }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de Estudio: {moment(study.date).locale('es').format('LL')}</p>\n        <p>Doctor: {study.doctor}</p>\n        { study.image ?\n            <div uk-lightbox=\"true\">\n              <a className=\"uk-button uk-button-default\" href={study.image} data-alt=\"Image\">Ver Imagen</a>\n            </div>\n          : null\n        }\n        <div className=\"uk-margin\" key=\"index\">\n          <p>Nombre del Estudio : {study.study_name}</p>\n          <p>Nombre de Laboratorio : {study.facility_name}</p>\n        </div>\n        \n      </div>\n    </div>\n  )\n}\n\nexport default StudyInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport { getStudies, createStudy, getStudy, editStudy } from '../../services/study-services';\nimport StudyForm from './StudyForm';\nimport StudyInfo from './StudyInfo';\n\nconst Study = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput, handleFileInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ study, setStudy] = useState({});\n  const [ studies, setStudies ] = useState([]);\n  const [ showForm, setShowForm ] = useState(false);\n  const [ showConsultation, setShowConsultation ] = useState(false);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    if ( route !== 'create' && route !== 'read' ) {\n      getStudies()\n      .then( res => {\n      \n        const { studies } = res.data;\n        setStudies(studies);\n        setRoute('studies');\n\n      });\n    }\n\n    \n    \n  }, [route]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true)\n\n    const formData = new FormData();      // Declare formData as new instance of FormData class\n    const { image } = form;     // Destructure profile_picture from form\n\n    // Iterate through every key in form object and append name:value to formData\n    for (let key in form) {\n\n      // If profile_picture, append as first item in array (currently 1 file allowed, index 0)\n      if ( key === 'image' ) formData.append(key, image[0]);\n\n      else formData.append(key, form[key]);\n      \n    }\n    \n    // Call edit service with formData as parameter, which includes form data for user profile information\n    createStudy(formData)\n    .then( res => {\n\n      const { study } = res.data   // Destructure updated user document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡Tu estudio fue creado exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('studies');\n      setIsButtonDisabled(false);\n      setObjectHandler({});\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n      setIsButtonDisabled(false)\n\n    });\n    \n  };\n\n  const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadStudy = (study) => {\n    setStudy(study);\n    setRoute('read');\n  }\n\n  return (\n\n    <div className=\"content\">\n      \n        { route === 'studies' ? (\n          <div className=\"uk-section\">\n            <h2>Estudios</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nuevo Estudio\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { studies.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado estudios</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center uk-visible\">Estudio</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { studies ? \n                      studies.map( (study, index) => \n                        <tr key={index}>\n                          <td className=\"uk-text-center\">{moment(study.date).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center uk-visible\">{study.study_name}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadStudy({study})} >\n                              Ver\n                            </button>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nuevo Estudio</h2>\n                  { objectHandler._id ?\n                      <h4>{objectHandler._id}</h4>\n                      : null\n                  }\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('studies')} >\n                    Regresar\n                  </button>\n                  <StudyForm handleSubmit={handleSubmit} handleInput={handleInput} handleFileInput={handleFileInput} form={form} isButtonDisabled={isButtonDisabled} objectHandler={objectHandler}/>\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Estudio</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('studies')} >\n                    Regresar\n                  </button>\n                  <StudyInfo {...study} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('studies')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n    \n  )\n}\n\nexport default Study","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/consultations' : 'http://localhost:3000/api/consultations';\n\n// Export get function to retrieve all consultations of the current logged in user\nexport const getConsultations = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable consultation creation\nexport const createConsultation = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getConsultation = (consultationID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${consultationID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editConsultation = (consultationID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${consultationID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/emergencies' : 'http://localhost:3000/api/emergencies';\n\n// Export get function to retrieve all emergencies of the current logged in user\nexport const getEmergencies = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable emergency creation\nexport const createEmergency = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getEmergency = (emergencyID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${emergencyID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editEmergency = (emergencyID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${emergencyID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/hospitalizations' : 'http://localhost:3000/api/hospitalizations';\n\n// Export get function to retrieve all hospitalizations of the current logged in user\nexport const getHospitalizations = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable hospitalization creation\nexport const createHospitalization = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getHospitalization = (hospitalizationID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${hospitalizationID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editHospitalization = (hospitalizationID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${hospitalizationID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\nimport 'moment/locale/es'  // without this line it didn't work\nimport { getConsultations } from '../../services/consultation-services';\nimport { getEmergencies } from '../../services/emergency-services';\nimport { getHospitalizations } from '../../services/hospitalization-services';\n\nmoment.locale('es')\n\nconst Disease = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ disease, setDisease] = useState({});\n  const [ diseases, setDiseases ] = useState([]);\n  const [ consultations, setConsultations ] = useState([]);\n  const [ emergencies, setEmergencies ] = useState([]);\n  const [ hospitalizations, setHospitalizations ] = useState([]);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  let diseasesHandler = []\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getConsultations()\n    .then( res => {\n      \n      const { consultations } = res.data;\n      setConsultations(consultations);\n\n      for ( let i = 0 ; i < consultations.length ; i++ ) {\n        diseasesHandler.push(consultations[i].diagnosis)\n      }\n\n    })\n\n    getEmergencies()\n    .then( res => {\n      \n      const { emergencies } = res.data;\n      setEmergencies(emergencies);\n\n      for ( let i = 0 ; i < emergencies.length ; i++ ) {\n        diseasesHandler.push(emergencies[i].diagnosis)\n      }\n\n    })\n\n    getHospitalizations()\n    .then( res => {\n      \n      const { hospitalizations } = res.data;\n      setHospitalizations(hospitalizations);\n\n      for ( let i = 0 ; i < hospitalizations.length ; i++ ) {\n        diseasesHandler.push(hospitalizations[i].diagnosis)\n      }\n\n      setDiseases(diseasesHandler);\n      setRoute('diseases')\n\n    })\n\n    console.log(diseasesHandler)\n    console.log(diseases)\n    \n  }, [route]);\n\n  // const handleSubmit = (event) => {\n\n  //   event.preventDefault();\n  //   console.log(form);\n  //   setIsButtonDisabled(true);\n\n  //   createConsultation(form)\n  //   .then( res => {\n\n  //     const { consultation } = res.data    // Destructure updated preferences document from response\n  //     console.log(consultation)\n\n  //     // Send UIkit success notification\n  //     UIkit.notification({\n  //       message: `<span uk-icon='close'></span> '¡La consulta fue creada exitosamente!'`,\n  //       pos: 'bottom-center',\n  //       status: 'success'\n  //     });\n\n  //     setRoute('consultations');\n  //     setIsButtonDisabled(false);\n\n  //   })\n  //   .catch( error => {\n\n  //     console.log(error);\n\n  //     // Send UIkit error notification\n  //     UIkit.notification({\n  //       message: `<span uk-icon='close'></span> ${error}`,\n  //       pos: 'bottom-center',\n  //       status: 'danger'\n  //     });\n      \n  //     setIsButtonDisabled(false);\n\n  //   });\n\n  // }\n\n  // const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadDisease = (disease) => {\n    setDisease(disease);\n    setRoute('read');\n  }\n\n  // const goToPrescription = (event, consultation, newRoute) => {\n  //   event.preventDefault();\n  //   setConsultation(consultation);\n  //   setObjectHandler(consultation);\n  //   setRoute(newRoute);\n  //   console.log(objectHandler)\n  // }\n\n  // const goToStudies = (event, consultation, newRoute) => {\n  //   event.preventDefault();\n  //   setObjectHandler(consultation);\n  //   setRoute(newRoute);\n  //   console.log(objectHandler);\n  // }\n\n  return (\n\n    <div className=\"content\">\n      { route === 'diseases' ? (\n          <div className=\"uk-section\">\n            <h2>Mis Padecimientos</h2>\n            {/* <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nuevo Padecimiento\n            </button> */}\n            <div className=\"uk-overflow-auto\">\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Diagnóstico</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { diseases ? \n                      diseases.map( (disease, index) => \n                        <tr key={index} >\n                          <td className=\"uk-text-center\">{disease ? disease : 'No definida'}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" uk-toggle={`target: #modal-sections-${index}`} >\n                              Ver\n                            </button>\n                            <div id={`modal-sections-${index}`} className=\"uk-flex-top\" uk-modal=\"true\">\n                              <div className=\"uk-modal-dialog uk-margin-auto-vertical\">\n                                <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\" />\n                                <div className=\"uk-modal-header\">\n                                  <h3 className=\"uk-text-center\">Datos del Padecimiento</h3>\n                                  <p>Nombre: {disease}</p>\n                                  <p>Fecha de primer diagnóstico: No disponible</p>\n                                  <p>Doctor o Clínica que realizó diagnóstico: No disponible</p>\n                                  <p>Aquí se presentará un resumen del padecimiento, así como una liga para mayor información</p>\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                          <td></td>\n                          {/* <td>\n                            <a href={`#modal-sections-${index}`} uk-toggle={`target: #modal-sections-${index}`}>\n                              <span className=\"uk-margin-small-right\" uk-icon=\"more-vertical\"></span>\n                            </a>\n                            \n                          </td> */}\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : ( null\n            // route === 'create' ? (\n            //   <div className=\"uk-section\">\n            //     <div className=\"uk-container\">\n            //       <h2>Nueva Consulta</h2>\n            //       <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n            //         Regresar\n            //       </button>\n            //       <ConsultationFormSpecial handleSubmit={handleSubmit} handleInput={handleInput} form={form} isButtonDisabled={isButtonDisabled} setVitalsFormValues={setVitalsFormValues}/>\n            //     </div>\n            //   </div>\n            // ) : (\n            //   route === 'read' ? (\n            //     <div className=\"uk-section\">\n            //       <h2>Ver Consulta</h2>\n            //       <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n            //         Regresar\n            //       </button>\n            //       <ConsultationInfo {...consultation} />\n            //     </div>\n            //   ) : (\n            //     <div className=\"uk-section\">\n            //       <h2>Cargando...</h2>\n            //       <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n            //         Regresar\n            //       </button>\n            //     </div> \n            //   )\n            // )\n          )\n        }\n    </div>\n    \n  )\n}\n\nexport default Disease","import React, { useEffect, useState } from 'react'\nimport cie10 from '../../catalogs/cie10.json'\nimport procedures from '../../catalogs/procedimientos.json'\nimport drugs from '../../catalogs/drugs.json'\n\nconst CatalogSearchbar = ({type, form, handleFormInput}) => {\n\n  const [ searchResults, setSearchResults ] = useState('');\n  const [ searchValue, setSearchValue ] = useState('');\n  const [ showDrop, setShowDrop ] = useState(false);\n\n  const handleInput = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  let results = [];\n\n  useEffect( () => {\n\n    switch (type) {\n      case \"diagnosis\": results = cie10.filter( disease =>\n        disease.NOMBRE.toLowerCase().includes(searchValue)\n        );\n        break;\n\n      case \"procedure\": results = procedures.filter( disease =>\n        disease.PRO_NOMBRE.toLowerCase().includes(searchValue)\n        );\n        break;\n\n      case \"drugs\": results = drugs.filter( disease =>\n        disease.generic_name.toLowerCase().includes(searchValue)\n        );\n        break;\n    }\n\n    setSearchResults(results);\n\n    if ( results.length <= 15 ) {\n      setShowDrop(true);\n    }\n    console.log(searchResults)\n\n  }, [searchValue]);\n\n\n  return (\n      <div className=\"uk-margin uk-width-1-1\">\n        <div className=\"uk-search uk-search-default uk-width-1-1\">\n          <span className=\"uk-search-icon-flip\" uk-search-icon=\"true\"></span>\n          <input\n            className=\"uk-search-input uk-text-center\"\n            type=\"search\"\n            placeholder={ type === 'diagnosis' ? \"Busca padecimiento...\" : type === 'drugs' ? \"Busca por nombre genérico...\" : \"Busca procedimiento...\"}\n            value={searchValue}\n            onChange={handleInput}\n          />\n        </div>\n        { showDrop ? (\n            <select className=\"uk-select\" name={type} onChange={handleFormInput}>\n              {searchResults.map( (disease, index) => <option key={index} value={disease.NOMBRE} >{disease.NOMBRE}</option> )}\n            </select>\n          ) : null \n        }\n      </div>\n  )\n}\n\nexport default CatalogSearchbar","import React, { useState } from 'react';\nimport CatalogSearchbar from '../common/CatalogSearchbar'\nimport VitalSignsForm from '../vitalsigns/VitalSignsForm'\n\nconst ConsultationForm = ({ handleSubmit, handleInput, form, isButtonDisabled, setVitalsFormValues }) => {\n\n  const [ showVitalsForm, setShowVitalsForm ] = useState(false);\n\n  const toggleVitalsForm = (event) => {\n    event.preventDefault();\n    setShowVitalsForm(!showVitalsForm)\n  }\n\n  return (\n    <div>\n      {\n        !showVitalsForm ? (\n            <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n              <div className=\"uk-margin\">\n                <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de consulta</label>\n                <div className=\"uk-form-controls\">\n                  <input className=\"uk-input\" type=\"date\" name=\"date\" onChange={handleInput} />\n                </div>\n                <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Doctor que atendió:</label>\n                <div className=\"uk-form-controls\">\n                  <input className=\"uk-input\" type=\"text\" name=\"doctor\" onChange={handleInput} placeholder=\"Nombre del doctor...\" />\n                </div>\n                <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Motivo de consulta</label>\n                <div className=\"uk-form-controls\">\n                  <input className=\"uk-input\" type=\"text\" name=\"chief_complaint\" onChange={handleInput} placeholder=\"Dolor, fiebre, etc...\" />\n                </div>\n                <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Diagnóstico</label>\n                <div className=\"uk-form-controls\">\n                  <CatalogSearchbar type=\"diagnosis\" form={form} handleFormInput={handleInput}/>\n                </div>\n              </div>\n              <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin\">\n                {\n                  showVitalsForm ? (\n                    <button type=\"submit\" className=\"uk-button uk-button-secondary uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={toggleVitalsForm} >\n                      - Signos Vitales\n                    </button>\n                  ) : (\n                    <button type=\"submit\" className=\"uk-button uk-button-secondary uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={toggleVitalsForm}  >\n                      + Signos Vitales\n                    </button>\n                  )\n                }\n              </div>\n              <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin\">\n                <button type=\"submit\" className=\"uk-button uk-button-primary uk-button uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" disabled={isButtonDisabled} >\n                  Crear consulta\n                </button>\n              </div>\n            </form>\n        ) : (\n          <div className=\"uk-section\">\n            <h2>Registro de Signos Vitales</h2>\n            <button className=\"uk-button uk-button-secondary uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={toggleVitalsForm} >\n              Regresar a Consulta\n            </button>\n            <VitalSignsForm type=\"consultation\" setShowVitalsForm={setShowVitalsForm} setVitalsFormValues={setVitalsFormValues}/>\n          </div>\n        )\n      }\n    \n    </div>\n    \n  )\n}\n\nexport default ConsultationForm","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\nimport { getOneVitalSignsConsultation } from '../../services/vitalsigns-services'\n\nimport 'moment/locale/es'  // without this line it didn't work\nmoment.locale('es')\n\nconst ConsultationInfo = ({ consultation }) => {\n\n  const [ vitals, setVitals ] = useState({});\n\n  useEffect( () => {\n\n    getOneVitalSignsConsultation(consultation._id)\n    .then( res => {\n\n      const { vitalsigns } = res.data;\n      console.log(vitalsigns)\n      setVitals(vitalsigns)\n    })\n\n  }, [])\n\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de consulta: {moment(consultation.date).locale('es').format('LL')}</p>\n        <p>Doctor: {consultation.doctor}</p>\n        <p>Motivo de consulta: {consultation.chief_complaint}</p>\n        <p>Diagnóstico: {consultation.diagnosis}</p>\n        <p>Temperatura: {vitals.temperature ? vitals.temperature : 'No registrada'}</p>\n        <p>Presión Arterial: {vitals.blood_pressure_sys ? `${vitals.blood_pressure_sys} / ${vitals.blood_pressure_dias}` : 'No registrada'}</p>\n        <p>Frecuencia Cardiaca: {vitals.heart_rate ? vitals.heart_rate : 'No registrada'}</p>\n        <p>Nivel de Glucosa: {vitals.glucose ? vitals.glucose : 'No registrada'}</p>\n        <p>Peso: {vitals.weight ? vitals.weight : 'No registrado'}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ConsultationInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\nimport 'moment/locale/es'  // without this line it didn't work\n\nimport { getConsultations, createConsultation } from '../../services/consultation-services';\nimport { createVitalSigns } from '../../services/vitalsigns-services'\nimport ConsultationForm from './ConsultationForm';\nimport ConsultationFormSpecial from './ConsultationFormSpecial'\nimport ConsultationInfo from './ConsultationInfo';\n\nmoment.locale('es')\n\nconst Consultation = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [consultation, setConsultation] = useState({});\n  const [ consultations, setConsultations ] = useState([]);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  const [ vitalsFormValues, setVitalsFormValues ] = useState({temperature: null, blood_pressure_sys: null, blood_pressure_dias: null, blood_sugar: null, heart_rate: null, weight: null});\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getConsultations()\n    .then( res => {\n      \n      const { consultations } = res.data;\n      setConsultations(consultations);\n      setRoute('consultations');\n\n    })\n    \n  }, [isButtonDisabled]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();\n    console.log(form);\n    setIsButtonDisabled(true);\n\n    createConsultation(form)\n    .then( res => {\n\n      const { consultation } = res.data    // Destructure updated preferences document from response\n      console.log(consultation)\n\n      vitalsFormValues['consultation'] = consultation._id\n\n      // setVitalsFormValues( currentValues => ({\n      //   ...currentValues,\n      //   [date]: event.target.value\n      // }))\n\n      createVitalSigns(vitalsFormValues)\n      .then( res => {\n\n        const { vitalsigns } = res.data;\n        console.log(vitalsigns)\n\n      })\n      .catch( error => {\n        console.log('error creando signos vitales');\n        console.log(error);\n      })\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡La consulta fue creada exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('consultations');\n      setIsButtonDisabled(false);\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n      \n      setIsButtonDisabled(false);\n\n    });\n\n  }\n\n  const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadConsultation = (consultation) => {\n    setConsultation(consultation);\n    setRoute('read');\n  }\n\n  const goToPrescription = (event, consultation, newRoute) => {\n    event.preventDefault();\n    setConsultation(consultation);\n    setObjectHandler(consultation);\n    setRoute(newRoute);\n    console.log(objectHandler)\n  }\n\n  const goToStudies = (event, consultation, newRoute) => {\n    event.preventDefault();\n    setObjectHandler(consultation);\n    setRoute(newRoute);\n    console.log(objectHandler);\n  }\n\n  return (\n\n    <div className=\"content\">\n      \n        { route === 'consultations' ? (\n          <div className=\"uk-section\">\n            <h2>Consultas</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nueva Consulta\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { consultations.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado consultas</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center uk-visible@s\">Motivo de consulta</th>\n                    <th className=\"uk-text-center uk-visible@s\">Diagnostico</th>\n                    <th className=\"uk-text-center uk-visible@s\">Doctor</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { consultations ? \n                      consultations.map( (consultation, index) => \n                        <tr key={index} >\n                          <td className=\"uk-text-center\">{moment(consultation.date).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{consultation.chief_complaint}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{consultation.diagnosis}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{`Dr. ${consultation.doctor}`}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadConsultation({consultation})} >\n                              Ver Consulta\n                            </button>\n                          </td>\n                          <td>\n                            <a href={`#modal-sections-${index}`} uk-toggle={`target: #modal-sections-${index}`}>\n                              <span className=\"uk-margin-small-right\" uk-icon=\"more-vertical\"></span>\n                            </a>\n                            <div id={`modal-sections-${index}`} className=\"uk-flex-top\" uk-modal=\"true\">\n                              <div className=\"uk-modal-dialog uk-margin-auto-vertical\">\n                                <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\" />\n                                <div className=\"uk-modal-header\">\n                                  <h3 className=\"uk-text-center\">Datos de la Consulta</h3>\n                                  <p>Fecha: {moment(consultation.date).locale('es').format('LL')}</p>\n                                  <p>Doctor: {consultation.doctor}</p>\n                                </div>\n                                <div className=\"uk-modal-body uk-flex uk-flex-column\">\n                                  { consultation.prescription ? (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToPrescription(event, consultation, 'read')} >\n                                        <NavLink to=\"/recetas\">Ver Receta</NavLink>\n                                      </button>\n                                    ) : (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToPrescription(event, consultation, 'create')} >\n                                        <NavLink to=\"/recetas\">Agregar Receta</NavLink>\n                                      </button>\n                                    )\n                                  }\n                                  { consultation.studies ? (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToStudies(event, consultation, 'read')} >\n                                        <NavLink to=\"/estudios\">Ver Estudios</NavLink>\n                                      </button>\n                                    ) : (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToStudies(event, consultation, 'create')} >\n                                        <NavLink to=\"/estudios\">Agregar Estudios</NavLink>\n                                      </button>\n                                    )\n                                  }\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td className=\"uk-text-center\">Cargando</td>\n                        <td className=\"uk-text-center uk-visible@s\">Cargando</td>\n                        <td className=\"uk-text-center uk-visible@s\">Cargando</td>\n                        <td className=\"uk-text-center uk-visible@s\">Cargando</td>\n                        <td className=\"uk-text-center\">Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nueva Consulta</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n                    Regresar\n                  </button>\n                  <ConsultationFormSpecial handleSubmit={handleSubmit} handleInput={handleInput} form={form} isButtonDisabled={isButtonDisabled} setVitalsFormValues={setVitalsFormValues}/>\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Consulta</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n                    Regresar\n                  </button>\n                  <ConsultationInfo {...consultation} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n    \n  )\n}\n\nexport default Consultation","import { useState } from 'react';   // Import useState hook to create custom hook\n\n// Declare hook as a React functional component\nconst useDrugsForm = (drugsArray) => {\n  \n  // Declare form state variable and setForm function to update the form state variable\n  const [ form, setForm ] = useState({});\n  const [ array, setArray ] = useState([]);\n  const [ genericName, setGenericName ] = useState();\n  const [ brandName, setBrandName ] = useState();\n  const [ dosageForm, setDosageForm ] = useState();\n  const [ dose, setDose ] = useState();\n  const [ indications, setIndications ] = useState();\n\n  // Declare handleInput function for input data manipulation\n  const handleInput = (event) => {\n    \n    // Destructure input name and value (data that is being changed by user)\n    const { name, value } = event.target;\n\n    // When using checkboxes, store the values in an array\n    if ( event.target.type === 'checkbox' ) {\n      \n      array.push(value);\n      setArray(array);\n      setForm( prevState => ({...prevState, [name]: array}) );\n\n    } else {\n      console.log(form)\n      // Update the form state without erasing previos values (with prevState)\n      setForm( prevState => ({...prevState, [name]: value}) );\n\n    }\n\n  };\n\n  // Declare handleInputFile function for files manipulation\n  const handleFileInput = (event) => {\n\n    // Destructure input name and files (data that is being changed by user)\n    const { name, files } = event.target;\n\n    // Update the form state without erasing previos values (with prevState)\n    setForm( prevState => ({...prevState, [name]: files}) );\n\n  };\n\n  // Return the form state variable and input handling functions\n  return { form, setForm, handleInput, handleFileInput };\n\n};\n\nexport default useDrugsForm;","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/drugs' : 'http://localhost:3000/api/drugs';\n\n// Export get function to retrieve all prescriptions of the current logged in user\nexport const getDrugs = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable prescription creation\nexport const createDrug = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getDrug = (drugID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${drugID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editDrug = (drugID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${drugID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useState } from 'react';\n\nconst PrescriptionForm = ({ handleSubmit, handleInput, handleFileInput, form, isButtonDisabled, objectHandler, drugs }) => {\n\n  const [ drugFields, setDrugFields ] = useState([]);\n  const [ drugQuantity, setDrugQuantity] = useState(0);\n  let drug = {'generic_name': null, 'brand_name': null, 'dosage_form': null, 'dose': null, 'directions': null};\n\n  useEffect( () => {\n\n  }, [drugQuantity])\n\n  const handleDrugInput = (event, index) => {\n\n    switch (event.target.name) {\n      case 'generic_name':\n        drugs[index].generic_name = event.target.value;\n        // setForm( prevState => ({...prevState, ['drugs']: {[name]:value}}) );\n        break;\n      case 'brand_name':\n        drugs[index].brand_name = event.target.value;\n        // setForm( prevState => ({...prevState, [name]: value}) );\n        break;\n      case 'dosage_form':\n        drugs[index].dosage_form = event.target.value;\n        // setForm( prevState => ({...prevState, [name]: value}) );\n        break;\n      case 'dose':\n        drugs[index].dose = event.target.value;\n        // setForm( prevState => ({...prevState, [name]: value}) );\n        break;\n      case 'directions':\n        drugs[index].directions = event.target.value;\n        // setForm( prevState => ({...prevState, [name]: value}) );\n        break;\n    }\n\n    console.log(drugs);\n\n  }\n  \n  const addDrugField = (event) => {\n\n    event.preventDefault();\n    drugFields.push(1)\n    drugs.push(drug);\n\n    setDrugFields(drugFields);\n    setDrugQuantity(drugQuantity+1)\n\n    return null;\n\n  }\n\n  const deleteDrugField = (event) => {\n\n    event.preventDefault();\n    drugFields.pop()\n    drugs.pop();\n\n    setDrugFields(drugFields);\n    setDrugQuantity(drugQuantity-1)\n\n    return null;\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <h4>Datos de la Receta</h4>\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de receta:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"date\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"doctor\">Doctor que atendió:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"doctor\" onChange={handleInput} placeholder=\"Nombre del doctor...\" />\n        </div>\n        <div className=\"uk-flex uk-flex-middle uk-flex-around uk-margin\">\n          <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Imagen de la receta:</label>\n          <div className=\"js-upload uk\" uk-form-custom=\"true\">\n            <input onChange={handleFileInput} name=\"image\" type=\"file\" multiple />\n            <button className=\"uk-button uk-button-default\" type=\"button\" tabIndex=\"-1\">Seleccionar</button>\n          </div>\n        </div>\n        \n        <div id=\"drugs\" className=\"uk-margin\">\n          { drugFields.map( (drugField, index) => \n            <div className=\"uk-margin\" key={index}>\n              <h4>Medicamento {index+1} <span className=\"uk-margin-left\" uk-icon=\"minus-circle\" onClick={event => deleteDrugField(event)}></span></h4>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre Genérico:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"generic_name\" onChange={event => handleDrugInput(event, index)} placeholder=\"Nombre genérico del medicamento\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre Comercial:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"brand_name\" onChange={event => handleDrugInput(event, index)} placeholder=\"Nombre comercial del medicamento\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Presentación:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"dosage_form\" onChange={event => handleDrugInput(event, index)} placeholder=\"Tabletas, jarabe, etc...\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Dosis:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"dose\" onChange={event => handleDrugInput(event, index)} placeholder=\"500 mg, 10 ml, etc...\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Indicaciones:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"directions\" onChange={event => handleDrugInput(event, index)} placeholder=\"1 tableta c/8 horas, 1 inyección diaria, etc...\" />\n              </div>\n            </div> ) }\n        </div>\n        <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin\">\n          <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => addDrugField(event)} >\n            + Medicamento\n          </button>\n        </div>\n        \n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-border-pill uk-width-2-3 uk-width-1-4@m\" disabled={isButtonDisabled} >\n          Crear receta\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default PrescriptionForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst PrescriptionInfo = ({ prescription }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de receta: {moment(prescription.date).locale('es').format('LL')}</p>\n        <p>Doctor: {prescription.doctor}</p>\n        { prescription.image === 'Sin imagen registrada' ? null :\n            <div uk-lightbox=\"true\">\n              <a className=\"uk-button uk-button-default\" href={prescription.image} data-alt=\"Image\">Ver Imagen</a>\n            </div>\n        }\n        \n        { prescription.drugs.map( (drug, index) =>\n            <div className=\"uk-margin\" key={index}>\n              <h4>Medicamento {index+1}</h4>\n              <p>Nombre Genérico : {prescription.drugs[index].generic_name}</p>\n              <p>Nombre Comercial : {prescription.drugs[index].brand_name}</p>\n              <p>Presentación : {prescription.drugs[index].dosage_form}</p>\n              <p>Dosis : {prescription.drugs[index].dose}</p>\n              <p>Indicaciones : {prescription.drugs[index].directions}</p>\n            </div>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default PrescriptionInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useDrugsForm from '../../hooks/useDrugsForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport { getPrescriptions, createPrescription, getPrescription, editPrescription } from '../../services/prescription-services';\nimport { createDrug } from '../../services/drug-services';\n\nimport PrescriptionForm from './PrescriptionForm';\nimport PrescriptionInfo from './PrescriptionInfo';\n\nconst Prescription = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput, handleFileInput } = useDrugsForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ prescription, setPrescription] = useState({});\n  const [ prescriptions, setPrescriptions ] = useState([]);\n  const [ showForm, setShowForm ] = useState(false);\n  const [ showConsultation, setShowConsultation ] = useState(false);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  let drugs = [/*{'generic_name': null, brand_name: null, dosage_form: null, dose: null, indications: null}]*/];\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    if ( route !== 'create' && route !== 'read' ) {\n\n      getPrescriptions()\n      .then( res => {\n      \n        const { prescriptions } = res.data;\n        setPrescriptions(prescriptions);\n        setRoute('prescriptions');\n\n      });\n    }\n\n    \n    \n  }, [route]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true)\n\n    const formData = new FormData();      // Declare formData as new instance of FormData class\n    const { image } = form;     // Destructure profile_picture from form\n\n    console.log(drugs)\n    form.drugsJSON = JSON.stringify(drugs);\n    console.log(form)\n\n    // LearningCenterObject.observations = myArray;\n    // form.drugs = drugsArray\n    // console.log\n\n    // Iterate through every key in form object and append name:value to formData\n    for (let key in form) {\n\n      // If profile_picture, append as first item in array (currently 1 file allowed, index 0)\n      if ( key === 'image' ) formData.append(key, image[0]);\n\n      else formData.append(key, form[key]);\n      \n    }\n    \n    // Call edit service with formData as parameter, which includes form data for user profile information\n    createPrescription(formData)\n    .then( res => {\n\n      const { prescription } = res.data   // Destructure updated user document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡Tu receta fue creada exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('prescriptions');\n      setIsButtonDisabled(false);\n      setObjectHandler({});\n\n      // Save drug information\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n      setIsButtonDisabled(false)\n\n    });\n    \n  };\n\n  const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadPrescription = (prescription) => {\n    setPrescription(prescription);\n    setRoute('read');\n  }\n\n  const deleteConsultationObject = () => {\n    setObjectHandler(null);\n    setRoute('prescriptions');\n  }\n\n  return (\n\n    <div className=\"content\">\n      \n        { route === 'prescriptions' ? (\n          <div className=\"uk-section\">\n            <h2>Recetas</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nueva Receta\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { prescriptions.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado recetas</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center uk-visible\">Doctor</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { prescriptions ? \n                      prescriptions.map( (prescription, index) => \n                        <tr key={index}>\n                          <td className=\"uk-text-center\">{moment(prescription.date).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center uk-visible\">{`Dr. ${prescription.doctor}`}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadPrescription({prescription})} >\n                              Ver\n                            </button>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nueva Receta</h2>\n                  { objectHandler ?\n                      <h4>{objectHandler._id}</h4>\n                      : null\n                  }\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={deleteConsultationObject} >\n                    Regresar\n                  </button>\n                  <PrescriptionForm handleSubmit={handleSubmit} handleInput={handleInput} handleFileInput={handleFileInput} form={form} isButtonDisabled={isButtonDisabled} objectHandler={objectHandler} drugs={drugs}/>\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Receta</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('prescriptions')} >\n                    Regresar\n                  </button>\n                  <PrescriptionInfo {...prescription} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('prescriptions')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n    \n  )\n}\n\nexport default Prescription","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/prescriptions' : 'http://localhost:3000/api/prescriptions';\n\n// Export get function to retrieve all prescriptions of the current logged in user\nexport const getPrescriptions = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable prescription creation\nexport const createPrescription = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getPrescription = (prescriptionID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${prescriptionID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editPrescription = (prescriptionID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${prescriptionID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/medicalhistory' : 'http://localhost:3000/api/medicalhistory';\n\n// Export get function to retrieve all emergencies of the current logged in user\nexport const getMedicalHistories = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable MedicalHistory creation\nexport const createMedicalHistory = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getMedicalHistory = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editMedicalHistory = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useContext, useState } from 'react';           // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';                  // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                  // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                      // Import useForm custom hook\nimport UIkit from 'uikit';                                      // Import UIkit for notifications\nimport moment from 'moment';                                    // Import momentjs for date formatting\n\nimport { getMedicalHistory, createMedicalHistory, editMedicalHistory } from '../../services/medhistory-services';  // Import edit API call\n\nconst MedHistory = () => {\n\n  const { form, setForm, handleInput, handleFileInput } = useForm();\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  const [ medHistory, setMedHistory ] = useState({});\n  \n  const { user, setUser, route, setRoute } = useContext(AppContext); // Destructure user state variable\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n\n  let familyHistoryObj = {\n    \"Ninguno\": true,\n    \"Autoinmunes\": false,\n    \"Cardiacas\": false,\n    \"Cáncer\": false,\n    \"Convulsiones\": false,\n    \"Diabetes\": false,\n    \"Dislipidemia\": false,\n    \"Eclampsia\": false,\n    \"Hipertensión\": false,\n    \"Psiquiátricas\": false,\n    \"Tiroideas\": false,\n    \"Tuberculosis\": false,\n  }, healthHistoryObj = {\n    \"Ninguno\": true,\n    \"Cardiovascular\": false,\n    \"Gastrointestinal\": false,\n    \"Músculo-Esquelético\": false,\n    \"Dolor\": false,\n    \"Génito-Urinario\": false,\n    \"Respiratorio\": false,\n    \"Psiquiátrico\": false,\n    \"Órganos de los Sentidos\": false,\n    \"Otros\": false,\n    \"Dermatológico\": false,\n    \"Síntomas Generales\": false,\n    \"Endócrino\": false,\n    \"Hemato-Linfático\": false,\n    \"Sistema Inmunológico\": false,\n    \"Sistema Nervioso\": false,\n  }, addictionsObj = {\n    \"Ninguna\": true,\n    \"Alcoholismo\": false,\n    \"Sustancias Psicotrópicas\": false,\n    \"Tabaquismo\": false,\n    \"Otras\": false,\n  }, allergiesObj = {\n    \"Agentes Biológicos\": \"Ninguno\",\n    \"Alimentos\": \"Ninguno\",\n    \"Insectos\": \"Ninguno\",\n    \"Medicamentos\": \"Ninguno\",\n  }, weekly_exercise_hours = 0;\n\n  // Hook to update component when user state variable is modified\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getMedicalHistory()\n    .then( res => {\n\n      const { medicalHistory } = res.data;\n\n      console.log(medicalHistory)\n      setMedHistory(medicalHistory);\n\n    });\n\n  }, [user] );\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true);\n\n    form['family_history'] = familyHistoryObj;\n    form['health_history'] = healthHistoryObj;\n    form['addictions'] = addictionsObj;\n    form['allergies'] = allergiesObj;\n    form['weekly_exercise_hours'] = weekly_exercise_hours;\n\n    console.log(form)\n    \n    // Call edit service with formData as parameter, which includes form data for user profile information\n    if ( route === 'edit' ) {\n\n      editMedicalHistory(form)\n      .then( res => {\n\n        const { medicalHistory } = res.data   // Destructure updated user document from response\n        \n        setMedHistory(medicalHistory);              // Modify user state variable with updated information\n        setRoute('none');\n        setIsButtonDisabled(false);\n\n        // Send UIkit success notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> '¡Tu historial clínico fue actualizado exitosamente!'`,\n          pos: 'bottom-center',\n          status: 'success'\n        });\n\n      })\n      .catch( error => {\n\n        console.log(error);\n        setIsButtonDisabled(false);\n\n        // Send UIkit error notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> ${error}`,\n          pos: 'bottom-center',\n          status: 'danger'\n        });\n\n      });\n\n    }\n\n    if ( route !== 'edit' ) {\n\n      createMedicalHistory(form)\n      .then( res => {\n\n        const { medicalHistory } = res.data   // Destructure updated user document from response\n        \n        setMedHistory(medicalHistory);              // Modify user state variable with updated information\n        setRoute('none');\n        setIsButtonDisabled(false);\n\n        // Send UIkit success notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> '¡Tu historial clínico fue creado exitosamente!'`,\n          pos: 'bottom-center',\n          status: 'success'\n        });\n\n      })\n      .catch( error => {\n\n        console.log(error);\n        setIsButtonDisabled(false);\n\n        // Send UIkit error notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> ${error}`,\n          pos: 'bottom-center',\n          status: 'danger'\n        });\n\n      });\n\n    }\n\n  };\n\n  const handleMedHistoryInput = (event) => {\n\n    const { name, value, id } = event.target;\n\n    switch ( name ) {\n      case 'family_history':\n        familyHistoryObj[value] = !familyHistoryObj[value];\n        console.log(familyHistoryObj)\n        // setForm( prevState => ({...prevState, ['family_history']: familyHistoryObj}) );\n        break;\n      case 'health_history':\n        healthHistoryObj[value] = !healthHistoryObj[value];\n        console.log(healthHistoryObj)\n        // setForm( prevState => ({...prevState, ['health_history']: healthHistoryObj}) );\n        break;\n      case 'addictions':\n        addictionsObj[value] = !addictionsObj[value];\n        console.log(addictionsObj)\n        // setForm( prevState => ({...prevState, ['addictions']: addictionsObj}) );\n        break;\n      case 'allergies':\n        allergiesObj[id] = value;\n        console.log(allergiesObj)\n        // setForm( prevState => ({...prevState, ['allergies']: allergiesObj}) );\n        break;\n      case 'weekly_exercise_hours':\n        weekly_exercise_hours = parseInt(value)\n    }\n\n    console.log(familyHistoryObj)\n    console.log(healthHistoryObj)\n    console.log(addictionsObj)\n    console.log(allergiesObj)\n  }\n\n  return (\n    <div className=\"content\">\n      \n      { route === 'none' && !medHistory ? (\n          <div className=\"uk-section\">\n            <h2>Mis Antecedentes</h2>\n            <div className=\"uk-container uk-overflow-auto\">\n              <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n                <h4 className=\"uk-margin\">Antecedentes Heredo-Familiares</h4>\n                <div className=\"uk-margin\">\n                  <div className=\"uk-form-label\">Enfermedades o Síntomas:</div>\n                  <div className=\"uk-form-controls uk-flex\">\n                    <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Ninguno\" defaultChecked={true} onChange={handleMedHistoryInput} /> Ninguno</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Convulsiones\" onChange={handleMedHistoryInput} /> Convulsiones</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Cáncer\" onChange={handleMedHistoryInput} /> Cáncer</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Diabetes\" onChange={handleMedHistoryInput} /> Diabetes</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Dislipidemia\" onChange={handleMedHistoryInput} /> Dislipidemia</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Eclampsia\" onChange={handleMedHistoryInput} /> Eclampsia</label>\n                    </div>\n                    <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Autoinmunes\" onChange={handleMedHistoryInput} /> Autoinmunes</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Cardiacas\" onChange={handleMedHistoryInput} /> Cardiacas</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Psiquiátricas\" onChange={handleMedHistoryInput} /> Psiquiátricas</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Tiroideas\" onChange={handleMedHistoryInput} /> Tiroideas</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Hipertensión\" onChange={handleMedHistoryInput} /> Hipertensión</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Tuberculosis\" onChange={handleMedHistoryInput} /> Tuberculosis</label>\n                    </div>\n                  </div>\n                </div>\n                <h4 className=\"uk-margin\">Antecedentes Personales Patológicos</h4>\n                <div className=\"uk-margin\">\n                  <div className=\"uk-form-label\">Sistemas o Aparatos:</div>\n                  <div className=\"uk-form-controls uk-flex\">\n                    <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Ninguno\" defaultChecked={true} onChange={handleMedHistoryInput} /> Ninguno</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Cardiovascular\" onChange={handleMedHistoryInput} /> Cardiovascular</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Gastrointestinal\" onChange={handleMedHistoryInput} /> Gastrointestinal</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Músculo-Esquelético\" onChange={handleMedHistoryInput} /> Músculo-esquelético</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Dolor\" onChange={handleMedHistoryInput} /> Dolor</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Génito-Urinario\" onChange={handleMedHistoryInput} /> Génito-Urinario</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Respiratorio\" onChange={handleMedHistoryInput} /> Respiratorio</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Psiquiátrico\" onChange={handleMedHistoryInput} /> Psiquiátrico</label>\n                    </div>\n                    <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Órganos de los Sentidos\" onChange={handleMedHistoryInput} /> Órganos de Sentidos</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Otros\" onChange={handleMedHistoryInput} /> Otros</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Dermatológico\" onChange={handleMedHistoryInput} /> Dermatológico</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Síntomas Generales\" onChange={handleMedHistoryInput} /> Síntomas Generales</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Endócrino\" onChange={handleMedHistoryInput} /> Endócrino</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Hemato-Linfático\" onChange={handleMedHistoryInput} /> Hemato-Linfático</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Sistema Inmunológico\" onChange={handleMedHistoryInput} /> Sist. Inmunológico</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Sistema Nervioso\" onChange={handleMedHistoryInput} /> Sist. Nervioso</label>\n                    </div>\n                  </div>\n                </div>\n                <h4 className=\"uk-margin\">Antecedentes Personales No Patológicos</h4>\n                <div className=\"uk-margin\">\n                  <div className=\"uk-form-controls\">\n                    <label className=\"uk-form-label\" htmlFor=\"date\">Horas de Actividad Física a la Semana:</label>\n                    <div className=\"uk-form-controls\">\n                      <input className=\"uk-input\" type=\"number\" name=\"weekly_exercise_hours\" onChange={handleMedHistoryInput} />\n                    </div>\n                    <div className=\"uk-form-label\">Adicciones:</div>\n                    <div className=\"uk-flex uk-flex-column\">\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Ninguna\" defaultChecked={true} onChange={handleMedHistoryInput} /> Ninguna</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Alcoholismo\" onChange={handleMedHistoryInput} /> Alcoholismo</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Sustancias Psicotrópicas\" onChange={handleMedHistoryInput} /> Sustancias Psicotrópicas</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Tabaquismo\" onChange={handleMedHistoryInput} /> Tabaquismo</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Otras\" onChange={handleMedHistoryInput} /> Otras</label>\n                    </div>\n                  </div>\n                </div>\n                <h4 className=\"uk-margin\">Alergias</h4>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"date\">Agentes Biológicos:</label>\n                  <div className=\"uk-form-controls\">\n                    <input className=\"uk-input\" type=\"text\" name=\"allergies\" id=\"Agentes Biológicos\" onChange={handleMedHistoryInput} placeholder=\"Introducir alergéno\" />\n                  </div>\n                  <label className=\"uk-form-label\" htmlFor=\"date\">Alimentos:</label>\n                  <div className=\"uk-form-controls\">\n                    <input className=\"uk-input\" type=\"text\" name=\"allergies\" id=\"Alimentos\" onChange={handleMedHistoryInput} placeholder=\"Introducir alergéno\" />\n                  </div>\n                  <label className=\"uk-form-label\" htmlFor=\"date\">Insectos:</label>\n                  <div className=\"uk-form-controls\">\n                    <input className=\"uk-input\" type=\"text\" name=\"allergies\" id=\"Insectos\" onChange={handleMedHistoryInput} placeholder=\"Introducir alergéno\" />\n                  </div>\n                  <label className=\"uk-form-label\" htmlFor=\"date\">Medicamentos:</label>\n                  <div className=\"uk-form-controls\">\n                    <input className=\"uk-input\" type=\"text\" name=\"allergies\" id=\"Medicamentos\" onChange={handleMedHistoryInput} placeholder=\"Introducir alergéno\" />\n                  </div>\n                </div>\n                <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n                  <button type=\"submit\" className=\"uk-button uk-button-primary uk-width-2-3 uk-width-1-4@m uk-border-pill\" disabled={isButtonDisabled} onClick={event => setRoute('none')} >\n                    Crear Historial\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        ) : route === 'none' ? (\n          <div className=\"uk-section\">\n            <h2>Mis Antecedentes</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('edit')} >\n              Editar historial\n            </button>\n            <div className=\"uk-container uk-overflow-auto\">\n              <div className=\"uk-margin\">\n                <h4 className=\"uk-margin\">Antecedentes Heredo-Familiares</h4>\n                <ul className=\"uk-list\">\n                  { medHistory.family_history ? Object.entries(medHistory.family_history).map( (entry, index) => {\n                    if (entry[1] === true) \n                      return (<li key={index}>{entry[0]}</li>) \n                    else \n                      return null\n                  }) : 'Cargando' }\n                </ul>\n                <h4 className=\"uk-margin\">Antecedentes Personales Patológicos</h4>\n                <ul className=\"uk-list\">\n                  { medHistory.health_history ? Object.entries(medHistory.health_history).map( (entry, index) => {\n                    if (entry[1] === true) \n                    return (<li key={index}>{entry[0]}</li>) \n                  else \n                    return null\n                }) : 'Cargando' }\n                </ul>\n                <h4 className=\"uk-margin\">Antecedentes Personales No Patológicos</h4>\n                <p>Horas de actividad física a la semana: {medHistory.weekly_exercise_hours}</p>\n                <p>Adicciones:</p>\n                <ul className=\"uk-list\">\n                  { medHistory.addictions ? Object.entries(medHistory.addictions).map( (entry, index) => {\n                    if (entry[1] === true) \n                    return (<li key={index}>{entry[0]}</li>) \n                  else \n                    return null\n                }) : 'Cargando' }\n                </ul>\n                <h4 className=\"uk-margin\">Alergias</h4>\n                <ul className=\"uk-list\">\n                  { medHistory.allergies ? Object.entries(medHistory.allergies).map( (entry, index) => {\n                    \n                    return (<li key={index}>{entry[0]}: {entry[1]}</li>) \n                  \n                }) : 'Cargando' }\n                </ul>\n              </div>\n          </div>\n        </div>\n        ) : (\n          <div className=\"uk-section\">\n            <h2>Editar mis Antecedentes</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('none')} >\n              Regresar\n            </button>\n            <div className=\"uk-container uk-overflow-auto\">\n              <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n                <h4 className=\"uk-margin\">Antecedentes Heredo-Familiares</h4>\n                <div className=\"uk-margin\">\n                  <div className=\"uk-form-label\">Enfermedades o Síntomas:</div>\n                  <div className=\"uk-form-controls uk-flex\">\n                    <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                      {\n                        Object.entries(medHistory.family_history).slice(0,6).map( (entry, index) => (\n                          <label key={index}>\n                            <input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" defaultValue={entry[0]} defaultChecked={entry[1]} onChange={handleMedHistoryInput} />\n                            {\" \" + entry[0]}\n                          </label>\n                          )\n                        )\n                      }\n                    </div>\n                    <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                      {\n                        Object.entries(medHistory.family_history).slice(6).map( (entry, index) => (\n                          <label key={index}>\n                            <input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" defaultValue={entry[0]} defaultChecked={entry[1]} onChange={handleMedHistoryInput} />\n                            {\" \" + entry[0]}\n                          </label>\n                          )\n                        )\n                      }\n                    </div>\n                  </div>\n                </div>\n                <h4 className=\"uk-margin\">Antecedentes Personales Patológicos</h4>\n                <div className=\"uk-margin\">\n                  <div className=\"uk-form-label\">Sistemas o Aparatos:</div>\n                  <div className=\"uk-form-controls uk-flex\">\n                    <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                      {\n                        Object.entries(medHistory.health_history).slice(0,8).map( (entry, index) => (\n                          <label key={index}>\n                            <input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" defaultValue={entry[0]} defaultChecked={entry[1]} onChange={handleMedHistoryInput} />\n                            {\" \" + entry[0]}\n                          </label>\n                          )\n                        )\n                      }\n                    </div>\n                    <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                      {\n                        Object.entries(medHistory.health_history).slice(8).map( (entry, index) => (\n                          <label key={index}>\n                            <input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" defaultValue={entry[0]} defaultChecked={entry[1]} onChange={handleMedHistoryInput} />\n                            {\" \" + entry[0]}\n                          </label>\n                          )\n                        )\n                      }\n                    </div>\n                  </div>\n                </div>\n                <h4 className=\"uk-margin\">Antecedentes Personales No Patológicos</h4>\n                <div className=\"uk-margin\">\n                  <div className=\"uk-form-controls\">\n                    <label className=\"uk-form-label\" htmlFor=\"date\">Horas de Actividad Física a la Semana:</label>\n                    <div className=\"uk-form-controls\">\n                      <input className=\"uk-input\" type=\"number\" name=\"weekly_exercise_hours\" defaultValue={weekly_exercise_hours} onChange={handleMedHistoryInput} />\n                    </div>\n                    <div className=\"uk-form-label\">Adicciones:</div>\n                    <div className=\"uk-flex uk-flex-column\">\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Ninguna\" defaultChecked={true} onChange={handleMedHistoryInput} /> Ninguna</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Alcoholismo\" onChange={handleMedHistoryInput} /> Alcoholismo</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Sustancias Psicotrópicas\" onChange={handleMedHistoryInput} /> Sustancias Psicotrópicas</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Tabaquismo\" onChange={handleMedHistoryInput} /> Tabaquismo</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Otras\" onChange={handleMedHistoryInput} /> Otras</label>\n                    </div>\n                  </div>\n                </div>\n                <h4 className=\"uk-margin\">Alergias</h4>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"date\">Agentes Biológicos:</label>\n                  <div className=\"uk-form-controls\">\n                    <input className=\"uk-input\" type=\"text\" name=\"allergies\" id=\"Agentes Biológicos\" onChange={handleMedHistoryInput} placeholder=\"Introducir alergéno\" />\n                  </div>\n                  <label className=\"uk-form-label\" htmlFor=\"date\">Alimentos:</label>\n                  <div className=\"uk-form-controls\">\n                    <input className=\"uk-input\" type=\"text\" name=\"allergies\" id=\"Alimentos\" onChange={handleMedHistoryInput} placeholder=\"Introducir alergéno\" />\n                  </div>\n                  <label className=\"uk-form-label\" htmlFor=\"date\">Insectos:</label>\n                  <div className=\"uk-form-controls\">\n                    <input className=\"uk-input\" type=\"text\" name=\"allergies\" id=\"Insectos\" onChange={handleMedHistoryInput} placeholder=\"Introducir alergéno\" />\n                  </div>\n                  <label className=\"uk-form-label\" htmlFor=\"date\">Medicamentos:</label>\n                  <div className=\"uk-form-controls\">\n                    <input className=\"uk-input\" type=\"text\" name=\"allergies\" id=\"Medicamentos\" onChange={handleMedHistoryInput} placeholder=\"Introducir alergéno\" />\n                  </div>\n                </div>\n                <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n                  <button type=\"submit\" className=\"uk-button uk-button-primary uk-width-2-3 uk-width-1-4@m uk-border-pill\" disabled={isButtonDisabled} >\n                    Guardar Cambios\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )\n      }\n      </div>)\n\n}\n\nexport default MedHistory","import React from 'react';\nimport CatalogSearchbar from '../common/CatalogSearchbar'\n\nconst HospitalizationForm = ({ handleSubmit, handleInput, form, isButtonDisabled }) => {\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n      <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">¿Ingresó usted al quirófano?</label>\n        <div className=\"uk-margin uk-flex uk-flex-around\">\n          <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"isSurgery\" value={false} />No</label>\n          <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"isSurgery\" value={true} />Sí</label>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de admisión:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"admission_date\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de alta:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"discharge_date\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Motivo de visita</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"chief_complaint\" onChange={handleInput} placeholder=\"Dolor, fiebre, etc...\" />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Diagnóstico</label>\n        <div className=\"uk-form-controls\">\n          <CatalogSearchbar type=\"diagnosis\" form={form} handleFormInput={handleInput}/>\n        </div>\n        \n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Clínica</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"facility_name\" onChange={handleInput} placeholder=\"Hospital General de México...\" />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Observaciones y comentarios</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"description\" onChange={handleInput} placeholder=\"Describir evento\" />\n        </div>\n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-border-pill uk-width-2-3 uk-width-1-4@m\" disabled={isButtonDisabled} >\n          Crear Visita\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default HospitalizationForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst HospitalizationInfo = ({ hospitalization }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de admisión: {moment(hospitalization.admission_date).locale('es').format('LL')}</p>\n        <p>Motivo de visita: {hospitalization.chief_complaint}</p>\n        <p>Diagnóstico: {hospitalization.diagnosis}</p>\n        <p>Clínica: {hospitalization.facility_name}</p>\n        <p>Observaciones y comentarios: {hospitalization.description}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default HospitalizationInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport { AppContext } from '../../AppContext';\nimport useForm from '../../hooks/useForm';\nimport UIkit from 'uikit';\nimport moment from 'moment';\n\nimport { getHospitalizations, getHospitalization, createHospitalization } from '../../services/hospitalization-services';\nimport HospitalizationForm from './HospitalizationForm';\nimport HospitalizationInfo from './HospitalizationInfo';\n\nconst Hozpitalization = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ hospitalization, setHospitalization ] = useState({});\n  const [ hospitalizations, setHospitalizations ] = useState([]);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getHospitalizations()\n    .then( res => {\n      \n      const { hospitalizations } = res.data;\n      setHospitalizations(hospitalizations);\n      setRoute('hospitalizations');\n\n    })\n    \n  }, [isButtonDisabled]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();\n    setIsButtonDisabled(true);\n    console.log(form)\n\n    createHospitalization(form)\n    .then( res => {\n\n      const { hospitalization } = res.data    // Destructure updated preferences document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡La hospitalización fue creada exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('hospitalizations');\n      setIsButtonDisabled(false);\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n      \n      setIsButtonDisabled(false);\n\n    });\n\n  }\n\n  // const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadHospitalization = (hospitalization) => {\n    setHospitalization(hospitalization);\n    setRoute('read');\n  }\n\n  const goToPrescription = (event, hospitalization, newRoute) => {\n    event.preventDefault();\n    setHospitalization(hospitalization);\n    setObjectHandler(hospitalization);\n    setRoute(newRoute);\n    console.log(objectHandler)\n  }\n\n  const goToStudies = (event, hospitalization, newRoute) => {\n    event.preventDefault();\n    setObjectHandler(hospitalization);\n    setRoute(newRoute);\n    console.log(objectHandler);\n  }\n\n  return (\n    <div className=\"content\">\n      \n        { route === 'hospitalizations' ? (\n          <div className=\"uk-section\">\n            <h2>Hospitalizaciones</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nueva Hospitalización\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { hospitalizations.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado hospitalizaciones</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center\">Diagnóstico</th>\n                    <th className=\"uk-text-center uk-visible@s\">Clínica</th>\n                    <th className=\"uk-text-center uk-visible@s\">Estancia</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { hospitalizations ? \n                      hospitalizations.map( (hospitalization, index) => \n                        <tr key={index} >\n                          <td className=\"uk-text-center\">{moment(hospitalization.admission_date).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center\">{hospitalization.diagnosis ? hospitalization.diagnosis : 'No definido'}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{hospitalization.facility_name}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{`No disponible`}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadHospitalization({hospitalization})} >\n                              Ver\n                            </button>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nueva Hospitalización</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('hospitalizations')} >\n                    Regresar\n                  </button>\n                  <HospitalizationForm handleSubmit={handleSubmit} handleInput={handleInput} form={form} isButtonDisabled={isButtonDisabled} />\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Hospitalización</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('hospitalizations')} >\n                    Regresar\n                  </button>\n                  <HospitalizationInfo {...hospitalization} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('hospitalizations')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n  )\n}\n\nexport default Hozpitalization","import React from 'react';\nimport CatalogSearchbar from '../common/CatalogSearchbar'\n\nconst EmergencyForm = ({ handleSubmit, handleInput, form, isButtonDisabled }) => {\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de urgencia:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"date\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Motivo de visita</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"chief_complaint\" onChange={handleInput} placeholder=\"Dolor, fiebre, etc...\" />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Diagnóstico</label>\n        <div className=\"uk-form-controls\">\n          <CatalogSearchbar type=\"diagnosis\" form={form} handleFormInput={handleInput}/>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Clínica</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"facility_name\" onChange={handleInput} placeholder=\"Hospital General de México...\" />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Observaciones y comentarios</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"description\" onChange={handleInput} placeholder=\"Describir evento\" />\n        </div>\n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-border-pill uk-width-2-3 uk-width-1-4@m\" disabled={isButtonDisabled} >\n          Crear Urgencia\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default EmergencyForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst EmergencyInfo = ({ emergency }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de visita: {moment(emergency.date).locale('es').format('LL')}</p>\n        <p>Motivo de visita: {emergency.chief_complaint}</p>\n        <p>Diagnóstico: {emergency.diagnosis}</p>\n        <p>Clínica: {emergency.facility_name}</p>\n        <p>Observaciones y comentarios: {emergency.description}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default EmergencyInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport { AppContext } from '../../AppContext';\nimport useForm from '../../hooks/useForm';\nimport UIkit from 'uikit';\nimport moment from 'moment';\n\nimport { getEmergencies, getEmergency, createEmergency } from '../../services/emergency-services';\nimport EmergencyForm from './EmergencyForm';\nimport EmergencyInfo from './EmergencyInfo';\n\nconst Emergency = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ emergency, setEmergency ] = useState({});\n  const [ emergencies, setEmergencies ] = useState([]);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getEmergencies()\n    .then( res => {\n      \n      const { emergencies } = res.data;\n      setEmergencies(emergencies);\n      setRoute('emergencies');\n\n    })\n    \n  }, [isButtonDisabled]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();\n    setIsButtonDisabled(true);\n    console.log(form)\n\n    createEmergency(form)\n    .then( res => {\n\n      const { emergency } = res.data    // Destructure updated preferences document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡La urgencia fue creada exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('emergencies');\n      setIsButtonDisabled(false);\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n      \n      setIsButtonDisabled(false);\n\n    });\n\n  }\n\n  // const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadEmergency = (emergency) => {\n    setEmergency(emergency);\n    setRoute('read');\n  }\n\n  const goToPrescription = (event, emergency, newRoute) => {\n    event.preventDefault();\n    setEmergency(emergency);\n    setObjectHandler(emergency);\n    setRoute(newRoute);\n    console.log(objectHandler)\n  }\n\n  const goToStudies = (event, emergency, newRoute) => {\n    event.preventDefault();\n    setObjectHandler(emergency);\n    setRoute(newRoute);\n    console.log(objectHandler);\n  }\n\n  return (\n    <div className=\"content\">\n      \n        { route === 'emergencies' ? (\n          <div className=\"uk-section\">\n            <h2>Urgencias</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nueva Urgencia\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { emergencies.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado urgencias</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center uk-visible@s\">Motivo de visita</th>\n                    <th className=\"uk-text-center\">Diagnóstico</th>\n                    <th className=\"uk-text-center uk-visible@s\">Clínica</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { emergencies ? \n                      emergencies.map( (emergency, index) => \n                        <tr key={index} >\n                          <td className=\"uk-text-center\">{moment(emergency.date).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{emergency.chief_complaint}</td>\n                          <td className=\"uk-text-center\">{emergency.diagnosis}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{emergency.facility_name}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadEmergency({emergency})} >\n                              Ver\n                            </button>\n                          </td>\n                          <td>\n                            <a href={`#modal-sections-${index}`} uk-toggle={`target: #modal-sections-${index}`}>\n                              <span className=\"uk-margin-small-right\" uk-icon=\"more-vertical\"></span>\n                            </a>\n                            <div id={`modal-sections-${index}`} className=\"uk-flex-top\" uk-modal=\"true\">\n                              <div className=\"uk-modal-dialog uk-margin-auto-vertical\">\n                                <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\" />\n                                <div className=\"uk-modal-header\">\n                                  <h3 className=\"uk-text-center\">Datos de la Urgencia</h3>\n                                  <p>Fecha: {moment(emergency.date).locale('es').format('LL')}</p>\n                                  <p>Clínica: {emergency.facility_name}</p>\n                                </div>\n                                <div className=\"uk-modal-body uk-flex uk-flex-column\">\n                                  { emergency.treatment ? (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToPrescription(event, emergency, 'read')} >\n                                        <NavLink to=\"/recetas\">Ver Receta</NavLink>\n                                      </button>\n                                    ) : (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToPrescription(event, emergency, 'create')} >\n                                        <NavLink to=\"/recetas\">Agregar Receta</NavLink>\n                                      </button>\n                                    )\n                                  }\n                                  { emergency.treatment ? (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToStudies(event, emergency, 'read')} >\n                                        <NavLink to=\"/estudios\">Ver Estudios</NavLink>\n                                      </button>\n                                    ) : (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToStudies(event, emergency, 'create')} >\n                                        <NavLink to=\"/estudios\">Agregar Estudios</NavLink>\n                                      </button>\n                                    )\n                                  }\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nueva Urgencia</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('emergencies')} >\n                    Regresar\n                  </button>\n                  <EmergencyForm handleSubmit={handleSubmit} handleInput={handleInput} form={form} isButtonDisabled={isButtonDisabled} />\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Urgencia</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('emergencies')} >\n                    Regresar\n                  </button>\n                  <EmergencyInfo {...emergency} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('emergencies')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n  )\n}\n\nexport default Emergency","import React, { useEffect, useState } from 'react'\nimport cie10 from '../../catalogs/cie10.json'\nimport procedures from '../../catalogs/procedimientos.json'\nimport drugs from '../../catalogs/drugs.json'\n\nconst CatalogSearchbar = ({type, form, handleFormInput}) => {\n\n  const [ searchResults, setSearchResults ] = useState('');\n  const [ searchValue, setSearchValue ] = useState('');\n  const [ showDrop, setShowDrop ] = useState(false);\n\n  const handleInput = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  let results = [];\n\n  useEffect( () => {\n\n    switch (type) {\n      case \"diagnosis\": results = cie10.filter( disease =>\n        disease.NOMBRE.toLowerCase().includes(searchValue)\n        );\n        break;\n\n      case \"procedure\": results = procedures.filter( disease =>\n        disease.PRO_NOMBRE.toLowerCase().includes(searchValue)\n        );\n        break;\n\n      case \"drugs\": results = drugs.filter( disease =>\n        disease.generic_name.toLowerCase().includes(searchValue)\n        );\n        break;\n    }\n\n    setSearchResults(results);\n\n    if ( results.length <= 15 ) {\n      setShowDrop(true);\n    }\n    console.log(searchResults)\n\n  }, [searchValue]);\n\n\n  return (\n      <div className=\"uk-margin uk-width-1-1\">\n        <div className=\"uk-search uk-search-default uk-width-1-1\">\n          <span className=\"uk-search-icon-flip\" uk-search-icon=\"true\"></span>\n          <input\n            className=\"uk-search-input uk-text-center\"\n            type=\"search\"\n            placeholder={ type === 'diagnosis' ? \"Busca padecimiento...\" : type === 'drugs' ? \"Busca por nombre genérico...\" : \"Busca procedimiento...\"}\n            value={searchValue}\n            onChange={handleInput}\n          />\n        </div>\n        { showDrop ? (\n            <select className=\"uk-select\" name=\"generic_name\" onChange={handleFormInput}>\n              {searchResults.map( (drug, index) => <option key={index} value={drug.generic_name} >{drug.generic_name}</option> )}\n            </select>\n          ) : null \n        }\n      </div>\n  )\n}\n\nexport default CatalogSearchbar","import React from 'react';\nimport DrugSearchbar from '../common/DrugSearchbar'\n\nconst DrugForm = ({ handleSubmit, handleInput, form, isButtonDisabled }) => {\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de inicio del tratamiento:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"date_added\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre de patente:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"brand_name\" onChange={handleInput} placeholder=\"Tempra, Aspirina...\" />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre genérico:</label>\n        <div className=\"uk-form-controls\">\n          <DrugSearchbar type=\"drugs\" form={form} handleFormInput={handleInput}/>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Dosis:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"dose\" onChange={handleInput} placeholder=\"500 mg, 5 mg, etc...\" />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Presentación:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"dosage_form\" onChange={handleInput} placeholder=\"Tableta, jarabe, etc\" />\n        </div>\n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-width-2-3 uk-border-pill\" disabled={isButtonDisabled} >\n          Agregar\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default DrugForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst PrescriptionInfo = ({ drug }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de inicio de tratamiento: {moment(drug.date).locale('es').format('LL')}</p>\n        <p>Nombre Genérico : {drug.generic_name}</p>\n        <p>Nombre Comercial : {drug.brand_name}</p>\n        <p>Presentación : {drug.dosage_form}</p>\n        <p>Dosis : {drug.dose}</p>\n      </div>\n      <div className=\"uk-flex uk-flex-column uk-flex-middle\">\n        <div className=\"uk-button uk-button-primary uk-width-2-3 uk-width-1-4@m uk-border-pill uk-margin\">\n          Terminar\n        </div>\n        <div className=\"uk-button uk-button-danger uk-width-2-3 uk-width-1-4@m uk-border-pill\">\n          Eliminar\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PrescriptionInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport { getDrugs, createDrug, getDrug, editDrug } from '../../services/drug-services';\n\nimport DrugForm from './DrugForm';\nimport DrugInfo from './DrugInfo';\n\nconst Drug = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput, handleFileInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ drug, setDrug] = useState({});\n  const [ drugs, setDrugs ] = useState([]);\n  const [ showForm, setShowForm ] = useState(false);\n  const [ showDrug, setShowDrug ] = useState(false);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    if ( route !== 'create' && route !== 'read' ) {\n\n      getDrugs()\n      .then( res => {\n      \n        const { drugs } = res.data;\n        setDrugs(drugs);\n        setRoute('drugs');\n\n      });\n    }\n\n    \n    \n  }, [route]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true)\n\n    createDrug(form)\n    .then( res => {\n\n      const { drug } = res.data    // Destructure updated preferences document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡El registro de medicamento fue creado exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('drugs');\n      setIsButtonDisabled(false);\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n      \n      setIsButtonDisabled(false);\n\n    });\n    \n  };\n\n  const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadDrug = (drug) => {\n    setDrug(drug);\n    setRoute('read');\n  }\n\n  const deleteDrugObject = () => {\n    setObjectHandler(null);\n    setRoute('drugs');\n  }\n\n  return (\n\n    <div className=\"content\">\n      \n        { route === 'drugs' ? (\n          <div className=\"uk-section\">\n            <h2>Mis Medicamentos</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nuevo Medicamento\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { drugs.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado medicamentos</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha Agregada</th>\n                    <th className=\"uk-text-center uk-visible\">Medicamento</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { drugs ? \n                      drugs.map( (drug, index) => \n                        <tr key={index}>\n                          <td className=\"uk-text-center\">{moment(drug.date_added).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center uk-visible\">{drug.brand_name}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadDrug({drug})} >\n                              Ver\n                            </button>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nuevo Medicamento</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={deleteDrugObject} >\n                    Regresar\n                  </button>\n                  <DrugForm handleSubmit={handleSubmit} handleInput={handleInput} handleFileInput={handleFileInput} form={form} isButtonDisabled={isButtonDisabled} objectHandler={objectHandler}/>\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Medicamento</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('drugs')} >\n                    Regresar\n                  </button>\n                  <DrugInfo {...drug} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('drugs')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n    \n  )\n}\n\nexport default Drug","import React, { useContext } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { AppContext } from './AppContext';\n\n// Import Components for navigation\nimport Landing from './components/landing/Landing';\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\nimport Profile from './components/profile/Profile';\n// import Preferences from './components/profile/Preferences';\nimport Home from './components/home/Home';\n// import DoctorLanding from './components/doctor/DoctorLanding';\n// import DoctorHome from './components/doctor/DoctorHome';\n// import PatientHome from './components/patient/PatientHome';\n// import Patients from './components/doctor/myPatients/Patients'\nimport Study from './components/study/Study';\nimport Disease from './components/disease/Disease';\nimport Consultation from './components/consultation/Consultation';\nimport Prescription from './components/prescription/Prescription';\nimport MedHistory from './components/medHistory/MedHistory';\nimport CatalogSearchbar from './components/common/CatalogSearchbar';\nimport Hospitalization from './components/hospitalization/Hozpitalization';\nimport Emergency from './components/emergency/Emergency'\nimport ConsultationFormSpecial from './components/consultation/ConsultationFormSpecial'\nimport Drug from './components/drug/Drug'\n// import Calendar from './components/schedule/Calendar';\n\nconst Router = () => {\n\n  const { user, setRoute } = useContext(AppContext); // Destructure user state variable\n\n  const handleRoute = (newRoute) => setRoute(newRoute);\n\n  return (\n    <Switch>\n\n      <Route exact path=\"/\">\n        <Landing />\n      </Route>\n\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n      \n      <Route path=\"/login\">\n        <Login />\n      </Route>\n\n      <Route path=\"/registro\">\n        <Signup />\n      </Route>\n\n      <Route path=\"/home\">\n        <Home />\n      </Route>\n\n      <Route path=\"/perfil\">\n        <Profile />\n      </Route>\n\n      <Route path=\"/antecedentes\">\n        <MedHistory />\n      </Route>\n\n      <Route path=\"/padecimientos\">\n        <Disease />\n      </Route>\n\n      <Route path=\"/consultas\">\n        <Consultation />\n      </Route>\n\n      <Route path=\"/medicamentos\">\n        <Drug />\n      </Route>\n\n      <Route path=\"/recetas\">\n        <Prescription />\n      </Route>\n\n      <Route path=\"/estudios\">\n        <Study />\n      </Route>\n\n      <Route path=\"/hospitalizaciones\">\n        <Hospitalization />\n      </Route>\n\n      <Route path=\"/urgencias\">\n        <Emergency />\n      </Route>\n\n      <Route path=\"/test\">\n        <ConsultationFormSpecial />\n      </Route>\n\n    </Switch>\n  )\n};\n\nexport default Router;","import React, { useContext } from 'react';                // Import React and useContext hook\nimport { Link, NavLink } from 'react-router-dom';         // Import NavLink for \"navigation\"\nimport { useHistory } from 'react-router-dom';            // Import useHistory for \"redirection\"\nimport { AppContext }  from '../../AppContext';           // Import AppContext to use created context\nimport { logout } from '../../services/auth-services';    // Import logout service for logout functionality\nimport logo from '../../images/icons/blue-icon.svg'\n\n\n// Declare Nav functional component (Navigation Bar)\nconst Navbar = () => {\n  \n  // Destructure user state variable and resetUserContext function from context\n  const { user, setRoute, resetUserContext } = useContext(AppContext);\n  // Destructure push method from useHistory to \"redirect\" user\n  const { push } = useHistory();\n\n  // Declare function for handling logout button\n  const handleLogout = () => {\n\n    logout();                   // Execute logout function (clear localStorage)\n    push('/login');             // Redirect user to login\n    resetUserContext();         // delete user data from context to an empty object\n    closeMenu();\n\n  };\n\n  const handleRoute = (event, newRoute) => {\n    \n    event.preventDefault();               // Prevent page reloading after submit action\n    setRoute(newRoute);                   // Update route state variable with route sent as parameter\n    closeMenu();\n\n  }\n\n  const closeMenu = () => {\n    const toggle = document.getElementById('toggle');\n    toggle.checked = !toggle.checked;\n  }\n\n  return (\n\n    <nav className=\"uk-navbar uk-navbar-container uk-navbar-transparent uk-flex uk-flex-between uk-flex-middle uk-flex-wrap\">\n      \n      <ul className=\"uk-navbar-nav uk-height-1-1\">\n          <li className=\"uk-active uk-flex uk-flex-middle\">\n            <NavLink to=\"/\">\n              <div className=\"uk-margin-left\">\n                  <img src={logo} alt=\"logo\" width=\"48px\" height=\"48px\" className=\"uk-img\" />\n              </div>\n            </NavLink>\n          </li>\n          <li className=\"uk-active uk-flex uk-flex-middle uk-height-1-1\">\n              <NavLink to=\"/\">\n                B-Health\n              </NavLink>\n          </li>\n      </ul>\n\n      <label id=\"nav-menu\" htmlFor=\"toggle\" className=\"uk-margin-right uk-height-1-1\"><span uk-icon=\"menu\"></span></label>\n      <input type=\"checkbox\" id=\"toggle\"/>\n      \n      \n          \n          { user._id ? \n            <ul className=\"menu uk-navbar-nav\">\n              <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")}>\n                <NavLink to=\"/perfil\">\n                  <div className=\"uk-width-auto uk-margin-small-right\">\n                    <img className=\"uk-border-circle\" width={40} height={40} src={user.profile_picture} alt=\"User profile\" />\n                  </div>\n                  <p className=\"uk-margin-remove\">Mi Perfil</p>\n                </NavLink>\n              </li>\n              <li className=\"uk-active\">\n                <NavLink to=\"/login\">\n                  <button className=\"uk-button uk-button-primary uk-border-pill\" onClick={handleLogout} >\n                    Logout\n                  </button>\n                </NavLink>\n              </li>\n              <div className=\"mobile-only uk-overflow-auto\">\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/home\">Mi Salud</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/antecedentes\">Antecedentes</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/padecimientos\">Padecimientos</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/consultas\">Consultas</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/medicamentos\">Medicamentos</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/recetas\">Recetas</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/estudios\">Estudios</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/urgencias\">Urgencias</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/hospitalizaciones\">Hospitalizaciones</NavLink>\n                </li>\n                {/* <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/agenda\">Agenda</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/terapias\">Otras Terapias</NavLink>\n                </li> */}\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/tienda\">Tienda</NavLink>\n                </li>\n              </div>\n            </ul>\n            :\n            <ul className=\"menu uk-navbar-nav\">\n              <li className=\"uk-active uk-flex uk-flex-center uk-flex-middle\" onClick={closeMenu} ><Link to=\"/servicios\">Servicios</Link></li>\n              <li className=\"uk-active uk-flex uk-flex-center uk-flex-middle\" onClick={closeMenu} ><Link to=\"/nosotros\">Nosotros</Link></li>\n              <li className=\"uk-active uk-flex uk-flex-center uk-flex-middle\" onClick={closeMenu} >\n                <Link to=\"/login\" className=\"uk-margin-remove uk-padding-remove\">\n                  <button className=\"uk-button uk-button-white uk-border-pill\">\n                    Inicia Sesión\n                  </button>\n                </Link>\n              </li>\n              <li className=\"uk-active uk-flex uk-flex-center uk-flex-middle\" onClick={closeMenu} >\n                <Link to=\"/registro\">\n                  <button className=\"uk-button uk-button-primary uk-border-pill\">\n                    Regístrate\n                  </button>\n                </Link>\n              </li>\n            </ul>\n          }\n\n    </nav>\n    \n  );\n\n};\n\nexport default Navbar;","import React, { useContext } from 'react';                // Import React and useContext hook\nimport { NavLink, Link } from 'react-router-dom';               // Import NavLink for \"navigation\"\n//import { useHistory } from 'react-router-dom';            // Import useHistory for \"redirection\"\nimport { AppContext }  from '../../AppContext';           // Import AppContext to use created context\n\n// Declare Sidebar functional component\nconst Sidebar = () => {\n  \n  // Destructure user and route state variables from context and setRoute function to change route\n  const { user, setRoute } = useContext(AppContext); // Destructure user state variable\n\n  // Declare function to update the route state variable according to the selected link for inner component nav\n  const handleRoute = (event, newRoute) => {\n    \n    event.preventDefault();               // Prevent page reloading after submit action\n    setRoute(newRoute);                   // Update route state variable with route sent as parameter\n  \n  }\n\n  // Destructure push method from useHistory to \"redirect\" user\n  //const { push } = useHistory();\n\n  return (\n     \n    <div className=\"sidebar\">\n      <ul className=\"uk-nav-default uk-nav-parent-icon uk-width-4-5 uk-text-left uk-margin-left uk-margin-large-top\" uk-nav=\"true\">\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/home\">Mi Salud</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/antecedentes\">Antecedentes</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/padecimientos\">Padecimientos</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/consultas\">Consultas</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/medicamentos\">Medicamentos</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/recetas\">Recetas</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/estudios\">Estudios</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/urgencias\">Urgencias</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/hospitalizaciones\">Hospitalizaciones</NavLink>\n        </li>\n        {/* <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/agenda\">Agenda</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/terapias\">Otras Terapias</NavLink>\n        </li> */}\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/tienda\">Tienda</NavLink>\n        </li>\n      </ul>\n    </div>\n        \n  );\n};\n\nexport default Sidebar;","import React, { useContext } from 'react';\nimport Router from './Router';\nimport { AppContext } from './AppContext';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/common/Navbar'\nimport Sidebar from './components/common/Sidebar';\n\nfunction App() {\n\n  const { user } = useContext(AppContext); // Destructure user state variable\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <main>\n        { user._id ? (\n          <div className=\"uk-flex\">\n            <Sidebar />\n            <Router />\n          </div>\n        ) : (\n          <Router />\n        )}\n      </main>\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Import BrowserRouter to allow the user to navigate within the app by setting defined routes. See ./Router.js for more information\nimport { BrowserRouter } from 'react-router-dom';\n\n// Import the Provider which will allow to pass down the state variables and methods to its descendants\nimport AppProvider from './AppContext';\n\n// Import UIkit for styles\nimport UIkit from 'uikit';\nimport Icons from 'uikit/dist/js/uikit-icons';\nimport 'uikit/dist/css/uikit.min.css';\n\nUIkit.use(Icons);   // Execute to allow icon use\n\n// Create a component that: Provides state variables and methods AND router functionality for navigation, to the APP\nconst WithRouterAndProvider = () => (\n  <AppProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AppProvider>\n)\n\nReactDOM.render(<WithRouterAndProvider />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}