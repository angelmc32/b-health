{"version":3,"sources":["images/icons/blood-pressure.svg","images/icons/happy-face.svg","images/icons/sad-face.svg","images/icons/blood-sugar.svg","images/icons/heart-rate.svg","images/icons/temperature.svg","images/icons/weight.svg","images/icons/add-vitals.svg","images/icons/sick-face.svg","images/health-check.svg","logo.svg","AppContext.js","services/auth-services.js","components/auth/AuthForm.js","hooks/useForm.js","components/auth/Signup.js","components/auth/Login.js","components/profile/Profile.js","services/profile-services.js","components/vitalsigns/VitalSignsCard.js","services/vitalsigns-services.js","components/vitalsigns/VitalSignsForm.js","components/home/Home.js","services/study-services.js","components/study/StudyForm.js","components/study/StudyInfo.js","components/study/Study.js","services/consultation-services.js","services/emergency-services.js","services/hospitalization-services.js","components/disease/Disease.js","components/common/CatalogSearchbar.js","components/consultation/ConsultationFormSpecial.js","components/consultation/ConsultationInfo.js","components/consultation/Consultation.js","hooks/useDrugsForm.js","services/drug-services.js","components/prescription/PrescriptionForm.js","components/prescription/PrescriptionInfo.js","components/prescription/Prescription.js","services/prescription-services.js","services/medhistory-services.js","components/medHistory/MedHistory.js","components/hospitalization/HospitalizationForm.js","components/hospitalization/HospitalizationInfo.js","components/hospitalization/Hozpitalization.js","components/emergency/EmergencyForm.js","components/emergency/EmergencyInfo.js","components/emergency/Emergency.js","components/common/DrugSearchbar.js","components/drug/DrugForm.js","components/drug/DrugInfo.js","components/drug/Drug.js","Router.js","components/common/Navbar.js","components/common/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppContext","createContext","AppProvider","children","initialUserState","JSON","parse","localStorage","getItem","useState","user","setUser","route","setRoute","objectHandler","setObjectHandler","userContext","resetUserContext","Provider","value","base_url","AuthForm","submit","action","email","password","confirm_password","handleChange","className","to","onSubmit","uk-icon","onChange","name","type","useForm","form","setForm","array","setArray","handleInput","event","target","push","prevState","console","log","handleFileInput","files","Signup","useContext","useHistory","data","preventDefault","axios","post","then","res","token","setItem","stringify","UIkit","notification","message","pos","status","catch","msg","response","Login","Profile","isButtonDisabled","setIsButtonDisabled","useEffect","_id","width","height","src","profile_picture","alt","first_name","last_name1","onClick","last_name2","moment","utc","date_of_birth","format","curp","gender","formData","FormData","key","append","patch","headers","Authorization","editProfile","error","htmlFor","placeholder","disabled","VitalSignsCard","vitalsign_name","vitalsign_icon","form_name","handleInputChange","showInput","setShowInput","step","VitalSignsForm","setShowVitalsForm","setVitalsFormValues","persist","parseInt","currentValues","temperature_icon","blood_pressure_icon","blood_sugar_icon","heart_rate_icon","weight_icon","Home","Date","now","locale","happy_img","sad_img","sick_img","uk-accordion","href","StudyForm","handleSubmit","drugQuantity","uk-form-custom","multiple","tabIndex","StudyInfo","study","date","doctor","image","uk-lightbox","data-alt","study_name","facility_name","Study","setStudy","studies","setStudies","get","getStudies","length","map","index","loadStudy","createStudy","getConsultations","getEmergencies","getHospitalizations","Disease","diseases","setDiseases","setConsultations","setEmergencies","setHospitalizations","diseasesHandler","consultations","i","diagnosis","emergencies","hospitalizations","disease","uk-toggle","id","uk-modal","uk-close","CatalogSearchbar","handleFormInput","searchResults","setSearchResults","searchValue","setSearchValue","showDrop","setShowDrop","results","cie10","filter","NOMBRE","toLowerCase","includes","procedures","PRO_NOMBRE","drugs","generic_name","uk-search-icon","ConsultationForm","showVitalsForm","toggleVitalsForm","ConsultationInfo","consultation","vitals","setVitals","consultationID","getOneVitalSignsConsultation","vitalsigns","chief_complaint","temperature","blood_pressure_sys","blood_pressure_dias","heart_rate","glucose","weight","Consultation","setConsultation","blood_sugar","vitalsFormValues","goToPrescription","newRoute","goToStudies","loadConsultation","prescription","ConsultationFormSpecial","createConsultation","createVitalSigns","useDrugsForm","drugsArray","PrescriptionForm","drugFields","setDrugFields","setDrugQuantity","drug","handleDrugInput","brand_name","dosage_form","dose","directions","drugField","pop","deleteDrugField","addDrugField","PrescriptionInfo","Prescription","setPrescription","prescriptions","setPrescriptions","getPrescriptions","loadPrescription","drugsJSON","createPrescription","MedHistory","medHistory","setMedHistory","familyHistoryObj","healthHistoryObj","addictionsObj","allergiesObj","weekly_exercise_hours","getMedicalHistory","medicalHistory","userID","editMedicalHistory","createMedicalHistory","handleMedHistoryInput","family_history","Object","entries","entry","health_history","addictions","allergies","defaultChecked","HospitalizationForm","HospitalizationInfo","hospitalization","admission_date","description","Hozpitalization","setHospitalization","loadHospitalization","createHospitalization","EmergencyForm","EmergencyInfo","emergency","Emergency","setEmergency","loadEmergency","treatment","createEmergency","DrugForm","DrugSearchbar","Drug","setDrug","setDrugs","getDrugs","date_added","loadDrug","createDrug","DrugInfo","Router","path","Navbar","handleRoute","closeMenu","toggle","document","getElementById","checked","logo","clear","Sidebar","uk-nav","App","Boolean","window","location","hostname","match","use","Icons","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e7ec456.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blood-pressure.cf3aa91f.svg\";","module.exports = __webpack_public_path__ + \"static/media/happy-face.df981ce0.svg\";","module.exports = __webpack_public_path__ + \"static/media/sad-face.18bccf67.svg\";","module.exports = __webpack_public_path__ + \"static/media/blood-sugar.cac6f5ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-rate.669e9159.svg\";","module.exports = __webpack_public_path__ + \"static/media/temperature.135f44d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/weight.74bdac82.svg\";","module.exports = __webpack_public_path__ + \"static/media/add-vitals.77332c1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/sick-face.e921748a.svg\";","module.exports = __webpack_public_path__ + \"static/media/health-check.b6b6dbc0.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { createContext, useState } from 'react';   // Import React and 2 hooks for context-creation and state-manipulation\n\n// Create context object, and export it so children components can use it through the useContext hook\nexport const AppContext = createContext();\n\n// Create Provider component \nconst AppProvider = ({ children }) => {\n\n  // Obtain user data from the localStorage, or set it as an empty object in case there is no user stored\n  const initialUserState = JSON.parse( localStorage.getItem('user') ) || {};\n\n  // Declare user state variable and setUser function to update the user state variable\n  const [ user, setUser ] = useState(initialUserState);\n  const [ route, setRoute ] = useState(\"none\");\n  const [ objectHandler, setObjectHandler ] = useState({});\n  \n  // Declare resetUserContext function that will allow us to reset the user context\n  const resetUserContext = () => {\n\n    setUser({});    // Sets user context to an empty object \n    setRoute(\"none\");\n    setObjectHandler({});\n\n  };\n\n  // Create the context objects to be passed as props in the Provider, with our created state and functions\n  const userContext = { user, setUser, route, setRoute, objectHandler, setObjectHandler, resetUserContext };\n\n  // Return a context Provider component, sending the userContext as value prop\n  return (\n    <AppContext.Provider value={ userContext }>\n      { children }\n    </AppContext.Provider>\n  );\n\n};\n\nexport default AppProvider;","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api' : 'http://localhost:3000/api';\n\n// Export signup function, which receives data as parameters to enable signup\nexport const signup = (data) => {\n  \n  // Return a call to our /signup route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/signup`, data);\n\n};\n\n// Export login function, which receives data as parameters to enable login\nexport const login = (data) => {\n\n  // Return a call to our /login route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/login`, data);\n\n};\n\n// Export logout function, which \"erases\" the token from the localStorage, and without a token any user\n// that is not logged in will not be able to access the routes that require authentication/token\nexport const logout = () => {\n\n  localStorage.clear();\n\n};","import React from 'react';                        // Import React\nimport { NavLink } from 'react-router-dom';       // Import NavLink for \"navigation\"\n\n// Declare AuthForm functional component, receives action variable for conditional rendering,\n// email, password and confirm_password variables from form state variable, and submit and handleChange functions\nconst AuthForm = ( { submit, action, email = '', password = '', confirm_password = '', handleChange } ) => (\n\n\n  <div className=\"uk-margin-top uk-margin-remove-top@s\">\n\n    <div className=\"uk-margin\">\n\n      <h2>{action === \"signup\" ? \"Registro\" : \"Inicia Sesión\"}</h2>\n  \n      { action === \"signup\" ? (\n        <p>¿Ya tienes cuenta? \n          <NavLink to=\"/login\" className=\"uk-margin-small-left\">\n            Accede aquí\n          </NavLink>\n        </p>\n        ) : (\n        <p>¿Primera vez? \n          <NavLink to=\"/signup\" className=\"uk-margin-small-left\">\n            Regístrate aquí\n          </NavLink>\n        </p>\n        )\n      }\n    \n    </div>\n\n      <form className=\"uk-form-stacked uk-margin\" onSubmit={submit}>\n        \n        <div className=\"uk-margin\">\n          <label className=\"uk-form-label\">Correo Electrónico:</label>\n          <div className=\"uk-inline\">\n            <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n            <input onChange={handleChange} name=\"email\" value={email} className=\"uk-input\" type=\"email\" />\n          </div>\n        </div>\n        <div className=\"uk-margin\">\n          <label className=\"uk-form-label\">Contraseña:</label>\n          <div className=\"uk-inline\">\n            <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n            <input\n              onChange={handleChange}\n              name=\"password\"\n              value={password}\n              className=\"uk-input\"\n              type=\"password\"\n            />\n          </div>\n        </div>\n          { action === \"signup\" ? (\n          <div className=\"uk-margin\">\n            <label className=\"uk-form-label\">Confirma tu contraseña:</label>\n            <div className=\"uk-inline\">\n              <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n              <input\n                onChange={handleChange}\n                name=\"confirm_password\"\n                value={confirm_password}\n                className=\"uk-input\"\n                type=\"password\"\n              />\n            </div>\n          </div>\n          ) : null }\n\n        \n\n        <button className=\"uk-button uk-button-primary uk-border-pill uk-margin\" type=\"submit\">\n          {action === \"signup\" ? \"Registrar\" : \"Entrar\"}\n        </button>\n\n      </form>\n  </div>\n);\n\nexport default AuthForm;","import { useState } from 'react';   // Import useState hook to create custom hook\n\n// Declare hook as a React functional component\nconst useForm = () => {\n  \n  // Declare form state variable and setForm function to update the form state variable\n  const [ form, setForm ] = useState({});\n  const [ array, setArray ] = useState([]);\n\n  // Declare handleInput function for input data manipulation\n  const handleInput = (event) => {\n    \n    // Destructure input name and value (data that is being changed by user)\n    const { name, value } = event.target;\n\n    // When using checkboxes, store the values in an array\n    if ( event.target.type === 'checkbox' ) {\n      \n      array.push(value);\n      setArray(array);\n      setForm( prevState => ({...prevState, [name]: array}) );\n\n    } else {\n      console.log(form)\n      // Update the form state without erasing previos values (with prevState)\n      setForm( prevState => ({...prevState, [name]: value}) );\n\n    }\n\n  };\n\n  // Declare handleInputFile function for files manipulation\n  const handleFileInput = (event) => {\n\n    // Destructure input name and files (data that is being changed by user)\n    const { name, files } = event.target;\n\n    // Update the form state without erasing previos values (with prevState)\n    setForm( prevState => ({...prevState, [name]: files}) );\n\n  };\n\n  // Return the form state variable and input handling functions\n  return { form, setForm, handleInput, handleFileInput };\n\n};\n\nexport default useForm;","import React, { useContext } from 'react';                // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';            // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';            // Import AppContext to use created context\nimport { signup } from '../../services/auth-services';    // Import signup service for API call\nimport AuthForm from './AuthForm';                        // Import AuthForm react component\nimport useForm from '../../hooks/useForm';                // Import useForm custom hook\nimport UIkit from 'uikit';                                // Import UIkit for notifications\n\n// Declare Signup functional component\nconst Signup = () => {\n\n  const { form, handleInput } = useForm();      // Destructure form state variable and handleInput function\n  const { setUser } = useContext(AppContext);   // Destructure setUser function for user state manipulation\n  const { push } = useHistory();                // Destructure push method from useHistory to \"redirect\" user\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();                     // Prevent page reloading after submit action\n    \n    // Call signup service with form state variable as parameter, which includes form data for e-mail and password\n    signup(form)\n    .then( res => {\n      \n      const { user, token } = res.data;         // Destructure user and token from response, sent by API\n      \n      // Store user and token in localStorage\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', token);\n\n      setUser(user);    // Modify user state variable, setting the user data in the state\n      push('/home');    // \"Redirect\" user to home\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='check'></span> Completa tu registro usando la liga que te enviamos a la dirección de correo electrónico proporcionada`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n    })\n    .catch( res => {\n\n      const { msg } = res.response.data;\n      \n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${msg}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n    });\n    \n  };\n\n  return (\n    <div className=\"uk-section uk-flex uk-flex-center\">\n      <div className=\"uk-container uk-flex uk-flex-center\">\n        <AuthForm\n          submit={handleSubmit}\n          action=\"signup\"\n          handleChange={handleInput}\n          {...form}\n        />\n      </div>\n    </div>\n  );\n\n};\n\nexport default Signup;","import React, { useContext } from 'react';              // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';          // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';          // Import AppContext to use created context\nimport { login } from '../../services/auth-services';   // Import login service for API call\nimport AuthForm from './AuthForm';                      // Import AuthForm react component\nimport useForm from '../../hooks/useForm';              // Import useForm custom hook\nimport UIkit from 'uikit';                              // Import UIkit for notifications\n\n// Declare Login functional component\nconst Login = () => {\n\n  const { form, handleInput } = useForm();                // Destructure form state variable and handleInput function\n  const { setUser, setRoute } = useContext(AppContext);   // Destructure setUser function for user state manipulation\n  const { push } = useHistory();                          // Destructure push method from useHistory to \"redirect\" user\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();                     // Prevent page reloading after submit action\n    \n    // Call signup service with form state variable as parameter, which includes form data for e-mail and password\n    login(form)\n    .then( res => {\n      \n      const { user, token } = res.data;         // Destructure user and token from response, sent by API\n      \n      // Store user and token in localStorage\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', token);\n      console.log(user)\n\n      setUser(user);    // Modify user state variable, setting the user data in the state\n      setRoute('');\n      push('/home');    // \"Redirect\" user to home\n\n    })\n    .catch( res => {\n\n      const { msg } = res.response.data;\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${msg}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n    });\n    \n  };\n\n  return (\n    <div className=\"uk-section uk-flex uk-flex-center\">\n      <div className=\"uk-container\">\n        <AuthForm\n          submit={handleSubmit}\n          action=\"login\"\n          handleChange={handleInput}\n          {...form}\n        />\n      </div>\n    </div>\n  );\n\n};\n\nexport default Login;","import React, { useEffect, useContext, useState } from 'react';           // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';                  // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                  // Import AppContext to use created context\nimport { editProfile } from '../../services/profile-services';  // Import edit API call\nimport useForm from '../../hooks/useForm';                      // Import useForm custom hook\nimport UIkit from 'uikit';                                      // Import UIkit for notifications\nimport moment from 'moment';                                    // Import momentjs for date formatting\n\nconst Profile = () => {\n\n  const { form, handleInput, handleFileInput } = useForm();\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  \n  const { user, setUser, route, setRoute } = useContext(AppContext); // Destructure user state variable\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n\n  // Hook to update component when user state variable is modified\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n  }, [user] );\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true);\n\n    const formData = new FormData();      // Declare formData as new instance of FormData class\n    const { profile_picture } = form;     // Destructure profile_picture from form\n\n    // Iterate through every key in form object and append name:value to formData\n    for (let key in form) {\n\n      // If profile_picture, append as first item in array (currently 1 file allowed, index 0)\n      if ( key === 'profile_picture' ) formData.append(key, profile_picture[0]);\n\n      else formData.append(key, form[key]);\n      \n    }\n    \n    // Call edit service with formData as parameter, which includes form data for user profile information\n    editProfile(formData)\n    .then( res => {\n\n      const { user } = res.data   // Destructure updated user document from response\n      \n      setUser(user);              // Modify user state variable with updated information\n      setRoute('none');\n      setIsButtonDisabled(false);\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡Tu perfil fue actualizado exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n    })\n    .catch( error => {\n\n      console.log(error);\n      setIsButtonDisabled(false);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n    });\n    \n  };\n\n  return (\n    <div className=\"uk-section\">\n      <div className=\"uk-width-auto\">\n        <img className=\"uk-border-circle\" width={128} height={128} src={user.profile_picture} alt=\"User profile\" />\n      </div>\n      <h2>{user.first_name} {user.last_name1}</h2>\n      { route !== 'edit' ? (\n          <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('edit')} >\n            Editar mi perfil\n          </button>\n        ) : (\n          <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('none')} >\n            Regresar\n          </button>\n        )}\n      \n      <div className=\"uk-container uk-margin\">\n        { route !== 'edit' ? (\n          <div className=\"uk-text-left\">\n            <p>Nombre completo: {user.first_name} {user.last_name1} {user.last_name2}</p>\n            <p>Email: {user.email}</p>\n            <p>Fecha de nacimiento: {moment.utc(user.date_of_birth).format('LL')}</p>\n            <p>CURP: {user.curp ? user.curp : 'Información no registrada'}</p>\n            <p>Género: {user.gender === 'N' ? 'No definido' : user.gender === 'F' ? 'Femenino' : 'Masculino'}</p>\n          </div>\n        ) : (\n          <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n            <div className=\"uk-margin\">\n              <label className=\"uk-form-label\" htmlFor=\"date\">Nombres:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"first_name\" onChange={handleInput} placeholder={user.first_name} />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Apellido paterno:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"last_name1\" onChange={handleInput} placeholder={user.last_name1} />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Apellido materno:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"last_name2\" onChange={handleInput} placeholder={user.last_name2} />\n              </div>\n              <label className=\"uk-form-label\">Fecha de nacimiento: {moment.utc(user.date_of_birth).format('LL')}</label>\n              <div className=\"uk-inline\">\n                <input onChange={handleInput} name=\"date_of_birth\" className=\"uk-input\" type=\"date\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Género</label>\n              <div className=\"uk-margin uk-flex uk-flex-around\">\n                <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"F\" />Mujer</label>\n                <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"M\" />Hombre</label>\n                <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"N\" />No binario</label>\n              </div>\n              <label className=\"uk-form-label\">Correo electrónico:</label>\n              <div className=\"uk-form-controls\">\n                <input onChange={handleInput} name=\"email\" className=\"uk-input\" type=\"email\" placeholder={user.email} />\n              </div>\n              <label className=\"uk-form-label\">CURP:</label>\n              <div className=\"uk-form-controls\">\n                <input onChange={handleInput} name=\"curp\" className=\"uk-input\" type=\"text\" placeholder={user.curp} />\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n              <button type=\"submit\" className=\"uk-button uk-button-primary uk-button-small uk-border-pill\" disabled={isButtonDisabled} >\n                Editar perfil\n              </button>\n            </div>\n          </form>\n        )}\n        \n      </div>\n      \n      \n    </div>\n  )\n\n}\n\nexport default Profile","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/profile' : 'http://localhost:3000/api/profile';\n\n// Export edit function, which receives data as parameters to enable profile edition\nexport const editProfile = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /edit route, while sending the parameters obtained from the form/front-end\n  return axios.patch(`${base_url}/profile/edit`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n      \"Content-Type\": \"multipart/form-data\"     // Set content as multipart/form-data for files and text\n    }\n  });\n\n};","import React, { useState } from 'react'\n\nconst VitalSignsCard = ({ vitalsign_name, vitalsign_icon, form_name, handleInputChange }) => {\n\n  const [ showInput, setShowInput ] = useState(false)\n\n  const toggleInput = () => setShowInput(true);\n\n  return (\n    <div className={`uk-card uk-card-hover uk-card-body uk-padding-small`} onClick={toggleInput}>\n      <h5>{vitalsign_name}</h5>\n      <div className=\"uk-flex uk-flex-center\">\n        <img className=\"uk-width-4-5\" src={vitalsign_icon} alt=\"\"/>\n      </div>\n      {\n        showInput ? \n          <input className=\"uk-input uk-width-4-5\" type=\"number\" step=\".1\" name={form_name} onChange={handleInputChange} />\n        : null\n      }\n    </div>\n  )\n}\n\n\nexport default VitalSignsCard","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/vitalsigns' : 'http://localhost:3000/api/vitalsigns';\n\n// Export get function to retrieve all prescriptions of the current logged in user\nexport const getVitalSigns = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable prescription creation\nexport const createVitalSigns = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getOneVitalSigns = (vitalSignsID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${vitalSignsID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getOneVitalSignsConsultation = (consultationID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/vitals/${consultationID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editVitalSigns = (vitalSignsID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${vitalSignsID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useState } from 'react';\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport VitalSignsCard from '../vitalsigns/VitalSignsCard'\n\nimport happy_img from '../../images/icons/happy-face.svg'\nimport sad_img from '../../images/icons/sad-face.svg'\nimport add_vitals_icon from '../../images/icons/add-vitals.svg'\nimport blood_pressure_icon from '../../images/icons/blood-pressure.svg'\nimport blood_sugar_icon from '../../images/icons/blood-sugar.svg'\nimport heart_rate_icon from '../../images/icons/heart-rate.svg'\nimport temperature_icon from '../../images/icons/temperature.svg'\nimport weight_icon from '../../images/icons/weight.svg'\n\nimport { getVitalSigns, getOneVitalSigns, createVitalSigns } from '../../services/vitalsigns-services'\n\nconst VitalSignsForm = ({ type, setShowVitalsForm, setVitalsFormValues, setRoute }) => {\n\n  // const [ formValues, setFormValues ] = useState({temperature: null, blood_pressure_sys: null, blood_pressure_dias: null, blood_sugar: null, heart_rate: null, weight: null});\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  const saveVitalSigns = (event) => {\n\n    event.preventDefault();\n\n    if ( type === 'consultation' )\n      setShowVitalsForm(false);\n    else \n      setRoute('vitalSigns');\n\n  }\n\n  // const handleSubmit = (event) => {\n\n  //   event.preventDefault();\n  //   console.log(formValues);\n  //   setIsButtonDisabled(true);\n\n  //   createVitalSigns(formValues)\n  //   .then( res => {\n\n  //     const { vitalSigns } = res.data    // Destructure updated preferences document from response\n  //     console.log(vitalSigns)\n\n  //     // Send UIkit success notification\n  //     UIkit.notification({\n  //       message: `<span uk-icon='close'></span> '¡El registro de signos vitales fue creado exitosamente!'`,\n  //       pos: 'bottom-center',\n  //       status: 'success'\n  //     });\n\n  //     if ( type === 'consultation' )\n  //       setShowVitalsForm(false)\n  //     else setRoute('vitalSigns')\n\n  //     // setRoute('consultations');\n  //     setIsButtonDisabled(false);\n\n  //   })\n  //   .catch( error => {\n\n  //     console.log(error);\n\n  //     // Send UIkit error notification\n  //     UIkit.notification({\n  //       message: `<span uk-icon='close'></span> ${error}`,\n  //       pos: 'bottom-center',\n  //       status: 'danger'\n  //     });\n      \n  //     setIsButtonDisabled(false);\n\n  //   });\n\n  // }\n\n  const handleInputChange = (event) => {\n    event.persist();\n    if(event.target.type === 'number') event.target.value = parseInt(event.target.value);\n    setVitalsFormValues( currentValues => ({\n      ...currentValues,\n      [event.target.name]: event.target.value\n    }))\n  }\n\n  return (\n    <form className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <div className=\"uk-width-1-1 uk-width-1-4@s uk-child-width-1-3 uk-grid uk-grid-collapse uk-grid-match\">\n          \n            <VitalSignsCard vitalsign_name=\"Temperatura Corporal\" vitalsign_icon={temperature_icon} handleInputChange={handleInputChange} form_name=\"temperature\" />\n            <VitalSignsCard vitalsign_name=\"Presión Sistólica\" vitalsign_icon={blood_pressure_icon} handleInputChange={handleInputChange} form_name=\"blood_pressure_sys\" />\n            <VitalSignsCard vitalsign_name=\"Glucosa\" vitalsign_icon={blood_sugar_icon} handleInputChange={handleInputChange} form_name=\"blood_sugar\" />\n            {/* <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Temperatura</label>\n            <div className=\"uk-form-controls\">\n              <input className=\"uk-input uk-width-4-5\" type=\"number\" step=\".1\" name=\"temperature\" onChange={handleInputChange} />\n            </div>\n            <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Presión Sistólica</label>\n            <div className=\"uk-form-controls\">\n              <input className=\"uk-input uk-width-4-5\" type=\"number\" name=\"blood_pressure_sys\" onChange={handleInputChange} />\n            </div>\n            <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Glucosa</label>\n            <div className=\"uk-form-controls\">\n              <input className=\"uk-input uk-width-4-5\" type=\"number\" name=\"blood_sugar\" onChange={handleInputChange} />\n            </div> */}\n            <VitalSignsCard vitalsign_name=\"Frecuencia Cardiaca\" vitalsign_icon={heart_rate_icon} handleInputChange={handleInputChange} form_name=\"heart_rate\" />\n            <VitalSignsCard vitalsign_name=\"Presión Diastólica\" vitalsign_icon={blood_pressure_icon} handleInputChange={handleInputChange} form_name=\"blood_pressure_dias\" />\n            <VitalSignsCard vitalsign_name=\"Peso\" vitalsign_icon={weight_icon} handleInputChange={handleInputChange} form_name=\"weight\" />\n            {/* <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Frecuencia Cardiaca</label>\n            <div className=\"uk-form-controls\">\n              <input className=\"uk-input uk-width-4-5\" type=\"number\" name=\"heart_rate\" onChange={handleInputChange} />\n            </div>\n            <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Presión Diastólica</label>\n            <div className=\"uk-form-controls\">\n              <input className=\"uk-input uk-width-4-5\" type=\"number\" name=\"blood_pressure_dias\" onChange={handleInputChange} />\n            </div>\n            \n            <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Peso</label>\n            <div className=\"uk-form-controls\">\n              <input className=\"uk-input uk-width-4-5\" type=\"number\" step=\".001\" name=\"weight\" onChange={handleInputChange} />\n            </div> */}\n        </div>\n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin\">\n        <button onClick={saveVitalSigns} className=\"uk-button uk-button-primary uk-border-pill\" disabled={isButtonDisabled} >\n          Agregar Signos Vitales\n        </button>\n      </div>     \n    </form>\n  )\n}\n\nexport default VitalSignsForm","import React, { useEffect, useContext } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { AppContext } from '../../AppContext';\nimport UIkit from 'uikit';\nimport moment from 'moment';\n\nimport VitalSignsForm from '../vitalsigns/VitalSignsForm'\n\nimport happy_img from '../../images/icons/happy-face.svg'\nimport sad_img from '../../images/icons/sad-face.svg'\nimport sick_img from '../../images/icons/sick-face.svg'\nimport add_vitals_icon from '../../images/icons/add-vitals.svg'\nimport blood_pressure_icon from '../../images/icons/blood-pressure.svg'\nimport blood_sugar_icon from '../../images/icons/blood-sugar.svg'\nimport heart_rate_icon from '../../images/icons/heart-rate.svg'\nimport temperature_icon from '../../images/icons/temperature.svg'\nimport weight_icon from '../../images/icons/weight.svg'\n\nconst Home = () => {\n\n  const { user, setUser, route, setRoute } = useContext(AppContext); // Destructure user state variable\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n\n  // Hook to update component when user state variable is modified\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n  }, [user] );\n  \n  return (\n    <div className=\"content\">\n      <div className=\"uk-section\">\n        <h2 className=\"uk-margin-small-top\">Hola {user.first_name === \"Nombres\" ? \"Usuario\" : user.first_name}</h2>\n        <p>{moment(Date.now()).locale('es').format('LL')}</p>\n        <div className=\"uk-container uk-overflow-auto\">\n          <div className=\"uk-grid uk-grid-collapse\">\n            <div className=\"uk-visible@s uk-width-1-3@s uk-grid uk-grid-collapse\">\n              <div className=\"uk-width-1-1\">\n                <div className=\"uk-flex uk-flex-center\">\n                  <img className=\"uk-width-2-5\" src={user.profile_picture} alt=\"\"/>\n                </div>\n                <h3 className=\"uk-margin-small\">{user.first_name} {user.last_name1} {user.last_name2}</h3>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-width-1-3@s uk-grid uk-grid-collapse\">\n              <div className=\"uk-width-1-1\">\n                <h4>¿Cómo te sientes?</h4>\n              </div>\n              <div className=\"uk-width-1-3 uk-card-hover uk-padding\">\n                <img src={happy_img} alt=\"\"/>\n              </div>\n              <div className=\"uk-width-1-3 uk-card-hover uk-padding uk-light\">\n                <img src={sad_img} alt=\"\"/>\n              </div>\n              <div className=\"uk-width-1-3 uk-card-hover uk-padding uk-light\">\n                <img src={sick_img} alt=\"\"/>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-grid uk-grid-collapse\">\n              <ul className=\"uk-width-1-1 uk-child-width-1-2@s\" uk-accordion=\"true\">\n                <li className=\"uk-open\">\n                  <a className=\"uk-accordion-title\" href=\"#\">Mis Medicamentos</a>\n                  <div className=\"uk-accordion-content\">\n                    <table className=\"uk-table uk-table-hover uk-table-divider uk-margin-small-bottom\">\n                      <tbody>\n                        <tr>\n                          <td className=\"uk-text-center\">Medicamento 1</td>\n                          <td>\n                            <span className=\"uk-margin-small-right\" uk-icon=\"bell\"></span>\n                            <span className=\"uk-margin-small-right\" uk-icon=\"info\"></span>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td className=\"uk-text-center\">Medicamento 2</td>\n                          <td>\n                            <span className=\"uk-margin-small-right\" uk-icon=\"bell\"></span>\n                            <span className=\"uk-margin-small-right\" uk-icon=\"info\"></span>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td className=\"uk-text-center\">Medicamento 3</td>\n                          <td>\n                            <span className=\"uk-margin-small-right\" uk-icon=\"bell\"></span>\n                            <span className=\"uk-margin-small-right\" uk-icon=\"info\"></span>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                    <button className=\"uk-button uk-button-default uk-border-pill uk-button-small\">Agregar Medicamento</button>\n                  </div>\n                </li>\n                <li>\n                  <a className=\"uk-accordion-title\" href=\"#\">Mis Padecimientos</a>\n                  <div className=\"uk-accordion-content\">\n                    <table className=\"uk-table uk-table-hover uk-table-divider uk-margin-small-bottom\">\n                        <tbody>\n                          <tr>\n                            <td className=\"uk-text-center\">\n                              Padecimiento 1\n                              <span className=\"uk-margin-small-left\" uk-icon=\"info\"></span>\n                            </td>\n                            <td>\n                              <button className=\"uk-button uk-button-default uk-border-pill uk-button-small\">+ Consulta</button>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"uk-text-center\">\n                              Padecimiento 2\n                              <span className=\"uk-margin-small-left\" uk-icon=\"info\"></span>\n                            </td>\n                            <td>\n                              <button className=\"uk-button uk-button-default uk-border-pill uk-button-small\">+ Consulta</button>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"uk-text-center\">\n                              Padecimiento 3\n                              <span className=\"uk-margin-small-left\" uk-icon=\"info\"></span>\n                            </td>\n                            <td>\n                              <button className=\"uk-button uk-button-default uk-border-pill uk-button-small\">+ Consulta</button>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                      <button className=\"uk-button uk-button-default uk-border-pill uk-button-small\">Agregar Padecimiento</button>\n                  </div>\n                </li>\n                <li>\n                  <a className=\"uk-accordion-title\" href=\"#\">Signos Vitales</a>\n                  <div className=\"uk-accordion-content\">\n                    <VitalSignsForm />\n                    {/* <div className=\"uk-width-1-1 uk-width-1-4@s uk-child-width-1-3 uk-grid uk-grid-collapse uk-grid-match\">\n                      <VitalSignsCard vitalsign_name=\"Card Corporal\" vitalsign_icon={temperature_icon} />\n                      <div className=\"uk-card uk-card-hover uk-card-body uk-padding-small\">\n                        <h5>Temperatura Corporal</h5>\n                        <div className=\"uk-flex uk-flex-center\">\n                          <img className=\"uk-width-4-5\" src={temperature_icon} alt=\"\"/>\n                        </div>\n                      </div>\n                      <div className=\"uk-card uk-card-hover uk-card-body uk-padding-small\">\n                        <h5>Frecuencia Cardiaca</h5>\n                        <div className=\"uk-flex uk-flex-center\">\n                          <img className=\"uk-width-4-5\" src={heart_rate_icon} alt=\"\"/>\n                        </div>\n                      </div>\n                      <div className=\"uk-card uk-card-hover uk-card-body uk-padding-small\">\n                        <h5>Presión Arterial</h5>\n                        <div className=\"uk-flex uk-flex-center\">\n                          <img className=\"uk-width-4-5\" src={blood_pressure_icon} alt=\"\"/>\n                        </div>\n                      </div>\n                      <div className=\"uk-card uk-card-hover uk-card-body uk-padding-small\">\n                        <h5>Glucosa</h5>\n                        <div className=\"uk-flex uk-flex-center\">\n                          <img className=\"uk-width-4-5\" src={blood_sugar_icon} alt=\"\"/>\n                        </div>\n                      </div>\n                      <div className=\"uk-card uk-card-hover uk-card-body uk-padding-small\">\n                        <h5>Peso</h5>\n                        <div className=\"uk-flex uk-flex-center\">\n                          <img className=\"uk-width-4-5\" src={weight_icon} alt=\"\"/>\n                        </div>\n                      </div>\n                      <div className=\"uk-card uk-card-hover uk-card-body uk-padding-small\">\n                        <h5>+ Otro</h5>\n                        <div className=\"uk-flex uk-flex-center\">\n                          <img className=\"uk-width-4-5\" src={add_vitals_icon} alt=\"\"/>\n                        </div>\n                      </div>\n                    </div> */}\n                  </div>\n                </li>\n              </ul>\n            </div>\n          </div>\n          \n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/studies' : 'http://localhost:3000/api/studies';\n\n// Export get function to retrieve all prescriptions of the current logged in user\nexport const getStudies = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable prescription creation\nexport const createStudy = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getStudy = (studyID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${studyID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editStudy = (studyID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${studyID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useState } from 'react';\n\nconst StudyForm = ({ handleSubmit, handleInput, handleFileInput, form, isButtonDisabled, objectHandler }) => {\n\n  const [ drugFields, setDrugFields ] = useState([]);\n  const [ drugQuantity, setDrugQuantity] = useState(0);\n\n  useEffect( () => {\n\n  }, [drugQuantity])\n  \n  const addDrugField = (event) => {\n\n    event.preventDefault();\n    drugFields.push(1)\n\n    setDrugFields(drugFields);\n    setDrugQuantity(drugQuantity+1)\n\n    return null;\n\n  }\n\n  const deleteDrugField = (event) => {\n\n    event.preventDefault();\n    drugFields.pop()\n\n    setDrugFields(drugFields);\n    setDrugQuantity(drugQuantity-1)\n\n    return null;\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <h4>Datos del Estudio</h4>\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de estudio:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"date\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"doctor\">Doctor que solicitó:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"doctor\" onChange={handleInput} placeholder=\"Nombre del doctor...\" />\n        </div>\n        \n        <div className=\"uk-margin\">\n          <h4>Estudio</h4>\n          <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre de Estudio:</label>\n          <div className=\"uk-form-controls\">\n            <input className=\"uk-input\" type=\"text\" name=\"study_name\" onChange={handleInput} placeholder=\"Nombre del estudio...\" />\n          </div>\n          <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre de Laboratorio:</label>\n          <div className=\"uk-form-controls\">\n            <input className=\"uk-input\" type=\"text\" name=\"facility_name\" onChange={handleInput} placeholder=\"Dónde se realizó los estudios\" />\n          </div>\n          <div className=\"uk-flex uk-flex-middle uk-flex-around uk-margin\">\n            <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Imagen del Estudio:</label>\n            <div className=\"js-upload uk\" uk-form-custom=\"true\">\n              <input onChange={handleFileInput} name=\"image\" type=\"file\" multiple />\n              <button className=\"uk-button uk-button-default\" type=\"button\" tabIndex=\"-1\">Seleccionar</button>\n            </div>\n          </div>\n        </div>\n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-button-small uk-border-pill\" disabled={isButtonDisabled} >\n          Crear Estudio\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default StudyForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst StudyInfo = ({ study }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de Estudio: {moment(study.date).locale('es').format('LL')}</p>\n        <p>Doctor: {study.doctor}</p>\n        { study.image ?\n            <div uk-lightbox=\"true\">\n              <a className=\"uk-button uk-button-default\" href={study.image} data-alt=\"Image\">Ver Imagen</a>\n            </div>\n          : null\n        }\n        <div className=\"uk-margin\" key=\"index\">\n          <p>Nombre del Estudio : {study.study_name}</p>\n          <p>Nombre de Laboratorio : {study.facility_name}</p>\n        </div>\n        \n      </div>\n    </div>\n  )\n}\n\nexport default StudyInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport { getStudies, createStudy, getStudy, editStudy } from '../../services/study-services';\nimport StudyForm from './StudyForm';\nimport StudyInfo from './StudyInfo';\n\nconst Study = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput, handleFileInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ study, setStudy] = useState({});\n  const [ studies, setStudies ] = useState([]);\n  const [ showForm, setShowForm ] = useState(false);\n  const [ showConsultation, setShowConsultation ] = useState(false);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    if ( route !== 'create' && route !== 'read' ) {\n      getStudies()\n      .then( res => {\n      \n        const { studies } = res.data;\n        setStudies(studies);\n        setRoute('studies');\n\n      });\n    }\n\n    \n    \n  }, [route]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true)\n\n    const formData = new FormData();      // Declare formData as new instance of FormData class\n    const { image } = form;     // Destructure profile_picture from form\n\n    // Iterate through every key in form object and append name:value to formData\n    for (let key in form) {\n\n      // If profile_picture, append as first item in array (currently 1 file allowed, index 0)\n      if ( key === 'image' ) formData.append(key, image[0]);\n\n      else formData.append(key, form[key]);\n      \n    }\n    \n    // Call edit service with formData as parameter, which includes form data for user profile information\n    createStudy(formData)\n    .then( res => {\n\n      const { study } = res.data   // Destructure updated user document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡Tu estudio fue creado exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('studies');\n      setIsButtonDisabled(false);\n      setObjectHandler({});\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n      setIsButtonDisabled(false)\n\n    });\n    \n  };\n\n  const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadStudy = (study) => {\n    setStudy(study);\n    setRoute('read');\n  }\n\n  return (\n\n    <div className=\"content\">\n      \n        { route === 'studies' ? (\n          <div className=\"uk-section\">\n            <h2>Estudios</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nuevo Estudio\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { studies.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado estudios</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center uk-visible\">Estudio</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { studies ? \n                      studies.map( (study, index) => \n                        <tr key={index}>\n                          <td className=\"uk-text-center\">{moment(study.date).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center uk-visible\">{study.study_name}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadStudy({study})} >\n                              Ver\n                            </button>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nuevo Estudio</h2>\n                  { objectHandler._id ?\n                      <h4>{objectHandler._id}</h4>\n                      : null\n                  }\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('studies')} >\n                    Regresar\n                  </button>\n                  <StudyForm handleSubmit={handleSubmit} handleInput={handleInput} handleFileInput={handleFileInput} form={form} isButtonDisabled={isButtonDisabled} objectHandler={objectHandler}/>\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Estudio</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('studies')} >\n                    Regresar\n                  </button>\n                  <StudyInfo {...study} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('studies')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n    \n  )\n}\n\nexport default Study","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/consultations' : 'http://localhost:3000/api/consultations';\n\n// Export get function to retrieve all consultations of the current logged in user\nexport const getConsultations = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable consultation creation\nexport const createConsultation = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getConsultation = (consultationID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${consultationID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editConsultation = (consultationID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${consultationID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/emergencies' : 'http://localhost:3000/api/emergencies';\n\n// Export get function to retrieve all emergencies of the current logged in user\nexport const getEmergencies = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable emergency creation\nexport const createEmergency = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getEmergency = (emergencyID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${emergencyID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editEmergency = (emergencyID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${emergencyID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/hospitalizations' : 'http://localhost:3000/api/hospitalizations';\n\n// Export get function to retrieve all hospitalizations of the current logged in user\nexport const getHospitalizations = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable hospitalization creation\nexport const createHospitalization = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getHospitalization = (hospitalizationID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${hospitalizationID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editHospitalization = (hospitalizationID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${hospitalizationID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\nimport 'moment/locale/es'  // without this line it didn't work\nimport { getConsultations } from '../../services/consultation-services';\nimport { getEmergencies } from '../../services/emergency-services';\nimport { getHospitalizations } from '../../services/hospitalization-services';\n\nmoment.locale('es')\n\nconst Disease = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ disease, setDisease] = useState({});\n  const [ diseases, setDiseases ] = useState([]);\n  const [ consultations, setConsultations ] = useState([]);\n  const [ emergencies, setEmergencies ] = useState([]);\n  const [ hospitalizations, setHospitalizations ] = useState([]);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  let diseasesHandler = []\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getConsultations()\n    .then( res => {\n      \n      const { consultations } = res.data;\n      setConsultations(consultations);\n\n      for ( let i = 0 ; i < consultations.length ; i++ ) {\n        diseasesHandler.push(consultations[i].diagnosis)\n      }\n\n    })\n\n    getEmergencies()\n    .then( res => {\n      \n      const { emergencies } = res.data;\n      setEmergencies(emergencies);\n\n      for ( let i = 0 ; i < emergencies.length ; i++ ) {\n        diseasesHandler.push(emergencies[i].diagnosis)\n      }\n\n    })\n\n    getHospitalizations()\n    .then( res => {\n      \n      const { hospitalizations } = res.data;\n      setHospitalizations(hospitalizations);\n\n      for ( let i = 0 ; i < hospitalizations.length ; i++ ) {\n        diseasesHandler.push(hospitalizations[i].diagnosis)\n      }\n\n      setDiseases(diseasesHandler);\n      setRoute('diseases')\n\n    })\n\n    console.log(diseasesHandler)\n    console.log(diseases)\n    \n  }, [route]);\n\n  // const handleSubmit = (event) => {\n\n  //   event.preventDefault();\n  //   console.log(form);\n  //   setIsButtonDisabled(true);\n\n  //   createConsultation(form)\n  //   .then( res => {\n\n  //     const { consultation } = res.data    // Destructure updated preferences document from response\n  //     console.log(consultation)\n\n  //     // Send UIkit success notification\n  //     UIkit.notification({\n  //       message: `<span uk-icon='close'></span> '¡La consulta fue creada exitosamente!'`,\n  //       pos: 'bottom-center',\n  //       status: 'success'\n  //     });\n\n  //     setRoute('consultations');\n  //     setIsButtonDisabled(false);\n\n  //   })\n  //   .catch( error => {\n\n  //     console.log(error);\n\n  //     // Send UIkit error notification\n  //     UIkit.notification({\n  //       message: `<span uk-icon='close'></span> ${error}`,\n  //       pos: 'bottom-center',\n  //       status: 'danger'\n  //     });\n      \n  //     setIsButtonDisabled(false);\n\n  //   });\n\n  // }\n\n  // const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadDisease = (disease) => {\n    setDisease(disease);\n    setRoute('read');\n  }\n\n  // const goToPrescription = (event, consultation, newRoute) => {\n  //   event.preventDefault();\n  //   setConsultation(consultation);\n  //   setObjectHandler(consultation);\n  //   setRoute(newRoute);\n  //   console.log(objectHandler)\n  // }\n\n  // const goToStudies = (event, consultation, newRoute) => {\n  //   event.preventDefault();\n  //   setObjectHandler(consultation);\n  //   setRoute(newRoute);\n  //   console.log(objectHandler);\n  // }\n\n  return (\n\n    <div className=\"content\">\n      { route === 'diseases' ? (\n          <div className=\"uk-section\">\n            <h2>Mis Padecimientos</h2>\n            {/* <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nuevo Padecimiento\n            </button> */}\n            <div className=\"uk-overflow-auto\">\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Diagnóstico</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { diseases ? \n                      diseases.map( (disease, index) => \n                        <tr key={index} >\n                          <td className=\"uk-text-center\">{disease ? disease : 'No definida'}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" uk-toggle={`target: #modal-sections-${index}`} >\n                              Ver\n                            </button>\n                            <div id={`modal-sections-${index}`} className=\"uk-flex-top\" uk-modal=\"true\">\n                              <div className=\"uk-modal-dialog uk-margin-auto-vertical\">\n                                <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\" />\n                                <div className=\"uk-modal-header\">\n                                  <h3 className=\"uk-text-center\">Datos del Padecimiento</h3>\n                                  <p>Nombre: {disease}</p>\n                                  <p>Fecha de primer diagnóstico: No disponible</p>\n                                  <p>Doctor o Clínica que realizó diagnóstico: No disponible</p>\n                                  <p>Aquí se presentará un resumen del padecimiento, así como una liga para mayor información</p>\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                          <td></td>\n                          {/* <td>\n                            <a href={`#modal-sections-${index}`} uk-toggle={`target: #modal-sections-${index}`}>\n                              <span className=\"uk-margin-small-right\" uk-icon=\"more-vertical\"></span>\n                            </a>\n                            \n                          </td> */}\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : ( null\n            // route === 'create' ? (\n            //   <div className=\"uk-section\">\n            //     <div className=\"uk-container\">\n            //       <h2>Nueva Consulta</h2>\n            //       <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n            //         Regresar\n            //       </button>\n            //       <ConsultationFormSpecial handleSubmit={handleSubmit} handleInput={handleInput} form={form} isButtonDisabled={isButtonDisabled} setVitalsFormValues={setVitalsFormValues}/>\n            //     </div>\n            //   </div>\n            // ) : (\n            //   route === 'read' ? (\n            //     <div className=\"uk-section\">\n            //       <h2>Ver Consulta</h2>\n            //       <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n            //         Regresar\n            //       </button>\n            //       <ConsultationInfo {...consultation} />\n            //     </div>\n            //   ) : (\n            //     <div className=\"uk-section\">\n            //       <h2>Cargando...</h2>\n            //       <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n            //         Regresar\n            //       </button>\n            //     </div> \n            //   )\n            // )\n          )\n        }\n    </div>\n    \n  )\n}\n\nexport default Disease","import React, { useEffect, useState } from 'react'\nimport cie10 from '../../catalogs/cie10.json'\nimport procedures from '../../catalogs/procedimientos.json'\nimport drugs from '../../catalogs/drugs.json'\n\nconst CatalogSearchbar = ({type, form, handleFormInput}) => {\n\n  const [ searchResults, setSearchResults ] = useState('');\n  const [ searchValue, setSearchValue ] = useState('');\n  const [ showDrop, setShowDrop ] = useState(false);\n\n  const handleInput = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  let results = [];\n\n  useEffect( () => {\n\n    switch (type) {\n      case \"diagnosis\": results = cie10.filter( disease =>\n        disease.NOMBRE.toLowerCase().includes(searchValue)\n        );\n        break;\n\n      case \"procedure\": results = procedures.filter( disease =>\n        disease.PRO_NOMBRE.toLowerCase().includes(searchValue)\n        );\n        break;\n\n      case \"drugs\": results = drugs.filter( disease =>\n        disease.generic_name.toLowerCase().includes(searchValue)\n        );\n        break;\n    }\n\n    setSearchResults(results);\n\n    if ( results.length <= 15 ) {\n      setShowDrop(true);\n    }\n    console.log(searchResults)\n\n  }, [searchValue]);\n\n\n  return (\n      <div className=\"uk-margin uk-width-1-1\">\n        <div className=\"uk-search uk-search-default uk-width-1-1\">\n          <span className=\"uk-search-icon-flip\" uk-search-icon=\"true\"></span>\n          <input\n            className=\"uk-search-input uk-text-center\"\n            type=\"search\"\n            placeholder={ type === 'diagnosis' ? \"Busca padecimiento...\" : type === 'drugs' ? \"Busca por nombre genérico...\" : \"Busca procedimiento...\"}\n            value={searchValue}\n            onChange={handleInput}\n          />\n        </div>\n        { showDrop ? (\n            <select className=\"uk-select\" name={type} onChange={handleFormInput}>\n              {searchResults.map( (disease, index) => <option key={index} value={disease.NOMBRE} >{disease.NOMBRE}</option> )}\n            </select>\n          ) : null \n        }\n      </div>\n  )\n}\n\nexport default CatalogSearchbar","import React, { useState } from 'react';\nimport CatalogSearchbar from '../common/CatalogSearchbar'\nimport VitalSignsForm from '../vitalsigns/VitalSignsForm'\n\nconst ConsultationForm = ({ handleSubmit, handleInput, form, isButtonDisabled, setVitalsFormValues }) => {\n\n  const [ showVitalsForm, setShowVitalsForm ] = useState(false);\n\n  const toggleVitalsForm = (event) => {\n    event.preventDefault();\n    setShowVitalsForm(!showVitalsForm)\n  }\n\n  return (\n    <div>\n      {\n        !showVitalsForm ? (\n            <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n              <div className=\"uk-margin\">\n                <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de consulta</label>\n                <div className=\"uk-form-controls\">\n                  <input className=\"uk-input\" type=\"date\" name=\"date\" onChange={handleInput} />\n                </div>\n                <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Doctor que atendió:</label>\n                <div className=\"uk-form-controls\">\n                  <input className=\"uk-input\" type=\"text\" name=\"doctor\" onChange={handleInput} placeholder=\"Nombre del doctor...\" />\n                </div>\n                <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Motivo de consulta</label>\n                <div className=\"uk-form-controls\">\n                  <input className=\"uk-input\" type=\"text\" name=\"chief_complaint\" onChange={handleInput} placeholder=\"Dolor, fiebre, etc...\" />\n                </div>\n                <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Diagnóstico</label>\n                <div className=\"uk-form-controls\">\n                  <CatalogSearchbar type=\"diagnosis\" form={form} handleFormInput={handleInput}/>\n                </div>\n              </div>\n              <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin\">\n                {\n                  showVitalsForm ? (\n                    <button type=\"submit\" className=\"uk-button uk-button-secondary uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={toggleVitalsForm} >\n                      - Signos Vitales\n                    </button>\n                  ) : (\n                    <button type=\"submit\" className=\"uk-button uk-button-secondary uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={toggleVitalsForm}  >\n                      + Signos Vitales\n                    </button>\n                  )\n                }\n              </div>\n              <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin\">\n                <button type=\"submit\" className=\"uk-button uk-button-primary uk-button uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" disabled={isButtonDisabled} >\n                  Crear consulta\n                </button>\n              </div>\n            </form>\n        ) : (\n          <div className=\"uk-section\">\n            <h2>Registro de Signos Vitales</h2>\n            <button className=\"uk-button uk-button-secondary uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={toggleVitalsForm} >\n              Regresar a Consulta\n            </button>\n            <VitalSignsForm type=\"consultation\" setShowVitalsForm={setShowVitalsForm} setVitalsFormValues={setVitalsFormValues}/>\n          </div>\n        )\n      }\n    \n    </div>\n    \n  )\n}\n\nexport default ConsultationForm","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\nimport { getOneVitalSignsConsultation } from '../../services/vitalsigns-services'\n\nimport 'moment/locale/es'  // without this line it didn't work\nmoment.locale('es')\n\nconst ConsultationInfo = ({ consultation }) => {\n\n  const [ vitals, setVitals ] = useState({});\n\n  useEffect( () => {\n\n    getOneVitalSignsConsultation(consultation._id)\n    .then( res => {\n\n      const { vitalsigns } = res.data;\n      console.log(vitalsigns)\n      setVitals(vitalsigns)\n    })\n\n  }, [])\n\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de consulta: {moment(consultation.date).locale('es').format('LL')}</p>\n        <p>Doctor: {consultation.doctor}</p>\n        <p>Motivo de consulta: {consultation.chief_complaint}</p>\n        <p>Diagnóstico: {consultation.diagnosis}</p>\n        <p>Temperatura: {vitals.temperature ? vitals.temperature : 'No registrada'}</p>\n        <p>Presión Arterial: {vitals.blood_pressure_sys ? `${vitals.blood_pressure_sys} / ${vitals.blood_pressure_dias}` : 'No registrada'}</p>\n        <p>Frecuencia Cardiaca: {vitals.heart_rate ? vitals.heart_rate : 'No registrada'}</p>\n        <p>Nivel de Glucosa: {vitals.glucose ? vitals.glucose : 'No registrada'}</p>\n        <p>Peso: {vitals.weight ? vitals.weight : 'No registrado'}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ConsultationInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\nimport 'moment/locale/es'  // without this line it didn't work\n\nimport { getConsultations, createConsultation } from '../../services/consultation-services';\nimport { createVitalSigns } from '../../services/vitalsigns-services'\nimport ConsultationForm from './ConsultationForm';\nimport ConsultationFormSpecial from './ConsultationFormSpecial'\nimport ConsultationInfo from './ConsultationInfo';\n\nmoment.locale('es')\n\nconst Consultation = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [consultation, setConsultation] = useState({});\n  const [ consultations, setConsultations ] = useState([]);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  const [ vitalsFormValues, setVitalsFormValues ] = useState({temperature: null, blood_pressure_sys: null, blood_pressure_dias: null, blood_sugar: null, heart_rate: null, weight: null});\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getConsultations()\n    .then( res => {\n      \n      const { consultations } = res.data;\n      setConsultations(consultations);\n      setRoute('consultations');\n\n    })\n    \n  }, [isButtonDisabled]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();\n    console.log(form);\n    setIsButtonDisabled(true);\n\n    createConsultation(form)\n    .then( res => {\n\n      const { consultation } = res.data    // Destructure updated preferences document from response\n      console.log(consultation)\n\n      vitalsFormValues['consultation'] = consultation._id\n\n      // setVitalsFormValues( currentValues => ({\n      //   ...currentValues,\n      //   [date]: event.target.value\n      // }))\n\n      createVitalSigns(vitalsFormValues)\n      .then( res => {\n\n        const { vitalsigns } = res.data;\n        console.log(vitalsigns)\n\n      })\n      .catch( error => {\n        console.log('error creando signos vitales');\n        console.log(error);\n      })\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡La consulta fue creada exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('consultations');\n      setIsButtonDisabled(false);\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n      \n      setIsButtonDisabled(false);\n\n    });\n\n  }\n\n  const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadConsultation = (consultation) => {\n    setConsultation(consultation);\n    setRoute('read');\n  }\n\n  const goToPrescription = (event, consultation, newRoute) => {\n    event.preventDefault();\n    setConsultation(consultation);\n    setObjectHandler(consultation);\n    setRoute(newRoute);\n    console.log(objectHandler)\n  }\n\n  const goToStudies = (event, consultation, newRoute) => {\n    event.preventDefault();\n    setObjectHandler(consultation);\n    setRoute(newRoute);\n    console.log(objectHandler);\n  }\n\n  return (\n\n    <div className=\"content\">\n      \n        { route === 'consultations' ? (\n          <div className=\"uk-section\">\n            <h2>Consultas</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nueva Consulta\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { consultations.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado consultas</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center uk-visible@s\">Motivo de consulta</th>\n                    <th className=\"uk-text-center uk-visible@s\">Diagnostico</th>\n                    <th className=\"uk-text-center uk-visible@s\">Doctor</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { consultations ? \n                      consultations.map( (consultation, index) => \n                        <tr key={index} >\n                          <td className=\"uk-text-center\">{moment(consultation.date).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{consultation.chief_complaint}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{consultation.diagnosis}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{`Dr. ${consultation.doctor}`}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadConsultation({consultation})} >\n                              Ver Consulta\n                            </button>\n                          </td>\n                          <td>\n                            <a href={`#modal-sections-${index}`} uk-toggle={`target: #modal-sections-${index}`}>\n                              <span className=\"uk-margin-small-right\" uk-icon=\"more-vertical\"></span>\n                            </a>\n                            <div id={`modal-sections-${index}`} className=\"uk-flex-top\" uk-modal=\"true\">\n                              <div className=\"uk-modal-dialog uk-margin-auto-vertical\">\n                                <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\" />\n                                <div className=\"uk-modal-header\">\n                                  <h3 className=\"uk-text-center\">Datos de la Consulta</h3>\n                                  <p>Fecha: {moment(consultation.date).locale('es').format('LL')}</p>\n                                  <p>Doctor: {consultation.doctor}</p>\n                                </div>\n                                <div className=\"uk-modal-body uk-flex uk-flex-column\">\n                                  { consultation.prescription ? (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToPrescription(event, consultation, 'read')} >\n                                        <NavLink to=\"/recetas\">Ver Receta</NavLink>\n                                      </button>\n                                    ) : (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToPrescription(event, consultation, 'create')} >\n                                        <NavLink to=\"/recetas\">Agregar Receta</NavLink>\n                                      </button>\n                                    )\n                                  }\n                                  { consultation.studies ? (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToStudies(event, consultation, 'read')} >\n                                        <NavLink to=\"/estudios\">Ver Estudios</NavLink>\n                                      </button>\n                                    ) : (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToStudies(event, consultation, 'create')} >\n                                        <NavLink to=\"/estudios\">Agregar Estudios</NavLink>\n                                      </button>\n                                    )\n                                  }\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td className=\"uk-text-center\">Cargando</td>\n                        <td className=\"uk-text-center uk-visible@s\">Cargando</td>\n                        <td className=\"uk-text-center uk-visible@s\">Cargando</td>\n                        <td className=\"uk-text-center uk-visible@s\">Cargando</td>\n                        <td className=\"uk-text-center\">Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nueva Consulta</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n                    Regresar\n                  </button>\n                  <ConsultationFormSpecial handleSubmit={handleSubmit} handleInput={handleInput} form={form} isButtonDisabled={isButtonDisabled} setVitalsFormValues={setVitalsFormValues}/>\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Consulta</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n                    Regresar\n                  </button>\n                  <ConsultationInfo {...consultation} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n    \n  )\n}\n\nexport default Consultation","import { useState } from 'react';   // Import useState hook to create custom hook\n\n// Declare hook as a React functional component\nconst useDrugsForm = (drugsArray) => {\n  \n  // Declare form state variable and setForm function to update the form state variable\n  const [ form, setForm ] = useState({});\n  const [ array, setArray ] = useState([]);\n  const [ genericName, setGenericName ] = useState();\n  const [ brandName, setBrandName ] = useState();\n  const [ dosageForm, setDosageForm ] = useState();\n  const [ dose, setDose ] = useState();\n  const [ indications, setIndications ] = useState();\n\n  // Declare handleInput function for input data manipulation\n  const handleInput = (event) => {\n    \n    // Destructure input name and value (data that is being changed by user)\n    const { name, value } = event.target;\n\n    // When using checkboxes, store the values in an array\n    if ( event.target.type === 'checkbox' ) {\n      \n      array.push(value);\n      setArray(array);\n      setForm( prevState => ({...prevState, [name]: array}) );\n\n    } else {\n      console.log(form)\n      // Update the form state without erasing previos values (with prevState)\n      setForm( prevState => ({...prevState, [name]: value}) );\n\n    }\n\n  };\n\n  // Declare handleInputFile function for files manipulation\n  const handleFileInput = (event) => {\n\n    // Destructure input name and files (data that is being changed by user)\n    const { name, files } = event.target;\n\n    // Update the form state without erasing previos values (with prevState)\n    setForm( prevState => ({...prevState, [name]: files}) );\n\n  };\n\n  // Return the form state variable and input handling functions\n  return { form, setForm, handleInput, handleFileInput };\n\n};\n\nexport default useDrugsForm;","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/drugs' : 'http://localhost:3000/api/drugs';\n\n// Export get function to retrieve all prescriptions of the current logged in user\nexport const getDrugs = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable prescription creation\nexport const createDrug = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getDrug = (drugID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${drugID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editDrug = (drugID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${drugID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useState } from 'react';\n\nconst PrescriptionForm = ({ handleSubmit, handleInput, handleFileInput, form, isButtonDisabled, objectHandler, drugs }) => {\n\n  const [ drugFields, setDrugFields ] = useState([]);\n  const [ drugQuantity, setDrugQuantity] = useState(0);\n  let drug = {'generic_name': null, 'brand_name': null, 'dosage_form': null, 'dose': null, 'directions': null};\n\n  useEffect( () => {\n\n  }, [drugQuantity])\n\n  const handleDrugInput = (event, index) => {\n\n    switch (event.target.name) {\n      case 'generic_name':\n        drugs[index].generic_name = event.target.value;\n        // setForm( prevState => ({...prevState, ['drugs']: {[name]:value}}) );\n        break;\n      case 'brand_name':\n        drugs[index].brand_name = event.target.value;\n        // setForm( prevState => ({...prevState, [name]: value}) );\n        break;\n      case 'dosage_form':\n        drugs[index].dosage_form = event.target.value;\n        // setForm( prevState => ({...prevState, [name]: value}) );\n        break;\n      case 'dose':\n        drugs[index].dose = event.target.value;\n        // setForm( prevState => ({...prevState, [name]: value}) );\n        break;\n      case 'directions':\n        drugs[index].directions = event.target.value;\n        // setForm( prevState => ({...prevState, [name]: value}) );\n        break;\n    }\n\n    console.log(drugs);\n\n  }\n  \n  const addDrugField = (event) => {\n\n    event.preventDefault();\n    drugFields.push(1)\n    drugs.push(drug);\n\n    setDrugFields(drugFields);\n    setDrugQuantity(drugQuantity+1)\n\n    return null;\n\n  }\n\n  const deleteDrugField = (event) => {\n\n    event.preventDefault();\n    drugFields.pop()\n    drugs.pop();\n\n    setDrugFields(drugFields);\n    setDrugQuantity(drugQuantity-1)\n\n    return null;\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <h4>Datos de la Receta</h4>\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de receta:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"date\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"doctor\">Doctor que atendió:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"doctor\" onChange={handleInput} placeholder=\"Nombre del doctor...\" />\n        </div>\n        <div className=\"uk-flex uk-flex-middle uk-flex-around uk-margin\">\n          <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Imagen de la receta:</label>\n          <div className=\"js-upload uk\" uk-form-custom=\"true\">\n            <input onChange={handleFileInput} name=\"image\" type=\"file\" multiple />\n            <button className=\"uk-button uk-button-default\" type=\"button\" tabIndex=\"-1\">Seleccionar</button>\n          </div>\n        </div>\n        \n        <div id=\"drugs\" className=\"uk-margin\">\n          { drugFields.map( (drugField, index) => \n            <div className=\"uk-margin\" key={index}>\n              <h4>Medicamento {index+1} <span className=\"uk-margin-left\" uk-icon=\"minus-circle\" onClick={event => deleteDrugField(event)}></span></h4>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre Genérico:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"generic_name\" onChange={event => handleDrugInput(event, index)} placeholder=\"Nombre genérico del medicamento\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre Comercial:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"brand_name\" onChange={event => handleDrugInput(event, index)} placeholder=\"Nombre comercial del medicamento\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Presentación:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"dosage_form\" onChange={event => handleDrugInput(event, index)} placeholder=\"Tabletas, jarabe, etc...\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Dosis:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"dose\" onChange={event => handleDrugInput(event, index)} placeholder=\"500 mg, 10 ml, etc...\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Indicaciones:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"directions\" onChange={event => handleDrugInput(event, index)} placeholder=\"1 tableta c/8 horas, 1 inyección diaria, etc...\" />\n              </div>\n            </div> ) }\n        </div>\n        <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin\">\n          <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => addDrugField(event)} >\n            + Medicamento\n          </button>\n        </div>\n        \n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-button-small uk-border-pill\" disabled={isButtonDisabled} >\n          Crear receta\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default PrescriptionForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst PrescriptionInfo = ({ prescription }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de receta: {moment(prescription.date).locale('es').format('LL')}</p>\n        <p>Doctor: {prescription.doctor}</p>\n        { prescription.image === 'Sin imagen registrada' ? null :\n            <div uk-lightbox=\"true\">\n              <a className=\"uk-button uk-button-default\" href={prescription.image} data-alt=\"Image\">Ver Imagen</a>\n            </div>\n        }\n        \n        { prescription.drugs.map( (drug, index) =>\n            <div className=\"uk-margin\" key={index}>\n              <h4>Medicamento {index+1}</h4>\n              <p>Nombre Genérico : {prescription.drugs[index].generic_name}</p>\n              <p>Nombre Comercial : {prescription.drugs[index].brand_name}</p>\n              <p>Presentación : {prescription.drugs[index].dosage_form}</p>\n              <p>Dosis : {prescription.drugs[index].dose}</p>\n              <p>Indicaciones : {prescription.drugs[index].directions}</p>\n            </div>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default PrescriptionInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useDrugsForm from '../../hooks/useDrugsForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport { getPrescriptions, createPrescription, getPrescription, editPrescription } from '../../services/prescription-services';\nimport { createDrug } from '../../services/drug-services';\n\nimport PrescriptionForm from './PrescriptionForm';\nimport PrescriptionInfo from './PrescriptionInfo';\n\nconst Prescription = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput, handleFileInput } = useDrugsForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ prescription, setPrescription] = useState({});\n  const [ prescriptions, setPrescriptions ] = useState([]);\n  const [ showForm, setShowForm ] = useState(false);\n  const [ showConsultation, setShowConsultation ] = useState(false);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  let drugs = [/*{'generic_name': null, brand_name: null, dosage_form: null, dose: null, indications: null}]*/];\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    if ( route !== 'create' && route !== 'read' ) {\n\n      getPrescriptions()\n      .then( res => {\n      \n        const { prescriptions } = res.data;\n        setPrescriptions(prescriptions);\n        setRoute('prescriptions');\n\n      });\n    }\n\n    \n    \n  }, [route]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true)\n\n    const formData = new FormData();      // Declare formData as new instance of FormData class\n    const { image } = form;     // Destructure profile_picture from form\n\n    console.log(drugs)\n    form.drugsJSON = JSON.stringify(drugs);\n    console.log(form)\n\n    // LearningCenterObject.observations = myArray;\n    // form.drugs = drugsArray\n    // console.log\n\n    // Iterate through every key in form object and append name:value to formData\n    for (let key in form) {\n\n      // If profile_picture, append as first item in array (currently 1 file allowed, index 0)\n      if ( key === 'image' ) formData.append(key, image[0]);\n\n      else formData.append(key, form[key]);\n      \n    }\n    \n    // Call edit service with formData as parameter, which includes form data for user profile information\n    createPrescription(formData)\n    .then( res => {\n\n      const { prescription } = res.data   // Destructure updated user document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡Tu receta fue creada exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('prescriptions');\n      setIsButtonDisabled(false);\n      setObjectHandler({});\n\n      // Save drug information\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n      setIsButtonDisabled(false)\n\n    });\n    \n  };\n\n  const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadPrescription = (prescription) => {\n    setPrescription(prescription);\n    setRoute('read');\n  }\n\n  const deleteConsultationObject = () => {\n    setObjectHandler(null);\n    setRoute('prescriptions');\n  }\n\n  return (\n\n    <div className=\"content\">\n      \n        { route === 'prescriptions' ? (\n          <div className=\"uk-section\">\n            <h2>Recetas</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nueva Receta\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { prescriptions.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado recetas</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center uk-visible\">Doctor</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { prescriptions ? \n                      prescriptions.map( (prescription, index) => \n                        <tr key={index}>\n                          <td className=\"uk-text-center\">{moment(prescription.date).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center uk-visible\">{`Dr. ${prescription.doctor}`}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadPrescription({prescription})} >\n                              Ver\n                            </button>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nueva Receta</h2>\n                  { objectHandler ?\n                      <h4>{objectHandler._id}</h4>\n                      : null\n                  }\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={deleteConsultationObject} >\n                    Regresar\n                  </button>\n                  <PrescriptionForm handleSubmit={handleSubmit} handleInput={handleInput} handleFileInput={handleFileInput} form={form} isButtonDisabled={isButtonDisabled} objectHandler={objectHandler} drugs={drugs}/>\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Receta</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('prescriptions')} >\n                    Regresar\n                  </button>\n                  <PrescriptionInfo {...prescription} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('prescriptions')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n    \n  )\n}\n\nexport default Prescription","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/prescriptions' : 'http://localhost:3000/api/prescriptions';\n\n// Export get function to retrieve all prescriptions of the current logged in user\nexport const getPrescriptions = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable prescription creation\nexport const createPrescription = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getPrescription = (prescriptionID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${prescriptionID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editPrescription = (prescriptionID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${prescriptionID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/medicalhistory' : 'http://localhost:3000/api/medicalhistory';\n\n// Export get function to retrieve all emergencies of the current logged in user\nexport const getMedicalHistories = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable MedicalHistory creation\nexport const createMedicalHistory = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getMedicalHistory = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editMedicalHistory = (userID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${userID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useContext, useState } from 'react';           // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';                  // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                  // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                      // Import useForm custom hook\nimport UIkit from 'uikit';                                      // Import UIkit for notifications\nimport moment from 'moment';                                    // Import momentjs for date formatting\n\nimport { getMedicalHistory, createMedicalHistory, editMedicalHistory } from '../../services/medhistory-services';  // Import edit API call\n\nconst MedHistory = () => {\n\n  const { form, setForm, handleInput, handleFileInput } = useForm();\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  const [ medHistory, setMedHistory ] = useState({});\n  \n  const { user, setUser, route, setRoute } = useContext(AppContext); // Destructure user state variable\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n\n  let familyHistoryObj = {\n    \"Ninguno\": true,\n    \"Autoinmunes\": false,\n    \"Cardiacas\": false,\n    \"Cáncer\": false,\n    \"Convulsiones\": false,\n    \"Diabetes\": false,\n    \"Dislipidemia\": false,\n    \"Eclampsia\": false,\n    \"Hipertensión\": false,\n    \"Psiquiátricas\": false,\n    \"Tiroideas\": false,\n    \"Tuberculosis\": false,\n  }, healthHistoryObj = {\n    \"Ninguno\": true,\n    \"Cardiovascular\": false,\n    \"Gastrointestinal\": false,\n    \"Músculo-Esquelético\": false,\n    \"Dolor\": false,\n    \"Génito-Urinario\": false,\n    \"Respiratorio\": false,\n    \"Psiquiátrico\": false,\n    \"Órganos de los Sentidos\": false,\n    \"Otros\": false,\n    \"Dermatológico\": false,\n    \"Síntomas Generales\": false,\n    \"Endócrino\": false,\n    \"Hemato-Linfático\": false,\n    \"Sistema Inmunológico\": false,\n    \"Sistema Nervioso\": false,\n  }, addictionsObj = {\n    \"Ninguna\": true,\n    \"Alcoholismo\": false,\n    \"Sustancias Psicotrópicas\": false,\n    \"Tabaquismo\": false,\n    \"Otras\": false,\n  }, allergiesObj = {\n    \"Agentes Biológicos\": \"Ninguno\",\n    \"Alimentos\": \"Ninguno\",\n    \"Insectos\": \"Ninguno\",\n    \"Medicamentos\": \"Ninguno\",\n  }, weekly_exercise_hours = 0;\n\n  // Hook to update component when user state variable is modified\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getMedicalHistory()\n    .then( res => {\n\n      const { medicalHistory } = res.data;\n      console.log(medicalHistory)\n      setMedHistory(medicalHistory);\n\n    });\n\n  }, [user] );\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true);\n\n    form['family_history'] = familyHistoryObj;\n    form['health_history'] = healthHistoryObj;\n    form['addictions'] = addictionsObj;\n    form['allergies'] = allergiesObj;\n    form['weekly_exercise_hours'] = weekly_exercise_hours;\n\n    console.log(form)\n    \n    // Call edit service with formData as parameter, which includes form data for user profile information\n    if ( route === 'edit' ) {\n\n      editMedicalHistory(form)\n      .then( res => {\n\n        const { medicalHistory } = res.data   // Destructure updated user document from response\n        \n        setMedHistory(medicalHistory);              // Modify user state variable with updated information\n        setRoute('none');\n        setIsButtonDisabled(false);\n\n        // Send UIkit success notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> '¡Tu historial clínico fue actualizado exitosamente!'`,\n          pos: 'bottom-center',\n          status: 'success'\n        });\n\n      })\n      .catch( error => {\n\n        console.log(error);\n        setIsButtonDisabled(false);\n\n        // Send UIkit error notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> ${error}`,\n          pos: 'bottom-center',\n          status: 'danger'\n        });\n\n      });\n\n    }\n\n    if ( route !== 'edit' ) {\n\n      createMedicalHistory(form)\n      .then( res => {\n\n        const { medicalHistory } = res.data   // Destructure updated user document from response\n        \n        setMedHistory(medicalHistory);              // Modify user state variable with updated information\n        setRoute('none');\n        setIsButtonDisabled(false);\n\n        // Send UIkit success notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> '¡Tu historial clínico fue creado exitosamente!'`,\n          pos: 'bottom-center',\n          status: 'success'\n        });\n\n      })\n      .catch( error => {\n\n        console.log(error);\n        setIsButtonDisabled(false);\n\n        // Send UIkit error notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> ${error}`,\n          pos: 'bottom-center',\n          status: 'danger'\n        });\n\n      });\n\n    }\n\n  };\n\n  const handleMedHistoryInput = (event) => {\n\n    const { name, value, id } = event.target;\n\n    switch ( name ) {\n      case 'family_history':\n        familyHistoryObj[value] = !familyHistoryObj[value];\n        console.log(familyHistoryObj)\n        // setForm( prevState => ({...prevState, ['family_history']: familyHistoryObj}) );\n        break;\n      case 'health_history':\n        healthHistoryObj[value] = !healthHistoryObj[value];\n        console.log(healthHistoryObj)\n        // setForm( prevState => ({...prevState, ['health_history']: healthHistoryObj}) );\n        break;\n      case 'addictions':\n        addictionsObj[value] = !addictionsObj[value];\n        console.log(addictionsObj)\n        // setForm( prevState => ({...prevState, ['addictions']: addictionsObj}) );\n        break;\n      case 'allergies':\n        allergiesObj[id] = value;\n        console.log(allergiesObj)\n        // setForm( prevState => ({...prevState, ['allergies']: allergiesObj}) );\n        break;\n      case 'weekly_exercise_hours':\n        weekly_exercise_hours = parseInt(value)\n    }\n\n    console.log(familyHistoryObj)\n    console.log(healthHistoryObj)\n    console.log(addictionsObj)\n    console.log(allergiesObj)\n  }\n\n  return (\n    <div className=\"content\">\n      \n      { route === 'none' && !medHistory ? (\n          <div className=\"uk-section\">\n            <h2>Mis Antecedentes</h2>\n            <div className=\"uk-container uk-overflow-auto\">\n              <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n                <h4 className=\"uk-margin\">Antecedentes Heredo-Familiares</h4>\n                <div className=\"uk-margin\">\n                  <div className=\"uk-form-label\">Enfermedades o Síntomas:</div>\n                  <div className=\"uk-form-controls uk-flex\">\n                    <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Ninguno\" defaultChecked={true} onChange={handleMedHistoryInput} /> Ninguno</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Convulsiones\" onChange={handleMedHistoryInput} /> Convulsiones</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Cáncer\" onChange={handleMedHistoryInput} /> Cáncer</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Diabetes\" onChange={handleMedHistoryInput} /> Diabetes</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Dislipidemia\" onChange={handleMedHistoryInput} /> Dislipidemia</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Eclampsia\" onChange={handleMedHistoryInput} /> Eclampsia</label>\n                    </div>\n                    <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Autoinmunes\" onChange={handleMedHistoryInput} /> Autoinmunes</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Cardiacas\" onChange={handleMedHistoryInput} /> Cardiacas</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Psiquiátricas\" onChange={handleMedHistoryInput} /> Psiquiátricas</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Tiroideas\" onChange={handleMedHistoryInput} /> Tiroideas</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Hipertensión\" onChange={handleMedHistoryInput} /> Hipertensión</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Tuberculosis\" onChange={handleMedHistoryInput} /> Tuberculosis</label>\n                    </div>\n                  </div>\n                </div>\n                <h4 className=\"uk-margin\">Antecedentes Personales Patológicos</h4>\n                <div className=\"uk-margin\">\n                  <div className=\"uk-form-label\">Sistemas o Aparatos:</div>\n                  <div className=\"uk-form-controls uk-flex\">\n                    <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Ninguno\" defaultChecked={true} onChange={handleMedHistoryInput} /> Ninguno</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Cardiovascular\" onChange={handleMedHistoryInput} /> Cardiovascular</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Gastrointestinal\" onChange={handleMedHistoryInput} /> Gastrointestinal</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Músculo-Esquelético\" onChange={handleMedHistoryInput} /> Músculo-esquelético</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Dolor\" onChange={handleMedHistoryInput} /> Dolor</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Génito-Urinario\" onChange={handleMedHistoryInput} /> Génito-Urinario</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Respiratorio\" onChange={handleMedHistoryInput} /> Respiratorio</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Psiquiátrico\" onChange={handleMedHistoryInput} /> Psiquiátrico</label>\n                    </div>\n                    <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Órganos de los Sentidos\" onChange={handleMedHistoryInput} /> Órganos de Sentidos</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Otros\" onChange={handleMedHistoryInput} /> Otros</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Dermatológico\" onChange={handleMedHistoryInput} /> Dermatológico</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Síntomas Generales\" onChange={handleMedHistoryInput} /> Síntomas Generales</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Endócrino\" onChange={handleMedHistoryInput} /> Endócrino</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Hemato-Linfático\" onChange={handleMedHistoryInput} /> Hemato-Linfático</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Sistema Inmunológico\" onChange={handleMedHistoryInput} /> Sist. Inmunológico</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Sistema Nervioso\" onChange={handleMedHistoryInput} /> Sist. Nervioso</label>\n                    </div>\n                  </div>\n                </div>\n                <h4 className=\"uk-margin\">Antecedentes Personales No Patológicos</h4>\n                <div className=\"uk-margin\">\n                  <div className=\"uk-form-controls\">\n                    <label className=\"uk-form-label\" htmlFor=\"date\">Horas de Actividad Física a la Semana:</label>\n                    <div className=\"uk-form-controls\">\n                      <input className=\"uk-input\" type=\"number\" name=\"weekly_exercise_hours\" onChange={handleMedHistoryInput} />\n                    </div>\n                    <div className=\"uk-form-label\">Adicciones:</div>\n                    <div className=\"uk-flex uk-flex-column\">\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Ninguna\" defaultChecked={true} onChange={handleMedHistoryInput} /> Ninguna</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Alcoholismo\" onChange={handleMedHistoryInput} /> Alcoholismo</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Sustancias Psicotrópicas\" onChange={handleMedHistoryInput} /> Sustancias Psicotrópicas</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Tabaquismo\" onChange={handleMedHistoryInput} /> Tabaquismo</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Otras\" onChange={handleMedHistoryInput} /> Otras</label>\n                    </div>\n                  </div>\n                </div>\n                <h4 className=\"uk-margin\">Alergias</h4>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"date\">Agentes Biológicos:</label>\n                  <div className=\"uk-form-controls\">\n                    <input className=\"uk-input\" type=\"text\" name=\"allergies\" id=\"Agentes Biológicos\" onChange={handleMedHistoryInput} placeholder=\"Introducir alergéno\" />\n                  </div>\n                  <label className=\"uk-form-label\" htmlFor=\"date\">Alimentos:</label>\n                  <div className=\"uk-form-controls\">\n                    <input className=\"uk-input\" type=\"text\" name=\"allergies\" id=\"Alimentos\" onChange={handleMedHistoryInput} placeholder=\"Introducir alergéno\" />\n                  </div>\n                  <label className=\"uk-form-label\" htmlFor=\"date\">Insectos:</label>\n                  <div className=\"uk-form-controls\">\n                    <input className=\"uk-input\" type=\"text\" name=\"allergies\" id=\"Insectos\" onChange={handleMedHistoryInput} placeholder=\"Introducir alergéno\" />\n                  </div>\n                  <label className=\"uk-form-label\" htmlFor=\"date\">Medicamentos:</label>\n                  <div className=\"uk-form-controls\">\n                    <input className=\"uk-input\" type=\"text\" name=\"allergies\" id=\"Medicamentos\" onChange={handleMedHistoryInput} placeholder=\"Introducir alergéno\" />\n                  </div>\n                </div>\n                <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n                  <button type=\"submit\" className=\"uk-button uk-button-primary uk-button-small uk-border-pill\" disabled={isButtonDisabled} onClick={event => setRoute('none')} >\n                    Crear Historial\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        ) : route === 'none' ? (\n          <div className=\"uk-section\">\n            <h2>Mis Antecedentes</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('edit')} >\n              Editar historial\n            </button>\n            <div className=\"uk-container uk-overflow-auto\">\n              <div className=\"uk-margin\">\n                <h4 className=\"uk-margin\">Antecedentes Heredo-Familiares</h4>\n                <ul className=\"uk-list\">\n                  { medHistory.family_history ? Object.entries(medHistory.family_history).map( (entry, index) => {\n                    if (entry[1] === true) \n                      return (<li key={index}>{entry[0]}</li>) \n                    else \n                      return null\n                  }) : 'Cargando' }\n                </ul>\n                <h4 className=\"uk-margin\">Antecedentes Personales Patológicos</h4>\n                <ul className=\"uk-list\">\n                  { medHistory.health_history ? Object.entries(medHistory.health_history).map( (entry, index) => {\n                    if (entry[1] === true) \n                    return (<li key={index}>{entry[0]}</li>) \n                  else \n                    return null\n                }) : 'Cargando' }\n                </ul>\n                <h4 className=\"uk-margin\">Antecedentes Personales No Patológicos</h4>\n                <p>Horas de actividad física a la semana: {medHistory.weekly_exercise_hours}</p>\n                <p>Adicciones:</p>\n                <ul className=\"uk-list\">\n                  { medHistory.addictions ? Object.entries(medHistory.addictions).map( (entry, index) => {\n                    if (entry[1] === true) \n                    return (<li key={index}>{entry[0]}</li>) \n                  else \n                    return null\n                }) : 'Cargando' }\n                </ul>\n                <h4 className=\"uk-margin\">Alergias</h4>\n                <ul className=\"uk-list\">\n                  { medHistory.allergies ? Object.entries(medHistory.allergies).map( (entry, index) => {\n                    \n                    return (<li key={index}>{entry[0]}: {entry[1]}</li>) \n                  \n                }) : 'Cargando' }\n                </ul>\n              </div>\n          </div>\n        </div>\n        ) : (\n          <div className=\"uk-section\">\n            <h2>Editar mis Antecedentes</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('none')} >\n              Regresar\n            </button>\n            <div className=\"uk-container uk-overflow-auto\">\n              <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n                <h4 className=\"uk-margin\">Antecedentes Heredo-Familiares</h4>\n                <div className=\"uk-margin\">\n                  <div className=\"uk-form-label\">Enfermedades o Síntomas:</div>\n                  <div className=\"uk-form-controls uk-flex\">\n                    <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Ninguno\" defaultChecked={true} onChange={handleMedHistoryInput} /> Ninguno</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Convulsiones\" onChange={handleMedHistoryInput} /> Convulsiones</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Cáncer\" onChange={handleMedHistoryInput} /> Cáncer</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Diabetes\" onChange={handleMedHistoryInput} /> Diabetes</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Dislipidemia\" onChange={handleMedHistoryInput} /> Dislipidemia</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Eclampsia\" onChange={handleMedHistoryInput} /> Eclampsia</label>\n                    </div>\n                    <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Autoinmunes\" onChange={handleMedHistoryInput} /> Autoinmunes</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Cardiacas\" onChange={handleMedHistoryInput} /> Cardiacas</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Psiquiátricas\" onChange={handleMedHistoryInput} /> Psiquiátricas</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Tiroideas\" onChange={handleMedHistoryInput} /> Tiroideas</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Hipertensión\" onChange={handleMedHistoryInput} /> Hipertensión</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Tuberculosis\" onChange={handleMedHistoryInput} /> Tuberculosis</label>\n                    </div>\n                  </div>\n                </div>\n                <h4 className=\"uk-margin\">Antecedentes Personales Patológicos</h4>\n                <div className=\"uk-margin\">\n                  <div className=\"uk-form-label\">Sistemas o Aparatos:</div>\n                  <div className=\"uk-form-controls uk-flex\">\n                    <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Ninguno\" defaultChecked={true} onChange={handleMedHistoryInput} /> Ninguno</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Cardiovascular\" onChange={handleMedHistoryInput} /> Cardiovascular</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Gastrointestinal\" onChange={handleMedHistoryInput} /> Gastrointestinal</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Músculo-Esquelético\" onChange={handleMedHistoryInput} /> Músculo-esquelético</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Dolor\" onChange={handleMedHistoryInput} /> Dolor</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Génito-Urinario\" onChange={handleMedHistoryInput} /> Génito-Urinario</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Respiratorio\" onChange={handleMedHistoryInput} /> Respiratorio</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Psiquiátrico\" onChange={handleMedHistoryInput} /> Psiquiátrico</label>\n                    </div>\n                    <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Órganos de los Sentidos\" onChange={handleMedHistoryInput} /> Órganos de Sentidos</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Otros\" onChange={handleMedHistoryInput} /> Otros</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Dermatológico\" onChange={handleMedHistoryInput} /> Dermatológico</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Síntomas Generales\" onChange={handleMedHistoryInput} /> Síntomas Generales</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Endócrino\" onChange={handleMedHistoryInput} /> Endócrino</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Hemato-Linfático\" onChange={handleMedHistoryInput} /> Hemato-Linfático</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Sistema Inmunológico\" onChange={handleMedHistoryInput} /> Sist. Inmunológico</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Sistema Nervioso\" onChange={handleMedHistoryInput} /> Sist. Nervioso</label>\n                    </div>\n                  </div>\n                </div>\n                <h4 className=\"uk-margin\">Antecedentes Personales No Patológicos</h4>\n                <div className=\"uk-margin\">\n                  <div className=\"uk-form-controls\">\n                    <label className=\"uk-form-label\" htmlFor=\"date\">Horas de Actividad Física a la Semana:</label>\n                    <div className=\"uk-form-controls\">\n                      <input className=\"uk-input\" type=\"number\" name=\"weekly_exercise_hours\" onChange={handleMedHistoryInput} />\n                    </div>\n                    <div className=\"uk-form-label\">Adicciones:</div>\n                    <div className=\"uk-flex uk-flex-column\">\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Ninguna\" defaultChecked={true} onChange={handleMedHistoryInput} /> Ninguna</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Alcoholismo\" onChange={handleMedHistoryInput} /> Alcoholismo</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Sustancias Psicotrópicas\" onChange={handleMedHistoryInput} /> Sustancias Psicotrópicas</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Tabaquismo\" onChange={handleMedHistoryInput} /> Tabaquismo</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Otras\" onChange={handleMedHistoryInput} /> Otras</label>\n                    </div>\n                  </div>\n                </div>\n                <h4 className=\"uk-margin\">Alergias</h4>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"date\">Agentes Biológicos:</label>\n                  <div className=\"uk-form-controls\">\n                    <input className=\"uk-input\" type=\"text\" name=\"allergies\" id=\"Agentes Biológicos\" onChange={handleMedHistoryInput} placeholder=\"Introducir alergéno\" />\n                  </div>\n                  <label className=\"uk-form-label\" htmlFor=\"date\">Alimentos:</label>\n                  <div className=\"uk-form-controls\">\n                    <input className=\"uk-input\" type=\"text\" name=\"allergies\" id=\"Alimentos\" onChange={handleMedHistoryInput} placeholder=\"Introducir alergéno\" />\n                  </div>\n                  <label className=\"uk-form-label\" htmlFor=\"date\">Insectos:</label>\n                  <div className=\"uk-form-controls\">\n                    <input className=\"uk-input\" type=\"text\" name=\"allergies\" id=\"Insectos\" onChange={handleMedHistoryInput} placeholder=\"Introducir alergéno\" />\n                  </div>\n                  <label className=\"uk-form-label\" htmlFor=\"date\">Medicamentos:</label>\n                  <div className=\"uk-form-controls\">\n                    <input className=\"uk-input\" type=\"text\" name=\"allergies\" id=\"Medicamentos\" onChange={handleMedHistoryInput} placeholder=\"Introducir alergéno\" />\n                  </div>\n                </div>\n                <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n                  <button type=\"submit\" className=\"uk-button uk-button-primary uk-button-small uk-border-pill\" disabled={isButtonDisabled} onClick={event => setRoute('none')} >\n                    Crear Historial\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )\n      }\n      </div>)\n\n}\n\nexport default MedHistory","import React from 'react';\nimport CatalogSearchbar from '../common/CatalogSearchbar'\n\nconst HospitalizationForm = ({ handleSubmit, handleInput, form, isButtonDisabled }) => {\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n      <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">¿Ingresó usted al quirófano?</label>\n        <div className=\"uk-margin uk-flex uk-flex-around\">\n          <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"isSurgery\" value={false} />No</label>\n          <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"isSurgery\" value={true} />Sí</label>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de admisión:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"admission_date\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de alta:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"discharge_date\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Motivo de visita</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"chief_complaint\" onChange={handleInput} placeholder=\"Dolor, fiebre, etc...\" />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Diagnóstico</label>\n        <div className=\"uk-form-controls\">\n          <CatalogSearchbar type=\"diagnosis\" form={form} handleFormInput={handleInput}/>\n        </div>\n        \n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Clínica</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"facility_name\" onChange={handleInput} placeholder=\"Hospital General de México...\" />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Observaciones y comentarios</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"description\" onChange={handleInput} placeholder=\"Describir evento\" />\n        </div>\n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-button-small uk-border-pill\" disabled={isButtonDisabled} >\n          Crear hospitalización\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default HospitalizationForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst HospitalizationInfo = ({ hospitalization }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de admisión: {moment(hospitalization.admission_date).locale('es').format('LL')}</p>\n        <p>Motivo de visita: {hospitalization.chief_complaint}</p>\n        <p>Diagnóstico: {hospitalization.diagnosis}</p>\n        <p>Clínica: {hospitalization.facility_name}</p>\n        <p>Observaciones y comentarios: {hospitalization.description}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default HospitalizationInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport { AppContext } from '../../AppContext';\nimport useForm from '../../hooks/useForm';\nimport UIkit from 'uikit';\nimport moment from 'moment';\n\nimport { getHospitalizations, getHospitalization, createHospitalization } from '../../services/hospitalization-services';\nimport HospitalizationForm from './HospitalizationForm';\nimport HospitalizationInfo from './HospitalizationInfo';\n\nconst Hozpitalization = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ hospitalization, setHospitalization ] = useState({});\n  const [ hospitalizations, setHospitalizations ] = useState([]);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getHospitalizations()\n    .then( res => {\n      \n      const { hospitalizations } = res.data;\n      setHospitalizations(hospitalizations);\n      setRoute('hospitalizations');\n\n    })\n    \n  }, [isButtonDisabled]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();\n    setIsButtonDisabled(true);\n    console.log(form)\n\n    createHospitalization(form)\n    .then( res => {\n\n      const { hospitalization } = res.data    // Destructure updated preferences document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡La hospitalización fue creada exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('hospitalizations');\n      setIsButtonDisabled(false);\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n      \n      setIsButtonDisabled(false);\n\n    });\n\n  }\n\n  // const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadHospitalization = (hospitalization) => {\n    setHospitalization(hospitalization);\n    setRoute('read');\n  }\n\n  const goToPrescription = (event, hospitalization, newRoute) => {\n    event.preventDefault();\n    setHospitalization(hospitalization);\n    setObjectHandler(hospitalization);\n    setRoute(newRoute);\n    console.log(objectHandler)\n  }\n\n  const goToStudies = (event, hospitalization, newRoute) => {\n    event.preventDefault();\n    setObjectHandler(hospitalization);\n    setRoute(newRoute);\n    console.log(objectHandler);\n  }\n\n  return (\n    <div className=\"content\">\n      \n        { route === 'hospitalizations' ? (\n          <div className=\"uk-section\">\n            <h2>Hospitalizaciones</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nueva Hospitalización\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { hospitalizations.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado hospitalizaciones</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center\">Diagnóstico</th>\n                    <th className=\"uk-text-center uk-visible@s\">Clínica</th>\n                    <th className=\"uk-text-center uk-visible@s\">Estancia</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { hospitalizations ? \n                      hospitalizations.map( (hospitalization, index) => \n                        <tr key={index} >\n                          <td className=\"uk-text-center\">{moment(hospitalization.admission_date).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center\">{hospitalization.diagnosis ? hospitalization.diagnosis : 'No definido'}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{hospitalization.facility_name}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{`No disponible`}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadHospitalization({hospitalization})} >\n                              Ver\n                            </button>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nueva Hospitalización</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('hospitalizations')} >\n                    Regresar\n                  </button>\n                  <HospitalizationForm handleSubmit={handleSubmit} handleInput={handleInput} form={form} isButtonDisabled={isButtonDisabled} />\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Hospitalización</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('hospitalizations')} >\n                    Regresar\n                  </button>\n                  <HospitalizationInfo {...hospitalization} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('hospitalizations')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n  )\n}\n\nexport default Hozpitalization","import React from 'react';\nimport CatalogSearchbar from '../common/CatalogSearchbar'\n\nconst EmergencyForm = ({ handleSubmit, handleInput, form, isButtonDisabled }) => {\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de urgencia:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"date\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Motivo de visita</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"chief_complaint\" onChange={handleInput} placeholder=\"Dolor, fiebre, etc...\" />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Diagnóstico</label>\n        <div className=\"uk-form-controls\">\n          <CatalogSearchbar type=\"diagnosis\" form={form} handleFormInput={handleInput}/>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Clínica</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"facility_name\" onChange={handleInput} placeholder=\"Hospital General de México...\" />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Observaciones y comentarios</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"description\" onChange={handleInput} placeholder=\"Describir evento\" />\n        </div>\n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-button-small uk-border-pill\" disabled={isButtonDisabled} >\n          Crear Urgencia\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default EmergencyForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst EmergencyInfo = ({ emergency }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de visita: {moment(emergency.date).locale('es').format('LL')}</p>\n        <p>Motivo de visita: {emergency.chief_complaint}</p>\n        <p>Diagnóstico: {emergency.diagnosis}</p>\n        <p>Clínica: {emergency.facility_name}</p>\n        <p>Observaciones y comentarios: {emergency.description}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default EmergencyInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport { AppContext } from '../../AppContext';\nimport useForm from '../../hooks/useForm';\nimport UIkit from 'uikit';\nimport moment from 'moment';\n\nimport { getEmergencies, getEmergency, createEmergency } from '../../services/emergency-services';\nimport EmergencyForm from './EmergencyForm';\nimport EmergencyInfo from './EmergencyInfo';\n\nconst Emergency = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ emergency, setEmergency ] = useState({});\n  const [ emergencies, setEmergencies ] = useState([]);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getEmergencies()\n    .then( res => {\n      \n      const { emergencies } = res.data;\n      setEmergencies(emergencies);\n      setRoute('emergencies');\n\n    })\n    \n  }, [isButtonDisabled]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();\n    setIsButtonDisabled(true);\n    console.log(form)\n\n    createEmergency(form)\n    .then( res => {\n\n      const { emergency } = res.data    // Destructure updated preferences document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡La urgencia fue creada exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('emergencies');\n      setIsButtonDisabled(false);\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n      \n      setIsButtonDisabled(false);\n\n    });\n\n  }\n\n  // const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadEmergency = (emergency) => {\n    setEmergency(emergency);\n    setRoute('read');\n  }\n\n  const goToPrescription = (event, emergency, newRoute) => {\n    event.preventDefault();\n    setEmergency(emergency);\n    setObjectHandler(emergency);\n    setRoute(newRoute);\n    console.log(objectHandler)\n  }\n\n  const goToStudies = (event, emergency, newRoute) => {\n    event.preventDefault();\n    setObjectHandler(emergency);\n    setRoute(newRoute);\n    console.log(objectHandler);\n  }\n\n  return (\n    <div className=\"content\">\n      \n        { route === 'emergencies' ? (\n          <div className=\"uk-section\">\n            <h2>Urgencias</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nueva Urgencia\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { emergencies.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado urgencias</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center uk-visible@s\">Motivo de visita</th>\n                    <th className=\"uk-text-center\">Diagnóstico</th>\n                    <th className=\"uk-text-center uk-visible@s\">Clínica</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { emergencies ? \n                      emergencies.map( (emergency, index) => \n                        <tr key={index} >\n                          <td className=\"uk-text-center\">{moment(emergency.date).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{emergency.chief_complaint}</td>\n                          <td className=\"uk-text-center\">{emergency.diagnosis}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{emergency.facility_name}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadEmergency({emergency})} >\n                              Ver\n                            </button>\n                          </td>\n                          <td>\n                            <a href={`#modal-sections-${index}`} uk-toggle={`target: #modal-sections-${index}`}>\n                              <span className=\"uk-margin-small-right\" uk-icon=\"more-vertical\"></span>\n                            </a>\n                            <div id={`modal-sections-${index}`} className=\"uk-flex-top\" uk-modal=\"true\">\n                              <div className=\"uk-modal-dialog uk-margin-auto-vertical\">\n                                <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\" />\n                                <div className=\"uk-modal-header\">\n                                  <h3 className=\"uk-text-center\">Datos de la Urgencia</h3>\n                                  <p>Fecha: {moment(emergency.date).locale('es').format('LL')}</p>\n                                  <p>Clínica: {emergency.facility_name}</p>\n                                </div>\n                                <div className=\"uk-modal-body uk-flex uk-flex-column\">\n                                  { emergency.treatment ? (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToPrescription(event, emergency, 'read')} >\n                                        <NavLink to=\"/recetas\">Ver Receta</NavLink>\n                                      </button>\n                                    ) : (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToPrescription(event, emergency, 'create')} >\n                                        <NavLink to=\"/recetas\">Agregar Receta</NavLink>\n                                      </button>\n                                    )\n                                  }\n                                  { emergency.treatment ? (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToStudies(event, emergency, 'read')} >\n                                        <NavLink to=\"/estudios\">Ver Estudios</NavLink>\n                                      </button>\n                                    ) : (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToStudies(event, emergency, 'create')} >\n                                        <NavLink to=\"/estudios\">Agregar Estudios</NavLink>\n                                      </button>\n                                    )\n                                  }\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nueva Urgencia</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('emergencies')} >\n                    Regresar\n                  </button>\n                  <EmergencyForm handleSubmit={handleSubmit} handleInput={handleInput} form={form} isButtonDisabled={isButtonDisabled} />\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Urgencia</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('emergencies')} >\n                    Regresar\n                  </button>\n                  <EmergencyInfo {...emergency} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('emergencies')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n  )\n}\n\nexport default Emergency","import React, { useEffect, useState } from 'react'\nimport cie10 from '../../catalogs/cie10.json'\nimport procedures from '../../catalogs/procedimientos.json'\nimport drugs from '../../catalogs/drugs.json'\n\nconst CatalogSearchbar = ({type, form, handleFormInput}) => {\n\n  const [ searchResults, setSearchResults ] = useState('');\n  const [ searchValue, setSearchValue ] = useState('');\n  const [ showDrop, setShowDrop ] = useState(false);\n\n  const handleInput = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  let results = [];\n\n  useEffect( () => {\n\n    switch (type) {\n      case \"diagnosis\": results = cie10.filter( disease =>\n        disease.NOMBRE.toLowerCase().includes(searchValue)\n        );\n        break;\n\n      case \"procedure\": results = procedures.filter( disease =>\n        disease.PRO_NOMBRE.toLowerCase().includes(searchValue)\n        );\n        break;\n\n      case \"drugs\": results = drugs.filter( disease =>\n        disease.generic_name.toLowerCase().includes(searchValue)\n        );\n        break;\n    }\n\n    setSearchResults(results);\n\n    if ( results.length <= 15 ) {\n      setShowDrop(true);\n    }\n    console.log(searchResults)\n\n  }, [searchValue]);\n\n\n  return (\n      <div className=\"uk-margin uk-width-1-1\">\n        <div className=\"uk-search uk-search-default uk-width-1-1\">\n          <span className=\"uk-search-icon-flip\" uk-search-icon=\"true\"></span>\n          <input\n            className=\"uk-search-input uk-text-center\"\n            type=\"search\"\n            placeholder={ type === 'diagnosis' ? \"Busca padecimiento...\" : type === 'drugs' ? \"Busca por nombre genérico...\" : \"Busca procedimiento...\"}\n            value={searchValue}\n            onChange={handleInput}\n          />\n        </div>\n        { showDrop ? (\n            <select className=\"uk-select\" name=\"generic_name\" onChange={handleFormInput}>\n              {searchResults.map( (drug, index) => <option key={index} value={drug.generic_name} >{drug.generic_name}</option> )}\n            </select>\n          ) : null \n        }\n      </div>\n  )\n}\n\nexport default CatalogSearchbar","import React from 'react';\nimport DrugSearchbar from '../common/DrugSearchbar'\n\nconst DrugForm = ({ handleSubmit, handleInput, form, isButtonDisabled }) => {\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de inicio del tratamiento:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"date_added\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre de patente:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"brand_name\" onChange={handleInput} placeholder=\"Tempra, Aspirina...\" />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre genérico:</label>\n        <div className=\"uk-form-controls\">\n          <DrugSearchbar type=\"drugs\" form={form} handleFormInput={handleInput}/>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Dosis:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"dose\" onChange={handleInput} placeholder=\"500 mg, 5 mg, etc...\" />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Presentación:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"dosage_form\" onChange={handleInput} placeholder=\"Tableta, jarabe, etc\" />\n        </div>\n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-button-small uk-border-pill\" disabled={isButtonDisabled} >\n          Agregar Medicamento\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default DrugForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst PrescriptionInfo = ({ prescription }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de receta: {moment(prescription.date).locale('es').format('LL')}</p>\n        <p>Doctor: {prescription.doctor}</p>\n        { prescription.generic_name.map( (drug, index) =>\n            <div className=\"uk-margin\" key=\"index\">\n              <p>Nombre Genérico : {prescription.generic_name}</p>\n              <p>Nombre Comercial : {prescription.brand_name}</p>\n              <p>Presentación : {prescription.dosage_form}</p>\n              <p>Dosis : {prescription.dose}</p>\n              <p>Indicaciones : {prescription.directions}</p>\n            </div>\n          )\n        }\n        <div uk-lightbox=\"true\">\n          <a className=\"uk-button uk-button-default\" href={prescription.image} data-alt=\"Image\">Ver Imagen</a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PrescriptionInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport { getDrugs, createDrug, getDrug, editDrug } from '../../services/drug-services';\n\nimport DrugForm from './DrugForm';\nimport DrugInfo from './DrugInfo';\n\nconst Drug = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput, handleFileInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ drug, setDrug] = useState({});\n  const [ drugs, setDrugs ] = useState([]);\n  const [ showForm, setShowForm ] = useState(false);\n  const [ showDrug, setShowDrug ] = useState(false);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    if ( route !== 'create' && route !== 'read' ) {\n\n      getDrugs()\n      .then( res => {\n      \n        const { drugs } = res.data;\n        setDrugs(drugs);\n        setRoute('drugs');\n\n      });\n    }\n\n    \n    \n  }, [route]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true)\n\n    createDrug(form)\n    .then( res => {\n\n      const { drug } = res.data    // Destructure updated preferences document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡El registro de medicamento fue creado exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('drugs');\n      setIsButtonDisabled(false);\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n      \n      setIsButtonDisabled(false);\n\n    });\n    \n  };\n\n  const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadDrug = (drug) => {\n    setDrug(drug);\n    setRoute('read');\n  }\n\n  const deleteDrugObject = () => {\n    setObjectHandler(null);\n    setRoute('drugs');\n  }\n\n  return (\n\n    <div className=\"content\">\n      \n        { route === 'drugs' ? (\n          <div className=\"uk-section\">\n            <h2>Mis Medicamentos</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nuevo Medicamento\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { drugs.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado medicamentos</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha Agregada</th>\n                    <th className=\"uk-text-center uk-visible\">Medicamento</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { drugs ? \n                      drugs.map( (drug, index) => \n                        <tr key={index}>\n                          <td className=\"uk-text-center\">{moment(drug.date_added).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center uk-visible\">{drug.brand_name}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadDrug({drug})} >\n                              Ver\n                            </button>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nuevo Medicamento</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={deleteDrugObject} >\n                    Regresar\n                  </button>\n                  <DrugForm handleSubmit={handleSubmit} handleInput={handleInput} handleFileInput={handleFileInput} form={form} isButtonDisabled={isButtonDisabled} objectHandler={objectHandler}/>\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Medicamento</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('drugs')} >\n                    Regresar\n                  </button>\n                  <DrugInfo {...drug} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('drugs')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n    \n  )\n}\n\nexport default Drug","import React, { useContext } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { AppContext } from './AppContext';\n\n// Import Components for navigation\n// import Landing from './components/landing/Landing';\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\nimport Profile from './components/profile/Profile';\n// import Preferences from './components/profile/Preferences';\nimport Home from './components/home/Home';\n// import DoctorLanding from './components/doctor/DoctorLanding';\n// import DoctorHome from './components/doctor/DoctorHome';\n// import PatientHome from './components/patient/PatientHome';\n// import Patients from './components/doctor/myPatients/Patients'\nimport Study from './components/study/Study';\nimport Disease from './components/disease/Disease';\nimport Consultation from './components/consultation/Consultation';\nimport Prescription from './components/prescription/Prescription';\nimport MedHistory from './components/medHistory/MedHistory';\nimport CatalogSearchbar from './components/common/CatalogSearchbar';\nimport Hospitalization from './components/hospitalization/Hozpitalization';\nimport Emergency from './components/emergency/Emergency'\nimport ConsultationFormSpecial from './components/consultation/ConsultationFormSpecial'\nimport Drug from './components/drug/Drug'\n// import Calendar from './components/schedule/Calendar';\n\nconst Router = () => {\n\n  const { user, setRoute } = useContext(AppContext); // Destructure user state variable\n\n  const handleRoute = (newRoute) => setRoute(newRoute);\n\n  return (\n    <Switch>\n\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n      \n      <Route path=\"/login\">\n        <Login />\n      </Route>\n\n      <Route path=\"/home\">\n        <Home />\n      </Route>\n\n      <Route path=\"/perfil\">\n        <Profile />\n      </Route>\n\n      <Route path=\"/antecedentes\">\n        <MedHistory />\n      </Route>\n\n      <Route path=\"/padecimientos\">\n        <Disease />\n      </Route>\n\n      <Route path=\"/consultas\">\n        <Consultation />\n      </Route>\n\n      <Route path=\"/medicamentos\">\n        <Drug />\n      </Route>\n\n      <Route path=\"/recetas\">\n        <Prescription />\n      </Route>\n\n      <Route path=\"/estudios\">\n        <Study />\n      </Route>\n\n      <Route path=\"/hospitalizaciones\">\n        <Hospitalization />\n      </Route>\n\n      <Route path=\"/urgencias\">\n        <Emergency />\n      </Route>\n\n      <Route path=\"/test\">\n        <ConsultationFormSpecial />\n      </Route>\n\n    </Switch>\n  )\n};\n\nexport default Router;","import React, { useContext } from 'react';                // Import React and useContext hook\nimport { Link, NavLink } from 'react-router-dom';         // Import NavLink for \"navigation\"\nimport { useHistory } from 'react-router-dom';            // Import useHistory for \"redirection\"\nimport { AppContext }  from '../../AppContext';           // Import AppContext to use created context\nimport { logout } from '../../services/auth-services';    // Import logout service for logout functionality\nimport logo from '../../images/health-check.svg'\n\n\n// Declare Nav functional component (Navigation Bar)\nconst Navbar = () => {\n  \n  // Destructure user state variable and resetUserContext function from context\n  const { user, setRoute, resetUserContext } = useContext(AppContext);\n  // Destructure push method from useHistory to \"redirect\" user\n  const { push } = useHistory();\n\n  // Declare function for handling logout button\n  const handleLogout = () => {\n\n    logout();                   // Execute logout function (clear localStorage)\n    push('/login');             // Redirect user to login\n    resetUserContext();         // delete user data from context to an empty object\n    closeMenu();\n\n  };\n\n  const handleRoute = (event, newRoute) => {\n    \n    event.preventDefault();               // Prevent page reloading after submit action\n    setRoute(newRoute);                   // Update route state variable with route sent as parameter\n    closeMenu();\n\n  }\n\n  const closeMenu = () => {\n    const toggle = document.getElementById('toggle');\n    toggle.checked = !toggle.checked;\n  }\n\n  return (\n\n    <nav className=\"uk-navbar uk-navbar-container uk-flex uk-flex-between uk-flex-middle uk-flex-wrap\">\n      \n      <ul className=\"uk-navbar-nav uk-height-1-1\">\n          <li className=\"uk-active uk-flex uk-flex-middle\">\n            <NavLink to=\"/\">\n              <div className=\"uk-margin-left\">\n                  <img src={logo} alt=\"logo\" width=\"48px\" height=\"48px\" className=\"uk-img\" />\n              </div>\n            </NavLink>\n          </li>\n          <li className=\"uk-active uk-flex uk-flex-middle uk-height-1-1\">\n              <NavLink to=\"/\">\n                B-Health\n              </NavLink>\n          </li>\n      </ul>\n\n      <label id=\"nav-menu\" htmlFor=\"toggle\" className=\"uk-margin-right uk-height-1-1\"><span uk-icon=\"menu\"></span></label>\n      <input type=\"checkbox\" id=\"toggle\"/>\n      \n      \n          \n          { user._id ? \n            <ul className=\"menu uk-navbar-nav\">\n              <li className=\"uk-active\"  onClick={event => handleRoute(event, \"none\")}>\n                <NavLink to=\"/perfil\">\n                  <div className=\"uk-width-auto uk-margin-small-right\">\n                    <img className=\"uk-border-circle\" width={40} height={40} src={user.profile_picture} alt=\"User profile\" />\n                  </div>\n                  <p className=\"uk-margin-remove\">Mi Perfil</p>\n                </NavLink>\n              </li>\n              <li className=\"uk-active\">\n                <NavLink to=\"/login\">\n                  <button className=\"uk-button uk-button-primary uk-button-small uk-border-pill\" onClick={handleLogout} >\n                    Logout\n                  </button>\n                </NavLink>\n              </li>\n              <div className=\"mobile-only uk-overflow-auto\">\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/home\">Mi Salud</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/antecedentes\">Antecedentes</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/padecimientos\">Padecimientos</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/consultas\">Consultas</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/medicamentos\">Medicamentos</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/recetas\">Recetas</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/estudios\">Estudios</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/urgencias\">Urgencias</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/hospitalizaciones\">Hospitalizaciones</NavLink>\n                </li>\n                {/* <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/agenda\">Agenda</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/terapias\">Otras Terapias</NavLink>\n                </li> */}\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/tienda\">Tienda</NavLink>\n                </li>\n              </div>\n            </ul>\n            :\n            <ul className=\"menu uk-navbar-nav\">\n              <li className=\"uk-active uk-width-1-1 uk-flex uk-flex-center uk-flex-middle\" onClick={closeMenu} ><Link to=\"/servicios\">Servicios</Link></li>\n              <li className=\"uk-active uk-width-1-1 uk-flex uk-flex-center uk-flex-middle\" onClick={closeMenu} ><Link to=\"/nosotros\">Nosotros</Link></li>\n              <li className=\"uk-active uk-width-1-1 uk-flex uk-flex-center uk-flex-middle\" onClick={closeMenu} >\n                <Link to=\"/login\">\n                  <button className=\"uk-button uk-button-primary uk-button-small uk-border-pill\">\n                    Ingresar\n                  </button>\n                </Link>\n              </li>\n            </ul>\n          }\n\n    </nav>\n    \n  );\n\n};\n\nexport default Navbar;","import React, { useContext } from 'react';                // Import React and useContext hook\nimport { NavLink, Link } from 'react-router-dom';               // Import NavLink for \"navigation\"\n//import { useHistory } from 'react-router-dom';            // Import useHistory for \"redirection\"\nimport { AppContext }  from '../../AppContext';           // Import AppContext to use created context\n\n// Declare Sidebar functional component\nconst Sidebar = () => {\n  \n  // Destructure user and route state variables from context and setRoute function to change route\n  const { user, setRoute } = useContext(AppContext); // Destructure user state variable\n\n  // Declare function to update the route state variable according to the selected link for inner component nav\n  const handleRoute = (event, newRoute) => {\n    \n    event.preventDefault();               // Prevent page reloading after submit action\n    setRoute(newRoute);                   // Update route state variable with route sent as parameter\n  \n  }\n\n  // Destructure push method from useHistory to \"redirect\" user\n  //const { push } = useHistory();\n\n  return (\n     \n    <div className=\"sidebar\">\n      <ul className=\"uk-nav-default uk-nav-parent-icon uk-width-4-5 uk-text-left uk-margin-left uk-margin-large-top\" uk-nav=\"true\">\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/home\">Mi Salud</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/antecedentes\">Antecedentes</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/padecimientos\">Padecimientos</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/consultas\">Consultas</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/medicamentos\">Medicamentos</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/recetas\">Recetas</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/estudios\">Estudios</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/urgencias\">Urgencias</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/hospitalizaciones\">Hospitalizaciones</NavLink>\n        </li>\n        {/* <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/agenda\">Agenda</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/terapias\">Otras Terapias</NavLink>\n        </li> */}\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/tienda\">Tienda</NavLink>\n        </li>\n      </ul>\n    </div>\n        \n  );\n};\n\nexport default Sidebar;","import React, { useContext } from 'react';\nimport Router from './Router';\nimport { AppContext } from './AppContext';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/common/Navbar'\nimport Sidebar from './components/common/Sidebar';\n\nfunction App() {\n\n  const { user } = useContext(AppContext); // Destructure user state variable\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <main>\n        { user._id ? (\n          <div className=\"uk-flex\">\n            <Sidebar />\n            <Router />\n          </div>\n        ) : (\n          <Router />\n        )}\n      </main>\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Import BrowserRouter to allow the user to navigate within the app by setting defined routes. See ./Router.js for more information\nimport { BrowserRouter } from 'react-router-dom';\n\n// Import the Provider which will allow to pass down the state variables and methods to its descendants\nimport AppProvider from './AppContext';\n\n// Import UIkit for styles\nimport UIkit from 'uikit';\nimport Icons from 'uikit/dist/js/uikit-icons';\nimport 'uikit/dist/css/uikit.min.css';\n\nUIkit.use(Icons);   // Execute to allow icon use\n\n// Create a component that: Provides state variables and methods AND router functionality for navigation, to the APP\nconst WithRouterAndProvider = () => (\n  <AppProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AppProvider>\n)\n\nReactDOM.render(<WithRouterAndProvider />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}