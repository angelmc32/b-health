{"version":3,"sources":["images/icons/sick-face.svg","logo.svg","AppContext.js","components/landing/Landing.js","services/auth-services.js","components/auth/AuthForm.js","hooks/useForm.js","components/auth/Signup.js","components/auth/Login.js","components/common/questionnaire/Questionnaire.js","components/profile/Profile.js","services/profile-services.js","components/vitalsigns/VitalSignsCard.js","services/vitalsigns-services.js","components/vitalsigns/VitalSignsForm.js","components/home/Home.js","services/study-services.js","components/study/StudyForm.js","components/study/StudyInfo.js","components/study/Study.js","services/consultation-services.js","services/emergency-services.js","services/hospitalization-services.js","components/disease/Disease.js","components/common/CatalogSearchbar.js","components/consultation/ConsultationFormSpecial.js","components/consultation/ConsultationInfo.js","components/consultation/Consultation.js","hooks/useDrugsForm.js","services/drug-services.js","components/prescription/PrescriptionForm.js","components/prescription/PrescriptionInfo.js","components/prescription/Prescription.js","services/prescription-services.js","services/medhistory-services.js","components/medHistory/MedHistory.js","components/hospitalization/HospitalizationForm.js","components/hospitalization/HospitalizationInfo.js","components/hospitalization/Hozpitalization.js","components/emergency/EmergencyForm.js","components/emergency/EmergencyInfo.js","components/emergency/Emergency.js","components/common/DrugSearchbar.js","components/drug/DrugForm.js","components/drug/DrugInfo.js","components/drug/Drug.js","components/vitalsigns/VitalSigns.js","components/medHistory/Summary.js","services/pdf-services.js","Router.js","components/common/Navbar.js","components/common/Sidebar.js","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync","images/icons/blood-pressure.svg","images/icons/diamond-icon.svg","images/icons/blood-sugar.svg","images/icons/heart-rate.svg","images/icons/temperature.svg","images/icons/weight.svg","images/icons/happy-face.svg","images/icons/sad-face.svg","images/icons/add-vitals.svg","images/icons/blue-icon.svg"],"names":["module","exports","AppContext","createContext","AppProvider","children","initialUserState","JSON","parse","localStorage","getItem","useState","user","setUser","route","setRoute","objectHandler","setObjectHandler","userContext","resetUserContext","Provider","value","Landing","className","to","src","placeholderImg","alt","base_url","AuthForm","submit","action","email","password","confirm_password","handleChange","emailInputState","setEmailInputState","passwordInputState","setPasswordInputState","confPasswordInputState","setConfPasswordInputState","isButtonDisabled","setIsButtonDisabled","useEffect","inputValidation","event","target","name","test","validateEmail","validatePassword","onSubmit","uk-icon","onChange","type","disabled","moment","locale","useForm","form","setForm","resetForm","handleInput","checked","prevState","date","format","console","log","handleFileInput","files","Signup","useContext","push","useHistory","data","preventDefault","axios","post","then","res","token","setItem","stringify","UIkit","notification","message","pos","status","catch","msg","response","Login","error","Questionnaire","title","questionnaire","handleSubmit","backButton","isComplete","currentStep","setCurrentStep","onClick","map","section","index","changeStepState","key","href","Profile","_id","ProfileQuestionnaire","htmlFor","placeholder","first_name","last_name1","last_name2","utc","date_of_birth","gender","curp","zip_code","marital_status","defaultValue","education_level","phone_number","width","height","profile_picture","formData","FormData","append","patch","headers","Authorization","editProfile","VitalSignsCard","vitalsign_name","vitalsign_icon","form_name","handleInputChange","showInput","setShowInput","step","createVitalSigns","VitalSignsForm","setShowVitalsForm","setVitalsFormValues","vitalsFormValues","persist","parseFloat","currentValues","temperature_icon","blood_pressure_icon","blood_sugar_icon","heart_rate_icon","weight_icon","vitalsigns","Home","temperature","blood_pressure_sys","blood_pressure_dias","blood_sugar","heart_rate","weight","Date","now","uk-grid","StudyForm","studyType","required","uk-form-custom","multiple","tabIndex","StudyInfo","study","doctor","image","uk-lightbox","data-alt","study_name","facility_name","Study","setStudy","studies","setStudies","study_type","get","getStudies","length","loadStudy","createStudy","getConsultations","getEmergencies","getHospitalizations","Disease","diseases","setDiseases","setConsultations","setEmergencies","setHospitalizations","diseasesHandler","consultations","i","diagnosis","emergencies","hospitalizations","disease","uk-toggle","id","uk-modal","uk-close","CatalogSearchbar","handleFormInput","searchResults","setSearchResults","searchValue","setSearchValue","showDrop","setShowDrop","results","cie10","filter","NOMBRE","toLowerCase","includes","procedures","PRO_NOMBRE","drugs","generic_name","specialties","ESPECIALIDAD","uk-search-icon","ConsultationForm","showVitalsForm","rows","ConsultationInfo","consultation","goToPrescription","chief_complaint","prescription","Consultation","setConsultation","newRoute","goToStudies","loadConsultation","ConsultationFormSpecial","datetime","timeperiod","createConsultation","useDrugsForm","drugsArray","array","setArray","PrescriptionForm","drugFields","setDrugFields","drugQuantity","setDrugQuantity","drug","handleDrugInput","dosage_form","dose","schedule","periodicity","directions","drugField","pop","deleteDrugField","addDrugField","PrescriptionInfo","Prescription","setPrescription","prescriptions","setPrescriptions","getPrescriptions","loadPrescription","drugsJSON","createPrescription","MedHistory","medHistory","setMedHistory","healthHistoryState","setHealthHistoryState","allergiesObj","weekly_exercise_hours","getMedicalHistory","medicalHistory","parseInt","editMedicalHistory","createMedicalHistory","handleMedHistoryInput","medHistoryQuestionnaire","defaultChecked","family_diabetes","family_diabetes_patient","family_hypertension","family_hypertension_patient","family_asthma","family_asthma_patient","family_allergies","family_allergies_patient","family_heart_disease","family_heart_disease_patient","family_liver_disease","family_liver_disease_patient","family_digestive_disease","family_digestive_disease_patient","family_kidney_disease","family_kidney_disease_patient","family_endocrin_disease_patient","family_mental_disease","family_mental_disease_patient","family_cancer","family_cancer_patient","family_other_disease","family_other_disease_patient","others","setStep","changeStep","family_endocrin_disease","health_history","Object","entries","entry","procedure","allergies","traumatisms","addictions","smoking_status","alcoholism","nutritional_status","sleep_status","oral_hygiene","HospitalizationForm","HospitalizationInfo","hospitalization","admission_date","description","Hozpitalization","setHospitalization","loadHospitalization","createHospitalization","EmergencyForm","EmergencyInfo","emergency","Emergency","setEmergency","loadEmergency","treatment","createEmergency","DrugForm","DrugSearchbar","brand_name","Drug","setDrug","setDrugs","getDrugs","date_added","loadDrug","createDrug","DrugInfo","VitalSigns","temperatureAvg","setTemperatureAvg","sistPressureAvg","setSistPressureAvg","diasPressureAvg","setDiasPressureAvg","heartRateAvg","setHeartRateAvg","respRateAvg","setRespRateAvg","bloodSugarAvg","setBloodSugarAvg","weightAvg","setWeightAvg","heightAvg","setHeightAvg","getVitalSigns","tempCounter","sistPressure","sistPressCounter","diasPressure","diasPressCounter","heartRate","heartRateCounter","respRate","repsRateCounter","bloodSugar","bloodSugCounter","weightCounter","heightCounter","record","vital","Math","floor","toFixed","Summary","pdfFile","setPdfFile","responseType","Accept","createSummary","FileSaver","saveAs","Blob","file","pageNumber","Router","exact","path","Navbar","handleRoute","closeMenu","toggle","document","getElementById","logo","clear","Sidebar","uk-nav","App","Boolean","window","location","hostname","match","use","Icons","WithRouterAndProvider","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","webpackEmptyContext","req","e","Error","code","keys","resolve"],"mappings":"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","file":"static/js/main.fe8b4885.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sick-face.e921748a.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { createContext, useState } from 'react';   // Import React and 2 hooks for context-creation and state-manipulation\n\n// Create context object, and export it so children components can use it through the useContext hook\nexport const AppContext = createContext();\n\n// Create Provider component \nconst AppProvider = ({ children }) => {\n\n  // Obtain user data from the localStorage, or set it as an empty object in case there is no user stored\n  const initialUserState = JSON.parse( localStorage.getItem('user') ) || {};\n\n  // Declare user state variable and setUser function to update the user state variable\n  const [ user, setUser ] = useState(initialUserState);\n  const [ route, setRoute ] = useState(\"none\");\n  const [ objectHandler, setObjectHandler ] = useState({});\n  \n  // Declare resetUserContext function that will allow us to reset the user context\n  const resetUserContext = () => {\n\n    setUser({});    // Sets user context to an empty object \n    setRoute(\"none\");\n    setObjectHandler({});\n\n  };\n\n  // Create the context objects to be passed as props in the Provider, with our created state and functions\n  const userContext = { user, setUser, route, setRoute, objectHandler, setObjectHandler, resetUserContext };\n\n  // Return a context Provider component, sending the userContext as value prop\n  return (\n    <AppContext.Provider value={ userContext }>\n      { children }\n    </AppContext.Provider>\n  );\n\n};\n\nexport default AppProvider;","import React from 'react'\nimport { Link, NavLink } from 'react-router-dom';         // Import NavLink for \"navigation\"\nimport placeholderImg from '../../images/icons/diamond-icon.svg'\n\nconst Landing = () => {\n  \n  return (\n    <div className=\"content\">\n\n      <div className=\"uk-section\">\n        <div className=\"uk-container uk-height-1-1\">\n          <div className=\"uk-width-1-1 uk-width-2-3@m uk-height-1-1 uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n            <h1>La <span className=\"uk-text-secondary uk-text-bold\">salud</span> de tu <span className=\"uk-text-primary uk-text-bold\">familia</span>, <br/> en tus manos.</h1>\n            <h3 className=\"uk-margin-remove\">Tus datos. Tus medicamentos. Tu salud.</h3>\n            <Link to=\"/registro\" className=\"uk-width-1-1 uk-margin-large uk-hidden@s\">\n              <button className=\"uk-button uk-button-primary uk-width-2-3 uk-border-pill\">\n                Regístrate Gratis\n              </button>\n            </Link>\n            <Link to=\"/login\" className=\"uk-width-1-1 uk-hidden@s\">\n              <button className=\"uk-button uk-button-muted uk-width-2-3 uk-border-pill\">\n                Inicia Sesión\n              </button>\n            </Link>\n            <Link to=\"/registro\" className=\"uk-width-1-1 uk-margin-large\">\n              <button className=\"uk-visible@s uk-button uk-button-primary uk-button-large uk-border-pill\">\n                Regístrate Gratis\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"uk-section\">\n        <div className=\"uk-container\">\n          <div className=\"uk-grid uk-child-width-1-1 uk-child-width-1-3@m\">\n            <div>\n              <div className=\"uk-card uk-card-default uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n                <div className=\"uk-card-media-top uk-width-1-5 uk-flex uk-flex-center uk-flex-middle\">\n                  <img className=\"uk-margin-small-top\" src={placeholderImg} alt=\"\" />\n                </div>\n                <div className=\"uk-card-body uk-padding-small\">\n                  <h3 className=\"uk-margin-remove\">Tu Expediente Clínico</h3>\n                  <p className=\"uk-margin-remove\">La información clínica de tu <span className=\"uk-text-primary uk-text-bold\">familia</span>, siempre segura y disponible.</p>\n                </div>\n              </div>\n            </div>\n            <div>\n              <div className=\"uk-card uk-card-default uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n                <div className=\"uk-card-media-top uk-width-1-5 uk-flex uk-flex-center uk-flex-middle\">\n                  <img className=\"uk-margin-small-top\" src={placeholderImg} alt=\"\" />\n                </div>\n                <div className=\"uk-card-body uk-padding-small\">\n                  <h3 className=\"uk-margin-remove\">Monitorea tu salud</h3>\n                  <p className=\"uk-margin-remove\">Recordatorios para tus <span className=\"uk-text-primary uk-text-bold\">medicamentos</span> y <span className=\"uk-text-primary uk-text-bold\">signos vitales</span></p>\n                </div>\n              </div>\n            </div>\n            <div>\n              <div className=\"uk-card uk-card-default uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n                <div className=\"uk-card-media-top uk-width-1-5 uk-flex uk-flex-center uk-flex-middle\">\n                  <img className=\"uk-margin-small-top\" src={placeholderImg} alt=\"\" />\n                </div>\n                <div className=\"uk-card-body uk-padding-small\">\n                  <h3 className=\"uk-margin-remove\">Controla el acceso</h3>\n                  <p className=\"uk-margin-remove\">Tú decides la información que quieras compartir con <span className=\"uk-text-primary uk-text-bold\">familiares o médicos</span></p>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* \n          <div className=\"uk-visible@s uk-flex uk-width-1-1 uk-child-width-1-3\">\n            <div>Test</div>\n            <div>Test</div>\n            <div>Test</div>\n          </div> */}\n        </div>\n      </div>\n\n      <div className=\"uk-section uk-hidden@s\">\n        <div className=\"uk-container\">\n          <div className=\"uk-text-left\">\n            <h1>Toma el control <br/> de tu salud</h1>\n            <h4>Nadie conoce mejor tu salud <br/>y la de tu familia que tú.</h4>\n            <h3>Con B-Health, nunca fue más sencillo</h3>\n          </div>\n          \n        </div>\n        {/* <div className=\"uk-flex uk-flex-column uk-width-1-1 uk-child-width-1-1\">\n          <div>Test</div>\n          <div>Test</div>\n          <div>Test</div>\n        </div> */}\n      </div>\n\n    </div>\n  )\n}\n\nexport default Landing\n","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api' : 'http://localhost:3000/api';\n\n// Export signup function, which receives data as parameters to enable signup\nexport const signup = (data) => {\n  \n  // Return a call to our /signup route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/signup`, data);\n\n};\n\n// Export login function, which receives data as parameters to enable login\nexport const login = (data) => {\n\n  // Return a call to our /login route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/login`, data);\n\n};\n\n// Export logout function, which \"erases\" the token from the localStorage, and without a token any user\n// that is not logged in will not be able to access the routes that require authentication/token\nexport const logout = () => {\n\n  localStorage.clear();\n\n};","import React, { useEffect, useState } from 'react';                        // Import React\nimport { NavLink } from 'react-router-dom';       // Import NavLink for \"navigation\"\n\n// Declare AuthForm functional component, receives action variable for conditional rendering,\n// email, password and confirm_password variables from form state variable, and submit and handleChange functions\nconst AuthForm = ( { submit, action, email = '', password = '', confirm_password = '', handleChange } ) => {\n\n  let error = null;\n  const [ emailInputState, setEmailInputState ] = useState(null)\n  const [ passwordInputState, setPasswordInputState ] = useState(null)\n  const [ confPasswordInputState, setConfPasswordInputState ] = useState(null)\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(true)\n\n  useEffect( () => {\n    if ( emailInputState === 'uk-form-success' && passwordInputState === 'uk-form-success' && confPasswordInputState === 'uk-form-success' )\n      setIsButtonDisabled(false);\n    else\n      setIsButtonDisabled(true);\n  }, [emailInputState, passwordInputState, confPasswordInputState])\n\n  const validateEmail = (email) => {\n    const regEx = /\\S+@\\S+\\.\\S+/;\n    return regEx.test(email);\n  }\n\n  const validatePassword = (password) => {\n    const regEx = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\n    return regEx.test(password);\n  }\n\n  const inputValidation = (event) => {\n\n    const { name, value } = event.target;\n\n    handleChange(event);\n\n    switch( name ) {\n      case 'email': {\n        if ( validateEmail(value) ) \n          setEmailInputState('uk-form-success');\n        else \n          setEmailInputState('uk-form-danger');\n        break;\n      }\n      case 'password': {\n        if (  validatePassword(value) )\n          setPasswordInputState('uk-form-success');\n        else\n          setPasswordInputState('uk-form-danger');\n        break;\n      }\n      case 'confirm_password': {\n        if ( value === password )\n          setConfPasswordInputState('uk-form-success')\n        else\n          setConfPasswordInputState('uk-form-danger')\n      }\n    }\n    \n  }\n\n  return (\n    <div className=\" uk-width-1-1 uk-margin-top uk-margin-remove-top@s\">\n\n      <div className=\"uk-margin\">\n\n        <h2>{action === \"signup\" ? \"Registro\" : \"Inicia Sesión\"}</h2>\n    \n        { action === \"signup\" ? (\n          <p>¿Ya tienes cuenta? \n            <NavLink to=\"/login\" className=\"uk-margin-small-left\">\n              Accede aquí\n            </NavLink>\n          </p>\n          ) : (\n          <p>¿No tienes cuenta? \n            <NavLink to=\"/signup\" className=\"uk-margin-small-left\">\n              Regístrate aquí\n            </NavLink>\n          </p>\n          )\n        }\n      \n      </div>\n\n        <form className=\"uk-form-stacked\" onSubmit={submit}>\n          \n          <div className=\"uk-margin\">\n            <label className=\"uk-form-label\">Correo Electrónico:</label>\n            <div className=\"uk-inline uk-width-4-5 uk-width-1-3@s\">\n              <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n              <input onChange={event => inputValidation(event)} name=\"email\" value={email} className={emailInputState !== null ? `${emailInputState} uk-input uk-width-1-1 uk-border-pill` : \"uk-input uk-width-1-1 uk-border-pill\"} type=\"email\" />\n            </div>\n            { emailInputState === 'uk-form-danger' ?\n                <div>\n                  <span className=\"uk-text-danger\">Introduce una dirección de correo válida</span>\n                </div>\n              : null \n            }\n          </div>\n          <div className=\"uk-margin\">\n            <label className=\"uk-form-label\">Contraseña:</label>\n            <div className=\"uk-inline uk-width-4-5 uk-width-1-3@s\">\n              <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n              <input\n                onChange={event => inputValidation(event)}\n                name=\"password\"\n                value={password}\n                className={\n                  action === 'signup' ?\n                    passwordInputState !== null ? `${passwordInputState} uk-input uk-width-1-1 uk-border-pill` : \"uk-input uk-width-1-1 uk-border-pill\"\n                  : \"uk-input uk-width-1-1 uk-border-pill\"}\n                type=\"password\"\n              />\n            </div>\n            { passwordInputState === 'uk-form-danger' ?\n                <div>\n                  <span className=\"uk-text-danger\">La contraseña debe contener al menos una mayúscula, una minúscula y un número</span>\n                </div>\n              : null \n            }\n          </div>\n            { action === \"signup\" ? (\n            <div className=\"uk-margin\">\n              <label className=\"uk-form-label\">Confirma tu contraseña:</label>\n              <div className=\"uk-inline uk-width-4-5 uk-width-1-3@s\">\n                <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n                <input\n                  onChange={event => inputValidation(event)}\n                  name=\"confirm_password\"\n                  value={confirm_password}\n                  className={passwordInputState !== null ? `${confPasswordInputState} uk-input uk-width-1-1 uk-border-pill` : \"uk-input uk-width-1-1 uk-border-pill\"}\n                  type=\"password\"\n                />\n              </div>\n              { confPasswordInputState === 'uk-form-danger' ?\n                <div>\n                  <span className=\"uk-text-danger\">Asegúrate de introducir la misma contraseña</span>\n                </div>\n              : null \n            }\n            <div className=\"uk-width-1-1 uk-margin-top\">\n              <input type=\"checkbox\" className=\"uk-checkbox uk-margin-small-right\"/>\n               Estoy de acuerdo con los términos de condiciones\n            </div>\n            </div>\n            ) : null }\n            \n            \n\n          \n\n          <button disabled={action === 'signup' ? isButtonDisabled : false} className=\"uk-button uk-button-primary uk-border-pill uk-width-3-5 uk-width-1-5@s uk-margin\" type=\"submit\">\n            {action === \"signup\" ? \"Registrar\" : \"Entrar\"}\n          </button>\n\n        </form>\n    </div>\n  )\n\n}\n\nexport default AuthForm;","import { useState } from 'react';   // Import useState hook to create custom hook\nimport moment from 'moment'\nimport 'moment/locale/es'  // without this line it didn't work\nmoment.locale('es')\n\n// Declare hook as a React functional component\nconst useForm = () => {\n  \n  // Declare form state variable and setForm function to update the form state variable\n  const [ form, setForm ] = useState({});\n  const [ array, setArray ] = useState([]);\n\n  // Declare handleInput function for input data manipulation\n  const handleInput = (event) => {\n    \n    // Destructure input name and value (data that is being changed by user)\n    const { name, value } = event.target;\n\n    // When using checkboxes, store the values in an array\n    if ( event.target.type === 'checkbox' ) {\n      const { checked } = event.target\n      setForm( prevState => ({...prevState, [name]: checked}) );\n\n    } else if ( name === 'date' ) {\n      let date = moment(value).format()\n      console.log(date)\n      setForm( prevState => ({...prevState, [name]: date}) );\n\n    } else {\n  \n      // Update the form state without erasing previos values (with prevState)\n      setForm( prevState => ({...prevState, [name]: value}) );\n\n    }\n\n  };\n\n  // Declare handleInputFile function for files manipulation\n  const handleFileInput = (event) => {\n\n    // Destructure input name and files (data that is being changed by user)\n    const { name, files } = event.target;\n\n    // Update the form state without erasing previos values (with prevState)\n    setForm( prevState => ({...prevState, [name]: files}) );\n\n  };\n\n  const resetForm = () => setForm({});\n\n  // Return the form state variable and input handling functions\n  return { form, setForm, resetForm, handleInput, handleFileInput };\n\n};\n\nexport default useForm;","import React, { useContext } from 'react';                // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';            // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';            // Import AppContext to use created context\nimport { signup } from '../../services/auth-services';    // Import signup service for API call\nimport AuthForm from './AuthForm';                        // Import AuthForm react component\nimport useForm from '../../hooks/useForm';                // Import useForm custom hook\nimport UIkit from 'uikit';                                // Import UIkit for notifications\n\n// Declare Signup functional component\nconst Signup = () => {\n\n  const { form, handleInput } = useForm();      // Destructure form state variable and handleInput function\n  const { setUser, setRoute } = useContext(AppContext);   // Destructure setUser function for user state manipulation\n  const { push } = useHistory();                // Destructure push method from useHistory to \"redirect\" user\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();                     // Prevent page reloading after submit action\n    \n    // Call signup service with form state variable as parameter, which includes form data for e-mail and password\n    signup(form)\n    .then( res => {\n      \n      const { user, token } = res.data;         // Destructure user and token from response, sent by API\n      \n      // Store user and token in localStorage\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', token);\n\n      setUser(user);    // Modify user state variable, setting the user data in the state\n      setRoute('edit');\n      push('/perfil');    // \"Redirect\" user to home\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='check'></span> Completa tu registro usando la liga que te enviamos a la dirección de correo electrónico proporcionada`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n    })\n    .catch( res => {\n\n      const { msg } = res.response.data;\n      \n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${msg}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n    });\n    \n  };\n\n  const validateEmail = (email) => {\n    const regEx = /\\S+@\\S+\\.\\S+/;\n    return regEx.test(email);\n  }\n\n  return (\n    <div className=\"uk-section\">\n      <div className=\"uk-container\">\n        <AuthForm\n          submit={handleSubmit}\n          action=\"signup\"\n          handleChange={handleInput}\n          validateEmail={validateEmail}\n          {...form}\n        />\n      </div>\n    </div>\n  );\n\n};\n\nexport default Signup;","import React, { useContext } from 'react';              // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';          // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';          // Import AppContext to use created context\nimport { login } from '../../services/auth-services';   // Import login service for API call\nimport AuthForm from './AuthForm';                      // Import AuthForm react component\nimport useForm from '../../hooks/useForm';              // Import useForm custom hook\nimport UIkit from 'uikit';                              // Import UIkit for notifications\n\n// Declare Login functional component\nconst Login = () => {\n\n  const { form, handleInput } = useForm();                // Destructure form state variable and handleInput function\n  const { setUser, setRoute } = useContext(AppContext);   // Destructure setUser function for user state manipulation\n  const { push } = useHistory();                          // Destructure push method from useHistory to \"redirect\" user\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();                     // Prevent page reloading after submit action\n    \n    // Call signup service with form state variable as parameter, which includes form data for e-mail and password\n    login(form)\n    .then( res => {\n      \n      const { user, token } = res.data;         // Destructure user and token from response, sent by API\n      \n      // Store user and token in localStorage\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', token);\n\n      setUser(user);    // Modify user state variable, setting the user data in the state\n      setRoute('');\n      push('/home');    // \"Redirect\" user to home\n\n    })\n    .catch( error => {\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n    });\n    \n  };\n\n  return (\n    <div className=\"uk-section\">\n      <div className=\"uk-container\">\n        <AuthForm\n          submit={handleSubmit}\n          action=\"login\"\n          handleChange={handleInput}\n          {...form}\n        />\n      </div>\n    </div>\n  );\n\n};\n\nexport default Login;","import React, { useState, useContext } from 'react'\nimport { AppContext } from '../../../AppContext'\nimport moment from 'moment';                                    // Import momentjs for date formatting\n\nconst Questionnaire = ({title = 'Cuestionario', questionnaire = [1,2,3], handleSubmit, backButton, isComplete}) => {\n\n  // const { user, setUser, route, setRoute } = useContext(AppContext); // Destructure user state variable\n  \n  const [ currentStep, setCurrentStep ] = useState(0);\n\n  const changeStepState = (index) => {\n    setCurrentStep(index)\n  }\n\n  return (\n        <div>\n          <h2>{title}</h2>\n          { isComplete ? \n            <button onClick={backButton} className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" >\n              Regresar\n            </button> :\n            <h4 className=\"uk-text-danger\">\n              Completa tus Antecedentes\n            </h4>\n            }\n          \n          <div className=\"uk-flex uk-flex-center\">\n            <ul className=\"uk-dotnav\">\n              {\n                questionnaire.map( (section, index) => \n                  <li onClick={() => changeStepState(index)} key={index} className={ index === currentStep ? \"uk-active\" : null }><a href=\"#\">{index}</a></li>\n                )\n              }\n            </ul>\n          </div>\n          <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left uk-margin\">\n            {\n              questionnaire.map( (section, index) => \n                <div key={index} className={ index === currentStep ? \"uk-visible\" : \"uk-hidden\" }>\n                  { section }\n                </div>\n              )\n            }\n            <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin-large-top\">\n              <button type=\"submit\" className=\"uk-button uk-button-primary uk-border-pill uk-width-3-5 uk-width-1-4@s\" >\n                Guardar cambios\n              </button>\n            </div>\n          </form>\n        </div>\n  )\n}\n\nexport default Questionnaire","import React, { useEffect, useContext, useState } from 'react';           // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';                  // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                  // Import AppContext to use created context\nimport { editProfile } from '../../services/profile-services';  // Import edit API call\nimport useForm from '../../hooks/useForm';                      // Import useForm custom hook\nimport UIkit from 'uikit';                                      // Import UIkit for notifications\nimport moment from 'moment';                                    // Import momentjs for date formatting\n\nimport Questionnaire from '../common/questionnaire/Questionnaire'\n\nconst Profile = () => {\n\n  const { form, handleInput, handleFileInput } = useForm();\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  \n  const { user, setUser, route, setRoute } = useContext(AppContext); // Destructure user state variable\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n\n  // Hook to update component when user state variable is modified\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    console.log(user)\n\n  }, [user] );\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true);\n\n    console.log(form)\n\n    // if ( form.profile_picture ) {\n      \n      const formData = new FormData();      // Declare formData as new instance of FormData class\n      const { profile_picture } = form;     // Destructure profile_picture from form\n\n      // Iterate through every key in form object and append name:value to formData\n      for (let key in form) {\n\n        // If profile_picture, append as first item in array (currently 1 file allowed, index 0)\n        if ( key === 'profile_picture' ) formData.append(key, profile_picture[0]);\n\n        else formData.append(key, form[key]);\n        \n      }\n      \n      // Call edit service with formData as parameter, which includes form data for user profile information\n      editProfile(formData)\n      .then( res => {\n\n        const { user } = res.data   // Destructure updated user document from response\n        \n        setUser(user);              // Modify user state variable with updated information\n        setRoute('none');\n        setIsButtonDisabled(false);\n\n        // Send UIkit success notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> '¡Tu perfil fue actualizado exitosamente!'`,\n          pos: 'bottom-center',\n          status: 'success'\n        });\n\n      })\n      .catch( error => {\n\n        console.log(error);\n        setIsButtonDisabled(false);\n\n        // Send UIkit error notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> ${error}`,\n          pos: 'bottom-center',\n          status: 'danger'\n        });\n\n      });\n\n  };\n\n  const backButton = (event) => setRoute('none')\n\n  const ProfileQuestionnaire = [\n    <div>\n      <label className=\"uk-form-label\" htmlFor=\"date\">Nombres:</label>\n      <div className=\"uk-form-controls\">\n        <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"first_name\" onChange={handleInput} placeholder={user.first_name} />\n      </div>\n      <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Apellido paterno:</label>\n      <div className=\"uk-form-controls\">\n        <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"last_name1\" onChange={handleInput} placeholder={user.last_name1} />\n      </div>\n      <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Apellido materno:</label>\n      <div className=\"uk-form-controls\">\n        <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"last_name2\" onChange={handleInput} placeholder={user.last_name2} />\n      </div>\n      <label className=\"uk-form-label\">Fecha de nacimiento: {moment.utc(user.date_of_birth).format('LL')}</label>\n      <div className=\"uk-inline\">\n        <input onChange={handleInput} name=\"date_of_birth\" className=\"uk-input uk-border-pill\" type=\"date\" />\n      </div>\n      <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Género: {user.gender === \"N\" ? \"No definido\" : user.gender === \"F\" ? \"Femenino\" : \"Masculino\"}</label>\n      <div className=\"uk-margin uk-flex uk-flex-around\">\n        <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"F\" />  Mujer</label>\n        <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"M\" />  Hombre</label>\n        <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"N\" />  No binario</label>\n      </div>\n    </div>\n    ,\n    <div>\n      <label className=\"uk-form-label\">CURP:</label>\n      <div className=\"uk-form-controls\">\n        <input onChange={handleInput} name=\"curp\" className=\"uk-input uk-border-pill\" type=\"text\" placeholder={user.curp} />\n      </div>\n      <label className=\"uk-form-label\">Código Postal:</label>\n      <div className=\"uk-form-controls\">\n        <input onChange={handleInput} name=\"zip_code\" className=\"uk-input uk-border-pill\" type=\"number\" placeholder={user.zip_code ? user.zip_code : 12345} />\n      </div>\n      <label className=\"uk-form-label\">Estado Civil registrado: {user.marital_status}</label>\n      <div className=\"uk-form-controls\">\n        <select name=\"marital_status\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={user.marital_status ? user.marital_status : \"\"}>\n          <option></option>\n          <option>Soltero</option>\n          <option>Casado</option>\n          <option>Viudo</option>\n          <option>Divorciado</option>\n        </select>\n      </div>\n      <label className=\"uk-form-label\">Grado Máximo de Estudios: {user.education_level}</label>\n      <div className=\"uk-form-controls\">\n        <select name=\"education_level\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={user.education_level ? user.education_level : \"\"}>\n          <option></option>\n          <option>Primaria</option>\n          <option>Secundaria</option>\n          <option>Preparatoria</option>\n          <option>Licenciatura</option>\n          <option>Posgrado</option>\n        </select>\n      </div>\n    </div>,\n    <div>\n      <label className=\"uk-form-label\">Teléfono/Whatsapp:</label>\n      <div className=\"uk-form-controls\">\n        <input onChange={handleInput} name=\"phone_number\" className=\"uk-input uk-border-pill\" type=\"number\" placeholder={user.phone_number ? user.phone_number : 5544332211} />\n      </div>\n      <label className=\"uk-form-label\">Correo electrónico:</label>\n      <div className=\"uk-form-controls\">\n        <input onChange={handleInput} name=\"email\" className=\"uk-input uk-border-pill\" type=\"email\" placeholder={user.email} />\n      </div>\n    </div>\n  ]\n\n  return (\n    <div className=\"uk-section\">\n      <div className=\"uk-container\">\n        \n        { route !== 'edit' ? (\n          <div>\n            <div className=\"uk-width-auto\">\n              <img className=\"uk-border-circle\" width={128} height={128} src={user.profile_picture} alt=\"User profile\" />\n            </div>\n            <h2>{user.first_name} {user.last_name1}</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('edit')} >\n              Editar mi perfil\n            </button>\n          </div>\n          ) : (\n            null\n          )\n        }\n        \n        <div className=\"uk-container uk-margin\">\n          { route !== 'edit' ? (\n            <div>\n              <div className=\"uk-child-width-1-1 uk-hidden@s\">\n              <div className=\"card-section-white\">\n                  <p>Nombres: {user.first_name}</p>\n                  <p>Apellidos: {user.last_name1} {user.last_name2}</p>\n                  <p>Fecha de nacimiento: {moment.utc(user.date_of_birth).format('LL')}</p>\n                  <p>Género: {user.gender === 'N' ? 'No definido' : user.gender === 'F' ? 'Femenino' : 'Masculino'}</p>\n                </div>\n                <div className=\"card-section-white\">\n                  <p>CURP: {user.curp ? user.curp : 'Información no registrada'}</p>\n                  <p>Estado Civil: {user.marital_status}</p>\n                  <p>Código Postal: {user.zip_code}</p>\n                  <p>Grado Máximo de Estudios: {user.education_level}</p>\n                </div>\n                <div className=\"card-section-white\">\n                  <p>Teléfono: {user.phone_number ? user.phone_number : \"No hay número registrado\"}</p>\n                  <p>Email: {user.email}</p>\n                  <p>Contraseña: *********</p>\n                </div>\n              </div>\n              <div className=\"uk-flex uk-child-width-1-3 uk-visible@s\">\n                <div className=\"card-section-white\">\n                  <p>Nombres: {user.first_name}</p>\n                  <p>Apellidos: {user.last_name1} {user.last_name2}</p>\n                  <p>Fecha de nacimiento: {moment.utc(user.date_of_birth).format('LL')}</p>\n                  <p>Género: {user.gender === 'N' ? 'No definido' : user.gender === 'F' ? 'Femenino' : 'Masculino'}</p>\n                </div>\n                <div className=\"card-section-white\">\n                  <p>CURP: {user.curp ? user.curp : 'Información no registrada'}</p>\n                  <p>Estado Civil: {user.marital_status}</p>\n                  <p>Código Postal: {user.zip_code}</p>\n                  <p>Grado Máximo de Estudios: {user.education_level}</p>\n                </div>\n                <div className=\"card-section-white\">\n                  <p>Teléfono: {user.phone_number ? user.phone_number : \"No hay número registrado\"}</p>\n                  <p>Email: {user.email}</p>\n                  <p>Contraseña: *********</p>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <Questionnaire title=\"Mi Perfil\" isComplete={true} questionnaire={ProfileQuestionnaire} handleSubmit={handleSubmit} form={form} backButton={backButton}/>\n            // <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n            //   <div className=\"uk-margin\">\n            //     <label className=\"uk-form-label\" htmlFor=\"date\">Nombres:</label>\n            //     <div className=\"uk-form-controls\">\n            //       <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"first_name\" onChange={handleInput} placeholder={user.first_name} />\n            //     </div>\n            //     <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Apellido paterno:</label>\n            //     <div className=\"uk-form-controls\">\n            //       <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"last_name1\" onChange={handleInput} placeholder={user.last_name1} />\n            //     </div>\n            //     <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Apellido materno:</label>\n            //     <div className=\"uk-form-controls\">\n            //       <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"last_name2\" onChange={handleInput} placeholder={user.last_name2} />\n            //     </div>\n            //     <label className=\"uk-form-label\">Fecha de nacimiento: {moment.utc(user.date_of_birth).format('LL')}</label>\n            //     <div className=\"uk-inline\">\n            //       <input onChange={handleInput} name=\"date_of_birth\" className=\"uk-input uk-border-pill\" type=\"date\" />\n            //     </div>\n            //     <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Género</label>\n            //     <div className=\"uk-margin uk-flex uk-flex-around\">\n            //       <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"F\" />  Mujer</label>\n            //       <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"M\" />  Hombre</label>\n            //       <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"N\" />  No binario</label>\n            //     </div>\n            //     <label className=\"uk-form-label\">CURP:</label>\n            //     <div className=\"uk-form-controls\">\n            //       <input onChange={handleInput} name=\"curp\" className=\"uk-input uk-border-pill\" type=\"text\" placeholder={user.curp} />\n            //     </div>\n            //     <label className=\"uk-form-label\">Código Postal:</label>\n            //     <div className=\"uk-form-controls\">\n            //       <input onChange={handleInput} name=\"zip_code\" className=\"uk-input uk-border-pill\" type=\"number\" placeholder={user.zip_code ? user.zip_code : 5544332211} />\n            //     </div>\n            //     <label className=\"uk-form-label\">Estado Civil:</label>\n            //     <div className=\"uk-form-controls\">\n            //       <select className=\"uk-select uk-border-pill\">\n            //         <option>Soltero</option>\n            //         <option>Casado</option>\n            //         <option>Viudo</option>\n            //         <option>Divorciado</option>\n            //       </select>\n            //     </div>\n            //     <label className=\"uk-form-label\">Grado Máximo de Estudios:</label>\n            //     <div className=\"uk-form-controls\">\n            //       <select className=\"uk-select uk-border-pill\">\n            //         <option>Primaria</option>\n            //         <option>Secundaria</option>\n            //         <option>Preparatoria</option>\n            //         <option>Licenciatura</option>\n            //         <option>Posgrado</option>\n            //       </select>\n            //     </div>\n            //     <label className=\"uk-form-label\">Teléfono/Whatsapp:</label>\n            //     <div className=\"uk-form-controls\">\n            //       <input onChange={handleInput} name=\"phone_numnber\" className=\"uk-input uk-border-pill\" type=\"number\" placeholder={user.phone_number ? user.phone_number : 5544332211} />\n            //     </div>\n            //     <label className=\"uk-form-label\">Correo electrónico:</label>\n            //     <div className=\"uk-form-controls\">\n            //       <input onChange={handleInput} name=\"email\" className=\"uk-input uk-border-pill\" type=\"email\" placeholder={user.email} />\n            //     </div>\n            //   </div>\n            //   <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n            //     <button type=\"submit\" className=\"uk-button uk-button-primary uk-border-pill uk-width-3-5 uk-width-1-4@s uk-margin\" disabled={isButtonDisabled} >\n            //       Guardar cambios\n            //     </button>\n            //   </div>\n            // </form>\n          )}\n          \n        </div>\n      </div>\n      \n    </div>\n  )\n\n}\n\nexport default Profile","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/profile' : 'http://localhost:3000/api/profile';\n\n// Export edit function, which receives data as parameters to enable profile edition\nexport const editProfile = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /edit route, while sending the parameters obtained from the form/front-end\n  return axios.patch(`${base_url}/edit`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n      \"Content-Type\": \"multipart/form-data\"     // Set content as multipart/form-data for files and text\n    }\n  });\n\n};","import React, { useState } from 'react'\n\nconst VitalSignsCard = ({ vitalsign_name, vitalsign_icon, form_name, handleInputChange }) => {\n\n  const [ showInput, setShowInput ] = useState(false)\n\n  const toggleInput = () => setShowInput(true);\n\n  return (\n    <div className={`uk-card uk-card-hover uk-card-body uk-padding-small`} onClick={toggleInput}>\n      <h5>{vitalsign_name}</h5>\n      <div className=\"uk-flex uk-flex-center\">\n        <img className=\"uk-width-4-5\" src={vitalsign_icon} alt=\"\"/>\n      </div>\n      {\n        showInput ? \n          <input className=\"uk-input uk-width-4-5\" type=\"number\" step=\"any\" name={form_name} onChange={handleInputChange} />\n        : null\n      }\n    </div>\n  )\n}\n\n\nexport default VitalSignsCard","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/vitalsigns' : 'http://localhost:3000/api/vitalsigns';\n\n// Export get function to retrieve all prescriptions of the current logged in user\nexport const getVitalSigns = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable prescription creation\nexport const createVitalSigns = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getOneVitalSigns = (vitalSignsID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${vitalSignsID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getOneVitalSignsConsultation = (consultationID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/vitals/${consultationID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editVitalSigns = (vitalSignsID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${vitalSignsID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useState } from 'react';\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport VitalSignsCard from '../vitalsigns/VitalSignsCard'\n\nimport happy_img from '../../images/icons/happy-face.svg'\nimport sad_img from '../../images/icons/sad-face.svg'\nimport add_vitals_icon from '../../images/icons/add-vitals.svg'\nimport blood_pressure_icon from '../../images/icons/blood-pressure.svg'\nimport blood_sugar_icon from '../../images/icons/blood-sugar.svg'\nimport heart_rate_icon from '../../images/icons/heart-rate.svg'\nimport temperature_icon from '../../images/icons/temperature.svg'\nimport weight_icon from '../../images/icons/weight.svg'\n\nimport { getVitalSigns, getOneVitalSigns, createVitalSigns } from '../../services/vitalsigns-services'\n\nconst VitalSignsForm = ({ type, setShowVitalsForm, setVitalsFormValues, setRoute, vitalsFormValues = null }) => {\n\n  // const [ formValues, setFormValues ] = useState({temperature: null, blood_pressure_sys: null, blood_pressure_dias: null, blood_sugar: null, heart_rate: null, weight: null});\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  const saveVitalSigns = (event) => {\n\n    event.preventDefault();\n\n    if ( type === 'consultation' )\n      setShowVitalsForm(false);\n    else {\n\n      createVitalSigns(vitalsFormValues)\n      .then( res => {\n\n        const { vitalsigns } = res.data;\n        console.log(vitalsigns)\n\n        // Send UIkit success notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> '¡Los signos vitales fueron registrados exitosamente!'`,\n          pos: 'bottom-center',\n          status: 'success'\n        });\n\n      })\n      .catch( error => {\n        console.log('error creando signos vitales');\n        console.log(error);\n\n        // Send UIkit error notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> ${error}`,\n          pos: 'bottom-center',\n          status: 'danger'\n        });\n\n      })\n\n    }\n      setRoute(null);\n\n  }\n\n  // const handleSubmit = (event) => {\n\n  //   event.preventDefault();\n  //   console.log(formValues);\n  //   setIsButtonDisabled(true);\n\n  //   createVitalSigns(formValues)\n  //   .then( res => {\n\n  //     const { vitalSigns } = res.data    // Destructure updated preferences document from response\n  //     console.log(vitalSigns)\n\n  //     // Send UIkit success notification\n  //     UIkit.notification({\n  //       message: `<span uk-icon='close'></span> '¡El registro de signos vitales fue creado exitosamente!'`,\n  //       pos: 'bottom-center',\n  //       status: 'success'\n  //     });\n\n  //     if ( type === 'consultation' )\n  //       setShowVitalsForm(false)\n  //     else setRoute('vitalSigns')\n\n  //     // setRoute('consultations');\n  //     setIsButtonDisabled(false);\n\n  //   })\n  //   .catch( error => {\n\n  //     console.log(error);\n\n  //     // Send UIkit error notification\n  //     UIkit.notification({\n  //       message: `<span uk-icon='close'></span> ${error}`,\n  //       pos: 'bottom-center',\n  //       status: 'danger'\n  //     });\n      \n  //     setIsButtonDisabled(false);\n\n  //   });\n\n  // }\n\n  const handleInputChange = (event) => {\n    event.persist();\n\n    if(event.target.type === 'number') event.target.value = parseFloat(event.target.value);\n    setVitalsFormValues( currentValues => ({\n      ...currentValues,\n      [event.target.name]: event.target.value\n    }))\n  }\n\n  return (\n    <form className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <div className=\"uk-width-1-1 uk-width-1-4@s uk-child-width-1-3 uk-grid uk-grid-collapse uk-grid-match\">\n          \n            <VitalSignsCard vitalsign_name=\"Temperatura Corporal\" vitalsign_icon={temperature_icon} handleInputChange={handleInputChange} form_name=\"temperature\" />\n            <VitalSignsCard vitalsign_name=\"Presión Sistólica\" vitalsign_icon={blood_pressure_icon} handleInputChange={handleInputChange} form_name=\"blood_pressure_sys\" />\n            <VitalSignsCard vitalsign_name=\"Glucosa\" vitalsign_icon={blood_sugar_icon} handleInputChange={handleInputChange} form_name=\"blood_sugar\" />\n\n            <VitalSignsCard vitalsign_name=\"Frecuencia Cardiaca\" vitalsign_icon={heart_rate_icon} handleInputChange={handleInputChange} form_name=\"heart_rate\" />\n            <VitalSignsCard vitalsign_name=\"Presión Diastólica\" vitalsign_icon={blood_pressure_icon} handleInputChange={handleInputChange} form_name=\"blood_pressure_dias\" />\n            <VitalSignsCard vitalsign_name=\"Peso\" vitalsign_icon={weight_icon} handleInputChange={handleInputChange} form_name=\"weight\" />\n\n        </div>\n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin\">\n        <button onClick={saveVitalSigns} className=\"uk-button uk-button-primary uk-border-pill\" disabled={isButtonDisabled} >\n          Agregar Signos Vitales\n        </button>\n      </div>     \n    </form>\n  )\n}\n\nexport default VitalSignsForm","import React, { useEffect, useContext, useState } from 'react'\nimport { useHistory, NavLink } from 'react-router-dom';\nimport { AppContext } from '../../AppContext';\nimport UIkit from 'uikit';\nimport moment from 'moment';\n\nimport VitalSignsForm from '../vitalsigns/VitalSignsForm'\nimport ProfileCard from '../profile/ProfileCard'\n\nimport happy_img from '../../images/icons/happy-face.svg'\nimport sad_img from '../../images/icons/sad-face.svg'\nimport sick_img from '../../images/icons/sick-face.svg'\nimport add_vitals_icon from '../../images/icons/add-vitals.svg'\nimport blood_pressure_icon from '../../images/icons/blood-pressure.svg'\nimport blood_sugar_icon from '../../images/icons/blood-sugar.svg'\nimport heart_rate_icon from '../../images/icons/heart-rate.svg'\nimport temperature_icon from '../../images/icons/temperature.svg'\nimport weight_icon from '../../images/icons/weight.svg'\n\nconst Home = () => {\n\n  const { user, setUser, route, setRoute } = useContext(AppContext); // Destructure user state variable\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n\n  const [ vitalsFormValues, setVitalsFormValues ] = useState({temperature: null, blood_pressure_sys: null, blood_pressure_dias: null, blood_sugar: null, heart_rate: null, weight: null});\n\n  // Hook to update component when user state variable is modified\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n  }, [user] );\n  \n  return (\n    <div className=\"content\">\n      <div className=\"uk-section\">\n        <h2 className=\"uk-margin-small-top\">Hola {user.first_name === \"Nombres\" ? \"Usuario\" : user.first_name}</h2>\n        <h4 className=\"uk-margin-remove\">Hoy es {moment(Date.now()).locale('es').format('LL')}</h4>\n\n        <div className=\"uk-container uk-overflow-auto uk-margin\">\n          <div className=\"uk-grid uk-grid-collapse uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\n            <div className=\"card-section-white uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n              Mi Salud\n              <NavLink className=\"uk-width-1-1\" to=\"/resumen\">\n                <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\">\n                  Compartir\n                </button>\n              </NavLink>\n            </div>\n            <div className=\"card-section-white\">\n              Mis Medicamentos\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/studies' : 'http://localhost:3000/api/studies';\n\n// Export get function to retrieve all prescriptions of the current logged in user\nexport const getStudies = (study_type) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${study_type}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable prescription creation\nexport const createStudy = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getStudy = (studyID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${studyID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editStudy = (studyID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${studyID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useState } from 'react';\n\nconst StudyForm = ({ studyType, handleSubmit, handleInput, handleFileInput, form, isButtonDisabled, objectHandler }) => {\n\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <h4>Datos del Estudio de {studyType === 'lab' ? \"Laboratorio\" : \"Rayos X e Imagen\"}</h4>\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de estudio:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"date\" name=\"date\" onChange={handleInput} required={true}/>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"doctor\">Doctor que solicitó:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"doctor\" onChange={handleInput} placeholder=\"Nombre del doctor...\" />\n        </div>\n        \n        <div className=\"uk-margin\">\n          <h4>Estudio</h4>\n          <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre de Estudio:</label>\n          <div className=\"uk-form-controls\">\n            { studyType === 'lab' ?\n                <select name=\"study_name\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue=\"\" required={true}>\n                  <option>Seleccionar</option>\n                  <option>Análisis de Química Sanguínea</option>\n                  <option>Análisis de Hematología</option>\n                  <option>Análisis de Orina</option>\n                  <option>Análisis de Microbiología</option>\n                  <option>Análisis de Hormonas</option>\n                  <option>Análisis de Pruebas Inmunológicas</option>\n                  <option>Análisis de Parasitología</option>\n                  <option>Análisis de Biología Molecular</option>\n                  <option>Otras</option>\n                </select>\n              : \n                <select name=\"study_name\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue=\"\" required={true}>\n                  <option>Seleccionar</option>\n                  <option>Radiografías Simples</option>\n                  <option>Estudio de Fluoroscopía</option>\n                  <option>Ultrasonido</option>\n                  <option>Mamografía</option>\n                  <option>Tomografía Computarizada (TC)</option>\n                  <option>Resonancia Magnética (RM)</option>\n                  <option>Estudios de Medicina Nuclear (MN)</option>\n                  <option>Tomografía por Emisión de Positrones (PET)</option>\n                  <option>Otras</option>\n                </select>\n            }\n          </div>\n          <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre de Laboratorio:</label>\n          <div className=\"uk-form-controls\">\n            <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"facility_name\" onChange={handleInput} placeholder=\"Dónde se realizó los estudios\"  required={true}/>\n          </div>\n          <div className=\"uk-flex uk-flex-middle uk-margin\">\n            <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Subir resultados:</label>\n            <div className=\"js-upload uk\" uk-form-custom=\"true\">\n              <input onChange={handleFileInput} name=\"image\" type=\"file\" multiple />\n              <button className=\"uk-button uk-button-default uk-border-pill uk-margin-left\" type=\"button\" tabIndex=\"-1\">Seleccionar</button>\n            </div>\n          </div>\n        </div>\n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-border-pill uk-width-2-3 uk-width-1-4@m\" disabled={isButtonDisabled} >\n          Crear Estudio\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default StudyForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst StudyInfo = ({ study }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de Estudio: {moment(study.date).locale('es').format('LL')}</p>\n        <p>Doctor: {study.doctor}</p>\n        { study.image ?\n            <div uk-lightbox=\"true\">\n              <a className=\"uk-button uk-button-default\" href={study.image} data-alt=\"Image\">Ver Imagen</a>\n            </div>\n          : null\n        }\n        <div className=\"uk-margin\" key=\"index\">\n          <p>Nombre del Estudio : {study.study_name}</p>\n          <p>Nombre de Laboratorio : {study.facility_name}</p>\n        </div>\n        \n      </div>\n    </div>\n  )\n}\n\nexport default StudyInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\nimport 'moment/locale/es'  // without this line it didn't work\n\nimport { getStudies, createStudy, getStudy, editStudy } from '../../services/study-services';\nimport StudyForm from './StudyForm';\nimport StudyInfo from './StudyInfo';\n\nmoment.locale('es')\n\nconst Study = ({studyType}) => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, resetForm, handleInput, handleFileInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ study, setStudy] = useState({});\n  const [ studies, setStudies ] = useState([]);\n  const [ showForm, setShowForm ] = useState(false);\n  const [ showConsultation, setShowConsultation ] = useState(false);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    if ( route !== 'create' && route !== 'read' ) {\n      getStudies(studyType)\n      .then( res => {\n      \n        const { studies } = res.data;\n        setStudies(studies);\n        setRoute('studies');\n\n      });\n    }\n\n    \n    \n  }, [route]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true)\n\n    form['study_type'] = studyType;\n    // if ( objectHandler ) form['consultation'] = objectHandler.id;\n\n    const formData = new FormData();      // Declare formData as new instance of FormData class\n    const { image } = form;     // Destructure profile_picture from form\n\n    // Iterate through every key in form object and append name:value to formData\n    for (let key in form) {\n\n      // If profile_picture, append as first item in array (currently 1 file allowed, index 0)\n      if ( key === 'image' ) formData.append(key, image[0]);\n\n      else formData.append(key, form[key]);\n      \n    }\n    \n    // Call edit service with formData as parameter, which includes form data for user profile information\n    createStudy(formData)\n    .then( res => {\n\n      const { study } = res.data   // Destructure updated user document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡Tu estudio fue creado exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('studies');\n      setIsButtonDisabled(false);\n      setObjectHandler();\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n      setIsButtonDisabled(false)\n\n    });\n\n    resetForm();\n    \n  };\n\n  const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadStudy = (study) => {\n    setStudy(study);\n    setRoute('read');\n  }\n\n  const backButton = () => {\n    setRoute('studies');\n    resetForm();\n    console.log('back')\n    console.log(form)\n  }\n\n  return (\n\n    <div className=\"content\">\n      \n        { route === 'studies' ? (\n          <div className=\"uk-section\">\n            <h2>{studyType === 'lab' ? \"Laboratorio\" : \"Rayos X e Imagen\"}</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nuevo Estudio\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { studies.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado estudios</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center uk-visible\">Estudio</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { studies ? \n                      studies.map( (study, index) => \n                        <tr key={index}>\n                          <td className=\"uk-text-center\">{moment(study.date).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center uk-visible\">{study.study_name}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadStudy({study})} >\n                              Ver\n                            </button>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nuevo Estudio</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={backButton} >\n                    Regresar\n                  </button>\n                  <StudyForm studyType={studyType} handleSubmit={handleSubmit} handleInput={handleInput} handleFileInput={handleFileInput} form={form} isButtonDisabled={isButtonDisabled} objectHandler={objectHandler}/>\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Estudio</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={backButton} >\n                    Regresar\n                  </button>\n                  <StudyInfo {...study} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={backButton} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n    \n  )\n}\n\nexport default Study","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/consultations' : 'http://localhost:3000/api/consultations';\n\n// Export get function to retrieve all consultations of the current logged in user\nexport const getConsultations = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable consultation creation\nexport const createConsultation = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getConsultation = (consultationID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${consultationID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editConsultation = (consultationID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${consultationID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/emergencies' : 'http://localhost:3000/api/emergencies';\n\n// Export get function to retrieve all emergencies of the current logged in user\nexport const getEmergencies = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable emergency creation\nexport const createEmergency = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getEmergency = (emergencyID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${emergencyID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editEmergency = (emergencyID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${emergencyID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/hospitalizations' : 'http://localhost:3000/api/hospitalizations';\n\n// Export get function to retrieve all hospitalizations of the current logged in user\nexport const getHospitalizations = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable hospitalization creation\nexport const createHospitalization = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getHospitalization = (hospitalizationID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${hospitalizationID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editHospitalization = (hospitalizationID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${hospitalizationID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\nimport 'moment/locale/es'  // without this line it didn't work\nimport { getConsultations } from '../../services/consultation-services';\nimport { getEmergencies } from '../../services/emergency-services';\nimport { getHospitalizations } from '../../services/hospitalization-services';\n\nmoment.locale('es')\n\nconst Disease = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ disease, setDisease] = useState({});\n  const [ diseases, setDiseases ] = useState([]);\n  const [ consultations, setConsultations ] = useState([]);\n  const [ emergencies, setEmergencies ] = useState([]);\n  const [ hospitalizations, setHospitalizations ] = useState([]);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  let diseasesHandler = []\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getConsultations()\n    .then( res => {\n      \n      const { consultations } = res.data;\n      setConsultations(consultations);\n\n      for ( let i = 0 ; i < consultations.length ; i++ ) {\n        diseasesHandler.push(consultations[i].diagnosis)\n      }\n\n    })\n\n    getEmergencies()\n    .then( res => {\n      \n      const { emergencies } = res.data;\n      setEmergencies(emergencies);\n\n      for ( let i = 0 ; i < emergencies.length ; i++ ) {\n        diseasesHandler.push(emergencies[i].diagnosis)\n      }\n\n    })\n\n    getHospitalizations()\n    .then( res => {\n      \n      const { hospitalizations } = res.data;\n      setHospitalizations(hospitalizations);\n\n      for ( let i = 0 ; i < hospitalizations.length ; i++ ) {\n        diseasesHandler.push(hospitalizations[i].diagnosis)\n      }\n\n      setDiseases(diseasesHandler);\n      setRoute('diseases')\n\n    })\n\n    console.log(diseasesHandler)\n    console.log(diseases)\n    \n  }, [route]);\n\n  // const handleSubmit = (event) => {\n\n  //   event.preventDefault();\n  //   console.log(form);\n  //   setIsButtonDisabled(true);\n\n  //   createConsultation(form)\n  //   .then( res => {\n\n  //     const { consultation } = res.data    // Destructure updated preferences document from response\n  //     console.log(consultation)\n\n  //     // Send UIkit success notification\n  //     UIkit.notification({\n  //       message: `<span uk-icon='close'></span> '¡La consulta fue creada exitosamente!'`,\n  //       pos: 'bottom-center',\n  //       status: 'success'\n  //     });\n\n  //     setRoute('consultations');\n  //     setIsButtonDisabled(false);\n\n  //   })\n  //   .catch( error => {\n\n  //     console.log(error);\n\n  //     // Send UIkit error notification\n  //     UIkit.notification({\n  //       message: `<span uk-icon='close'></span> ${error}`,\n  //       pos: 'bottom-center',\n  //       status: 'danger'\n  //     });\n      \n  //     setIsButtonDisabled(false);\n\n  //   });\n\n  // }\n\n  // const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadDisease = (disease) => {\n    setDisease(disease);\n    setRoute('read');\n  }\n\n  // const goToPrescription = (event, consultation, newRoute) => {\n  //   event.preventDefault();\n  //   setConsultation(consultation);\n  //   setObjectHandler(consultation);\n  //   setRoute(newRoute);\n  //   console.log(objectHandler)\n  // }\n\n  // const goToStudies = (event, consultation, newRoute) => {\n  //   event.preventDefault();\n  //   setObjectHandler(consultation);\n  //   setRoute(newRoute);\n  //   console.log(objectHandler);\n  // }\n\n  return (\n\n    <div className=\"content\">\n      { route === 'diseases' ? (\n          <div className=\"uk-section\">\n            <h2>Mis Padecimientos</h2>\n            {/* <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nuevo Padecimiento\n            </button> */}\n            <div className=\"uk-overflow-auto\">\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Diagnóstico</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { diseases ? \n                      diseases.map( (disease, index) => \n                        <tr key={index} >\n                          <td className=\"uk-text-center\">{disease ? disease : 'No definida'}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" uk-toggle={`target: #modal-sections-${index}`} >\n                              Ver\n                            </button>\n                            <div id={`modal-sections-${index}`} className=\"uk-flex-top\" uk-modal=\"true\">\n                              <div className=\"uk-modal-dialog uk-margin-auto-vertical\">\n                                <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\" />\n                                <div className=\"uk-modal-header\">\n                                  <h3 className=\"uk-text-center\">Datos del Padecimiento</h3>\n                                  <p>Nombre: {disease}</p>\n                                  <p>Fecha de primer diagnóstico: No disponible</p>\n                                  <p>Doctor o Clínica que realizó diagnóstico: No disponible</p>\n                                  <p>Aquí se presentará un resumen del padecimiento, así como una liga para mayor información</p>\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                          <td></td>\n                          {/* <td>\n                            <a href={`#modal-sections-${index}`} uk-toggle={`target: #modal-sections-${index}`}>\n                              <span className=\"uk-margin-small-right\" uk-icon=\"more-vertical\"></span>\n                            </a>\n                            \n                          </td> */}\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : ( null\n            // route === 'create' ? (\n            //   <div className=\"uk-section\">\n            //     <div className=\"uk-container\">\n            //       <h2>Nueva Consulta</h2>\n            //       <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n            //         Regresar\n            //       </button>\n            //       <ConsultationFormSpecial handleSubmit={handleSubmit} handleInput={handleInput} form={form} isButtonDisabled={isButtonDisabled} setVitalsFormValues={setVitalsFormValues}/>\n            //     </div>\n            //   </div>\n            // ) : (\n            //   route === 'read' ? (\n            //     <div className=\"uk-section\">\n            //       <h2>Ver Consulta</h2>\n            //       <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n            //         Regresar\n            //       </button>\n            //       <ConsultationInfo {...consultation} />\n            //     </div>\n            //   ) : (\n            //     <div className=\"uk-section\">\n            //       <h2>Cargando...</h2>\n            //       <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n            //         Regresar\n            //       </button>\n            //     </div> \n            //   )\n            // )\n          )\n        }\n    </div>\n    \n  )\n}\n\nexport default Disease","import React, { useEffect, useState } from 'react'\nimport cie10 from '../../catalogs/cie10.json'\nimport procedures from '../../catalogs/procedimientos.json'\nimport drugs from '../../catalogs/drugs.json'\nimport specialties from '../../catalogs/medspecs.json'\n\nconst CatalogSearchbar = ({type, form, handleFormInput}) => {\n\n  const [ searchResults, setSearchResults ] = useState('');\n  const [ searchValue, setSearchValue ] = useState('');\n  const [ showDrop, setShowDrop ] = useState(false);\n\n  const handleInput = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  let results = [];\n\n  useEffect( () => {\n\n    switch (type) {\n      case \"diagnosis\": results = cie10.filter( disease =>\n        disease.NOMBRE.toLowerCase().includes(searchValue)\n        );\n        break;\n\n      case \"procedure\": results = procedures.filter( disease =>\n        disease.PRO_NOMBRE.toLowerCase().includes(searchValue)\n        );\n        break;\n\n      case \"drugs\": results = drugs.filter( disease =>\n        disease.generic_name.toLowerCase().includes(searchValue)\n        );\n        break;\n\n      case \"doctor_specialty\": results = specialties.filter( disease =>\n        disease.ESPECIALIDAD.toLowerCase().includes(searchValue)\n        );\n        break;\n    }\n\n    setSearchResults(results);\n\n    if ( results.length <= 15 ) {\n      setShowDrop(true);\n    }\n\n  }, [searchValue]);\n\n\n  return (\n      <div className=\"uk-margin uk-width-1-1\">\n        <div className=\"uk-search uk-search-default uk-width-1-1\">\n          <span className=\"uk-search-icon-flip\" uk-search-icon=\"true\"></span>\n          <input\n            className=\"uk-search-input uk-text-center uk-border-pill\"\n            type=\"search\"\n            placeholder={ type === 'diagnosis' ? \"Busca padecimiento...\" : type === 'drugs' ? \"Busca por nombre genérico...\" : type === 'procedure' ? \"Busca procedimiento...\" : \"Busca especialidad\"}\n            value={searchValue}\n            onChange={handleInput}\n          />\n        </div>\n        { showDrop ? (\n            <select className=\"uk-select uk-border-pill\" name={type} onChange={handleFormInput}>\n              <option>Selecciona por favor</option>\n              {searchResults.map( (disease, index) => <option key={index} value={ type === \"diagnosis\" ? disease.NOMBRE : type === \"drugs\" ? disease.generic_name : disease.PRO_NOMBRE} >{ type === \"diagnosis\" ? disease.NOMBRE : type === \"drugs\" ? disease.generic_name : type === \"procedure\" ? disease.PRO_NOMBRE : disease.ESPECIALIDAD}</option> )}\n            </select>\n          ) : null \n        }\n      </div>\n  )\n}\n\nexport default CatalogSearchbar","import React, { useState } from 'react';\nimport CatalogSearchbar from '../common/CatalogSearchbar'\nimport VitalSignsForm from '../vitalsigns/VitalSignsForm'\n\nconst ConsultationForm = ({ handleSubmit, handleInput, form, isButtonDisabled, setVitalsFormValues }) => {\n\n  const [ showVitalsForm, setShowVitalsForm ] = useState(false);\n\n  const toggleVitalsForm = (event) => {\n    event.preventDefault();\n    setShowVitalsForm(!showVitalsForm)\n  }\n\n  return (\n    <div>\n      {\n        !showVitalsForm ? (\n            <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n              <div className=\"uk-margin\">\n                <label className=\"uk-form-label\" htmlFor=\"date\">Fecha y hora de consulta:</label>\n                <div className=\"uk-form-controls uk-flex uk-flex-wrap uk-flex-between uk-width-1-1\">\n                  <div className=\"uk-width-1-1 uk-width-1-2@s\">\n                    <input className=\"uk-input uk-border-pill\" type=\"date\" name=\"only-date\" onChange={handleInput} required={true} />\n                  </div>\n                  <div className=\"uk-width-1-1 uk-width-1-3@s uk-flex uk-flex-around\">\n                    <select name=\"time-hours\" onChange={handleInput} className=\"uk-select uk-border-pill uk-width-1-3\" defaultValue=\"Hora\">\n                      <option disabled={true}>Hora</option>\n                      <option>1</option>\n                      <option>2</option>\n                      <option>3</option>\n                      <option>4</option>\n                      <option>5</option>\n                      <option>6</option>\n                      <option>7</option>\n                      <option>8</option>\n                      <option>9</option>\n                      <option>10</option>\n                      <option>11</option>\n                      <option>12</option>\n                    </select>\n                    <select name=\"time-minutes\" onChange={handleInput} className=\"uk-select uk-border-pill uk-width-1-3\" defaultValue=\"Minutos\">\n                      <option disabled={true}>Minutos</option>\n                      <option>00</option>\n                      <option>15</option>\n                      <option>30</option>\n                      <option>45</option>\n                    </select>\n                    <select name=\"time-period\" onChange={handleInput} className=\"uk-select uk-border-pill uk-width-1-4\" defaultValue=\"AM/PM\">\n                      <option disabled={true}>AM/PM</option>\n                      <option>AM</option>\n                      <option>PM</option>\n                    </select>\n                  </div>\n                </div>\n                <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Motivo de consulta:</label>\n                <div className=\"uk-form-controls\">\n                  <textarea className=\"uk-textarea uk-border-pill\" rows=\"2\" name=\"chief_complaint\" onChange={handleInput} placeholder=\"Dolor, fiebre, etc...\" required={true}></textarea>\n                </div>\n                <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Diagnóstico:</label>\n                <div className=\"uk-form-controls\">\n                  <CatalogSearchbar type=\"diagnosis\" form={form} handleFormInput={handleInput}/>\n                </div>\n                <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Médico tratante:</label>\n                <div className=\"uk-form-controls\">\n                  <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"doctor\" onChange={handleInput} placeholder=\"Nombre del doctor...\"  required={true}/>\n                </div>\n                <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Especialidad del Médico:</label>\n                <div className=\"uk-form-controls\">\n                  <CatalogSearchbar type=\"doctor_specialty\" form={form} handleFormInput={handleInput}/>\n                </div>\n                <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Lugar de consulta:</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"medical_facility\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue=\"\">\n                    <option></option>\n                    <option>Consultorio privado independiente</option>\n                    <option>Consultorio en hospital privado</option>\n                    <option>Consultorio en clínica privada</option>\n                    <option>Consultorio de farmacia</option>\n                    <option>Consultorio en clínica/hospital IMSS</option>\n                    <option>Consultorio en clínica/hospital ISSSTE</option>\n                    <option>Consultorio en clínica/hospital SSA</option>\n                    <option>Otro</option>\n                  </select>\n                </div>\n              </div>\n              {/* <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin\">\n                {\n                  showVitalsForm ? (\n                    <button type=\"submit\" className=\"uk-button uk-button-secondary uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={toggleVitalsForm} >\n                      - Signos Vitales\n                    </button>\n                  ) : (\n                    <button type=\"submit\" className=\"uk-button uk-button-secondary uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={toggleVitalsForm}  >\n                      + Signos Vitales\n                    </button>\n                  )\n                }\n              </div> */}\n              <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin\">\n                <button type=\"submit\" className=\"uk-button uk-button-primary uk-button uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" disabled={isButtonDisabled} >\n                  Crear consulta\n                </button>\n              </div>\n            </form>\n        ) : (\n          <div className=\"uk-section\">\n            <h2>Registro de Signos Vitales</h2>\n            <button className=\"uk-button uk-button-secondary uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={toggleVitalsForm} >\n              Regresar a Consulta\n            </button>\n            <VitalSignsForm type=\"consultation\" setShowVitalsForm={setShowVitalsForm} setVitalsFormValues={setVitalsFormValues}/>\n          </div>\n        )\n      }\n    \n    </div>\n    \n  )\n}\n\nexport default ConsultationForm","import React, { useEffect, useState } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport moment from 'moment';                                        // Import momentjs for date formatting\nimport { getOneVitalSignsConsultation } from '../../services/vitalsigns-services'\n\nimport 'moment/locale/es'  // without this line it didn't work\nmoment.locale('es')\n\nconst ConsultationInfo = ({ consultation, goToPrescription }) => {\n\n  const [ vitals, setVitals ] = useState({});\n\n  // useEffect( () => {\n\n  //   getOneVitalSignsConsultation(consultation._id)\n  //   .then( res => {\n\n  //     const { vitalsigns } = res.data;\n  //     setVitals(vitalsigns)\n      \n  //   })\n\n  // }, [])\n\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <h4>Motivo de Consulta</h4>\n        <p>Síntomas indicados por paciente: {consultation.chief_complaint}</p>\n        <p>Fecha de consulta: {moment(consultation.date).locale('es').format('LL')}</p>\n        <p>Hora de consulta:  {moment(consultation.date).format('h')}:{moment(consultation.date).format('mm')}  {moment(consultation.date).format('A')}</p>\n        <hr className=\"uk-divider-icon\"></hr>\n        <h4>Diagnóstico</h4>\n        <p>Diagnóstico: {consultation.diagnosis}</p>\n        <p>Doctor: {consultation.doctor}</p>\n        <hr className=\"uk-divider-icon\"></hr>\n        <h4>Tratamiento</h4>\n        { consultation.prescription ? (\n            <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToPrescription(event, consultation, 'read')} >\n              <NavLink to=\"/recetas\">Ver Receta</NavLink>\n            </button>\n          ) : (\n            <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToPrescription(event, consultation, 'create')} >\n              <NavLink to=\"/recetas\">Agregar Receta</NavLink>\n            </button>\n          )\n        }\n        {/* <p>Temperatura: {vitals.temperature ? vitals.temperature : 'No registrada'}</p>\n        <p>Presión Arterial: {vitals.blood_pressure_sys ? `${vitals.blood_pressure_sys} / ${vitals.blood_pressure_dias}` : 'No registrada'}</p>\n        <p>Frecuencia Cardiaca: {vitals.heart_rate ? vitals.heart_rate : 'No registrada'}</p>\n        <p>Nivel de Glucosa: {vitals.glucose ? vitals.glucose : 'No registrada'}</p>\n        <p>Peso: {vitals.weight ? vitals.weight : 'No registrado'}</p> */}\n      </div>\n    </div>\n  )\n}\n\nexport default ConsultationInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\nimport 'moment/locale/es'  // without this line it didn't work\n\nimport { getConsultations, createConsultation } from '../../services/consultation-services';\nimport { createVitalSigns } from '../../services/vitalsigns-services'\nimport ConsultationForm from './ConsultationForm';\nimport ConsultationFormSpecial from './ConsultationFormSpecial'\nimport ConsultationInfo from './ConsultationInfo';\n\nmoment.locale('es')\n\nconst Consultation = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [consultation, setConsultation] = useState({});\n  const [ consultations, setConsultations ] = useState([]);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  const [ vitalsFormValues, setVitalsFormValues ] = useState({temperature: null, blood_pressure_sys: null, blood_pressure_dias: null, blood_sugar: null, heart_rate: null, weight: null});\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getConsultations()\n    .then( res => {\n      \n      const { consultations } = res.data;\n      setConsultations(consultations);\n      setRoute('consultations');\n\n    })\n    \n  }, [isButtonDisabled]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();\n    setIsButtonDisabled(true);\n\n    let datetime;\n\n    if ( form.timeperiod === 'AM' ) {\n      if ( form['time-hours'] === '12' )\n        datetime = form['only-date']+'T00'+':'+form['time-minutes']+':00';\n      else\n        datetime = form['only-date']+'T'+form['time-hours']+':'+form['time-minutes']+':00';\n    }\n    else {\n      if ( form['time-hours'] === '12' )\n        datetime = form['only-date']+'T12'+':'+form['time-minutes']+':00';\n      else {\n        switch (form['time-hours']) {\n          case '1': datetime = form['only-date']+'T13'+':'+form['time-minutes']+':00'; break;\n          case '2': datetime = form['only-date']+'T14'+':'+form['time-minutes']+':00'; break;\n          case '3': datetime = form['only-date']+'T15'+':'+form['time-minutes']+':00'; break;\n          case '4': datetime = form['only-date']+'T16'+':'+form['time-minutes']+':00'; break;\n          case '5': datetime = form['only-date']+'T17'+':'+form['time-minutes']+':00'; break;\n          case '6': datetime = form['only-date']+'T18'+':'+form['time-minutes']+':00'; break;\n          case '7': datetime = form['only-date']+'T19'+':'+form['time-minutes']+':00'; break;\n          case '8': datetime = form['only-date']+'T20'+':'+form['time-minutes']+':00'; break;\n          case '9': datetime = form['only-date']+'T21'+':'+form['time-minutes']+':00'; break;\n          case '10': datetime = form['only-date']+'T22'+':'+form['time-minutes']+':00'; break;\n          case '11': datetime = form['only-date']+'T23'+':'+form['time-minutes']+':00'; break;\n          default: datetime = form['only-date']+'T12'+':'+form['time-minutes']+':00';\n        }\n      }\n    }\n\n    form['date'] = datetime;\n\n    createConsultation(form)\n    .then( res => {\n\n      const { consultation } = res.data    // Destructure updated preferences document from response\n\n      vitalsFormValues['consultation'] = consultation._id\n\n      // setVitalsFormValues( currentValues => ({\n      //   ...currentValues,\n      //   [date]: event.target.value\n      // }))\n\n      // createVitalSigns(vitalsFormValues)\n      // .then( res => {\n\n      //   const { vitalsigns } = res.data;\n\n      // })\n      // .catch( error => {\n      //   console.log('error creando signos vitales');\n      //   console.log(error);\n      // })\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡La consulta fue creada exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('consultations');\n      setIsButtonDisabled(false);\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n      \n      setIsButtonDisabled(false);\n\n    });\n\n  }\n\n  const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadConsultation = (consultation) => {\n    setConsultation(consultation);\n    setRoute('read');\n  }\n\n  const goToPrescription = (event, consultation, newRoute) => {\n    event.preventDefault();\n    setConsultation(consultation);\n    setObjectHandler(consultation);\n    setRoute(newRoute);\n    console.log(objectHandler)\n  }\n\n  const goToStudies = (event, consultation, newRoute) => {\n    event.preventDefault();\n    setObjectHandler(consultation);\n    setRoute(newRoute);\n    console.log(objectHandler);\n  }\n\n  return (\n\n    <div className=\"content\">\n      \n        { route === 'consultations' ? (\n          <div className=\"uk-section\">\n            <h2>Consultas</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nueva Consulta\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { consultations.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado consultas</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center\">Hora</th>\n                    <th className=\"uk-text-center uk-visible@s\">Motivo de consulta</th>\n                    <th className=\"uk-text-center uk-visible@s\">Diagnostico</th>\n                    <th className=\"uk-text-center uk-visible@s\">Doctor</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { consultations ? \n                      consultations.map( (consultation, index) => \n                        <tr key={index} >\n                          <td className=\"uk-text-center\">{moment(consultation.date).locale('es').format('l')}</td>\n                          <td className=\"uk-text-center\">{moment(consultation.date).locale('es').format('LT')}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{consultation.chief_complaint}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{consultation.diagnosis}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{`Dr. ${consultation.doctor}`}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadConsultation({consultation})} >\n                              Ver\n                            </button>\n                          </td>\n                          <td>\n                            <a href={`#modal-sections-${index}`} uk-toggle={`target: #modal-sections-${index}`}>\n                              <span className=\"uk-margin-small-right\" uk-icon=\"more-vertical\"></span>\n                            </a>\n                            <div id={`modal-sections-${index}`} className=\"uk-flex-top\" uk-modal=\"true\">\n                              <div className=\"uk-modal-dialog uk-margin-auto-vertical\">\n                                <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\" />\n                                <div className=\"uk-modal-header\">\n                                  <h3 className=\"uk-text-center\">Datos de la Consulta</h3>\n                                  <p>Fecha: {moment(consultation.date).locale('es').format('LL')}</p>\n                                  <p>Doctor: {consultation.doctor}</p>\n                                </div>\n                                <div className=\"uk-modal-body uk-flex uk-flex-column\">\n                                  { consultation.prescription ? (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToPrescription(event, consultation, 'read')} >\n                                        <NavLink to=\"/recetas\">Ver Receta</NavLink>\n                                      </button>\n                                    ) : (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToPrescription(event, consultation, 'create')} >\n                                        <NavLink to=\"/recetas\">Agregar Receta</NavLink>\n                                      </button>\n                                    )\n                                  }\n                                  { consultation.studies ? (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToStudies(event, consultation, 'read')} >\n                                        <NavLink to=\"/estudios\">Ver Estudios</NavLink>\n                                      </button>\n                                    ) : (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToStudies(event, consultation, 'create')} >\n                                        <NavLink to=\"/estudios\">Agregar Estudios</NavLink>\n                                      </button>\n                                    )\n                                  }\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td className=\"uk-text-center\">Cargando</td>\n                        <td className=\"uk-text-center uk-visible@s\">Cargando</td>\n                        <td className=\"uk-text-center uk-visible@s\">Cargando</td>\n                        <td className=\"uk-text-center uk-visible@s\">Cargando</td>\n                        <td className=\"uk-text-center\">Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nueva Consulta</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n                    Regresar\n                  </button>\n                  <ConsultationFormSpecial handleSubmit={handleSubmit} handleInput={handleInput} form={form} isButtonDisabled={isButtonDisabled} setVitalsFormValues={setVitalsFormValues}/>\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Consulta</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n                    Regresar\n                  </button>\n                  <ConsultationInfo {...consultation} goToPrescription={goToPrescription} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n    \n  )\n}\n\nexport default Consultation","import { useState } from 'react';   // Import useState hook to create custom hook\n\n// Declare hook as a React functional component\nconst useDrugsForm = (drugsArray) => {\n  \n  // Declare form state variable and setForm function to update the form state variable\n  const [ form, setForm ] = useState({});\n  const [ array, setArray ] = useState([]);\n  const [ genericName, setGenericName ] = useState();\n  const [ brandName, setBrandName ] = useState();\n  const [ dosageForm, setDosageForm ] = useState();\n  const [ dose, setDose ] = useState();\n  const [ indications, setIndications ] = useState();\n\n  // Declare handleInput function for input data manipulation\n  const handleInput = (event) => {\n    \n    // Destructure input name and value (data that is being changed by user)\n    const { name, value } = event.target;\n\n    // When using checkboxes, store the values in an array\n    if ( event.target.type === 'checkbox' ) {\n      \n      array.push(value);\n      setArray(array);\n      setForm( prevState => ({...prevState, [name]: array}) );\n\n    } else {\n\n      // Update the form state without erasing previos values (with prevState)\n      setForm( prevState => ({...prevState, [name]: value}) );\n\n    }\n\n  };\n\n  // Declare handleInputFile function for files manipulation\n  const handleFileInput = (event) => {\n\n    // Destructure input name and files (data that is being changed by user)\n    const { name, files } = event.target;\n\n    // Update the form state without erasing previos values (with prevState)\n    setForm( prevState => ({...prevState, [name]: files}) );\n\n  };\n\n  // Return the form state variable and input handling functions\n  return { form, setForm, handleInput, handleFileInput };\n\n};\n\nexport default useDrugsForm;","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/drugs' : 'http://localhost:3000/api/drugs';\n\n// Export get function to retrieve all prescriptions of the current logged in user\nexport const getDrugs = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable prescription creation\nexport const createDrug = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getDrug = (drugID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${drugID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editDrug = (drugID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${drugID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst PrescriptionForm = ({ handleSubmit, handleInput, handleFileInput, form, isButtonDisabled, objectHandler, drugs }) => {\n\n  const [ drugFields, setDrugFields ] = useState([]);\n  const [ drugQuantity, setDrugQuantity] = useState(0);\n  let drug = {'generic_name': null, 'brand_name': null, 'dosage_form': null, 'dose': null, 'directions': null};\n\n  useEffect( () => {\n\n    console.log(objectHandler)\n    // console.log(moment(objectHandler.date).format('YYYY-MM-DD') )\n\n  }, [drugQuantity])\n\n  const handleDrugInput = (event, index) => {\n\n    switch (event.target.name) {\n      case 'name':\n        drugs[index].name = event.target.value;\n        // setForm( prevState => ({...prevState, ['drugs']: {[name]:value}}) );\n        break;\n      // case 'generic_name':\n      //   drugs[index].generic_name = event.target.value;\n      //   // setForm( prevState => ({...prevState, ['drugs']: {[name]:value}}) );\n      //   break;\n      // case 'brand_name':\n      //   drugs[index].brand_name = event.target.value;\n      //   // setForm( prevState => ({...prevState, [name]: value}) );\n      //   break;\n      case 'dosage_form':\n        drugs[index].dosage_form = event.target.value;\n        // setForm( prevState => ({...prevState, [name]: value}) );\n        break;\n      case 'dose':\n        drugs[index].dose = event.target.value;\n        // setForm( prevState => ({...prevState, [name]: value}) );\n        break;\n      case 'schedule':\n        drugs[index].schedule = event.target.value;\n        // setForm( prevState => ({...prevState, [name]: value}) );\n        break;\n      case 'periodicity':\n        drugs[index].periodicity = event.target.value;\n        // setForm( prevState => ({...prevState, [name]: value}) );\n        break;\n      case 'directions':\n        drugs[index].directions = event.target.value;\n        // setForm( prevState => ({...prevState, [name]: value}) );\n        break;\n    }\n\n  }\n  \n  const addDrugField = (event) => {\n\n    event.preventDefault();\n    drugFields.push(1)\n    drugs.push(drug);\n\n    setDrugFields(drugFields);\n    setDrugQuantity(drugQuantity+1)\n\n    return null;\n\n  }\n\n  const deleteDrugField = (event) => {\n\n    event.preventDefault();\n    drugFields.pop()\n    drugs.pop();\n\n    setDrugFields(drugFields);\n    setDrugQuantity(drugQuantity-1)\n\n    return null;\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <h4>Datos de la Receta</h4>\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de receta:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"date\" name=\"date\" onChange={handleInput} defaultValue={objectHandler ? moment(objectHandler.date).format('YYYY-MM-DD') : null} required={true}/>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"doctor\">Doctor que atendió:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"doctor\" onChange={handleInput} placeholder=\"Nombre del doctor...\" defaultValue={objectHandler ? objectHandler.doctor : null} required={true}/>\n        </div>\n        <div className=\"uk-flex uk-flex-middle uk-flex-around uk-margin\">\n          <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Imagen de la receta:</label>\n          <div className=\"js-upload uk\" uk-form-custom=\"true\">\n            <input onChange={handleFileInput} name=\"image\" type=\"file\" multiple />\n            <button className=\"uk-button uk-button-default uk-border-pill\" type=\"button\" tabIndex=\"-1\">Seleccionar</button>\n          </div>\n        </div>\n        \n        <div id=\"drugs\" className=\"uk-margin\">\n          { drugFields.map( (drugField, index) => \n            <div className=\"uk-margin\" key={index}>\n              <h4>Medicamento {index+1} <span className=\"uk-margin-left\" uk-icon=\"minus-circle\" onClick={event => deleteDrugField(event)}></span></h4>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"name\" onChange={event => handleDrugInput(event, index)} placeholder=\"Nombre del medicamento\" />\n              </div>\n              {/* <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre Genérico:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"generic_name\" onChange={event => handleDrugInput(event, index)} placeholder=\"Nombre genérico del medicamento\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre Comercial:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"brand_name\" onChange={event => handleDrugInput(event, index)} placeholder=\"Nombre comercial del medicamento\" />\n              </div> */}\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Presentación:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"dosage_form\" onChange={event => handleDrugInput(event, index)} placeholder=\"Tabletas, jarabe, etc...\" />\n              </div>\n              \n              <h5 className=\"uk-margin-small\">Indicaciones</h5>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Dosis:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"dose\" onChange={event => handleDrugInput(event, index)} placeholder=\"500 mg, 10 ml, etc...\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Horario:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"schedule\" onChange={event => handleDrugInput(event, index)} placeholder=\"cada 8 horas, cada 12 horas...\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Número de días:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"periodicity\" onChange={event => handleDrugInput(event, index)} placeholder=\"3 días, 7 días...\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Indicaciones:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"directions\" onChange={event => handleDrugInput(event, index)} placeholder=\"En ayunas, etc...\" />\n              </div>\n            </div> ) }\n        </div>\n        <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin\">\n          <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => addDrugField(event)} >\n            + Medicamento\n          </button>\n        </div>\n        \n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-border-pill uk-width-2-3 uk-width-1-4@m\" disabled={isButtonDisabled} >\n          Crear receta\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default PrescriptionForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst PrescriptionInfo = ({ prescription }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de receta: {moment(prescription.date).locale('es').format('LL')}</p>\n        <p>Doctor: {prescription.doctor}</p>\n        { prescription.image === 'Sin imagen registrada' ? null :\n            <div uk-lightbox=\"true\">\n              <a className=\"uk-button uk-button-default\" href={prescription.image} data-alt=\"Image\">Ver Imagen</a>\n            </div>\n        }\n        \n        { prescription.drugs.map( (drug, index) =>\n            <div className=\"uk-margin\" key={index}>\n              <h4>Medicamento {index+1}</h4>\n              <p>Nombre: {prescription.drugs[index].name}</p>\n              <p>Presentación: {prescription.drugs[index].dosage_form}</p>\n              <p>Dosis: {prescription.drugs[index].dose}</p>\n              <p>Horario: {prescription.drugs[index].schedule}</p>\n              <p>Número de días: {prescription.drugs[index].periodicity}</p>\n              <p>Indicaciones : {prescription.drugs[index].directions}</p>\n            </div>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default PrescriptionInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useDrugsForm from '../../hooks/useDrugsForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport { getPrescriptions, createPrescription, getPrescription, editPrescription } from '../../services/prescription-services';\nimport { createDrug } from '../../services/drug-services';\n\nimport PrescriptionForm from './PrescriptionForm';\nimport PrescriptionInfo from './PrescriptionInfo';\n\nconst Prescription = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput, handleFileInput } = useDrugsForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ prescription, setPrescription] = useState({});\n  const [ prescriptions, setPrescriptions ] = useState([]);\n  const [ showForm, setShowForm ] = useState(false);\n  const [ showConsultation, setShowConsultation ] = useState(false);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  let drugs = [/*{'generic_name': null, brand_name: null, dosage_form: null, dose: null, indications: null}]*/];\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    if ( route !== 'create' && route !== 'read' ) {\n\n      getPrescriptions()\n      .then( res => {\n      \n        const { prescriptions } = res.data;\n        setPrescriptions(prescriptions);\n        setRoute('prescriptions');\n\n      });\n    }\n\n    \n    \n  }, [route]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true)\n\n    const formData = new FormData();      // Declare formData as new instance of FormData class\n    const { image } = form;     // Destructure profile_picture from form\n\n    console.log(drugs)\n    form.drugsJSON = JSON.stringify(drugs);\n    console.log(form)\n\n    // LearningCenterObject.observations = myArray;\n    // form.drugs = drugsArray\n    // console.log\n\n    // Iterate through every key in form object and append name:value to formData\n    for (let key in form) {\n\n      // If profile_picture, append as first item in array (currently 1 file allowed, index 0)\n      if ( key === 'image' ) formData.append(key, image[0]);\n\n      else formData.append(key, form[key]);\n      \n    }\n    \n    // Call edit service with formData as parameter, which includes form data for user profile information\n    createPrescription(formData)\n    .then( res => {\n\n      const { prescription } = res.data   // Destructure updated user document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡Tu receta fue creada exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('prescriptions');\n      setIsButtonDisabled(false);\n      setObjectHandler({});\n\n      // Save drug information\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n      setIsButtonDisabled(false)\n\n    });\n    \n  };\n\n  const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadPrescription = (prescription) => {\n    setPrescription(prescription);\n    setRoute('read');\n  }\n\n  const deleteConsultationObject = () => {\n    setObjectHandler(null);\n    setRoute('prescriptions');\n    // console.log('borrando')\n  }\n\n  return (\n\n    <div className=\"content\">\n      \n        { route === 'prescriptions' ? (\n          <div className=\"uk-section\">\n            <h2>Recetas</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nueva Receta\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { prescriptions.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado recetas</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center uk-visible\">Doctor</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { prescriptions ? \n                      prescriptions.map( (prescription, index) => \n                        <tr key={index}>\n                          <td className=\"uk-text-center\">{moment(prescription.date).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center uk-visible\">{`Dr. ${prescription.doctor}`}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadPrescription({prescription})} >\n                              Ver\n                            </button>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nueva Receta</h2>\n                  { objectHandler ?\n                      <h4>Corresponde a consulta realizada el {moment(objectHandler.date).format('DD-MM-YY')}</h4>\n                      : null\n                  }\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={deleteConsultationObject} >\n                    Regresar\n                  </button>\n                  <PrescriptionForm handleSubmit={handleSubmit} handleInput={handleInput} handleFileInput={handleFileInput} form={form} isButtonDisabled={isButtonDisabled} objectHandler={objectHandler} drugs={drugs}/>\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Receta</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('prescriptions')} >\n                    Regresar\n                  </button>\n                  <PrescriptionInfo {...prescription} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('prescriptions')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n    \n  )\n}\n\nexport default Prescription","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/prescriptions' : 'http://localhost:3000/api/prescriptions';\n\n// Export get function to retrieve all prescriptions of the current logged in user\nexport const getPrescriptions = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable prescription creation\nexport const createPrescription = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getPrescription = (prescriptionID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${prescriptionID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editPrescription = (prescriptionID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${prescriptionID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/medicalhistory' : 'http://localhost:3000/api/medicalhistory';\n\n// Export get function to retrieve all emergencies of the current logged in user\nexport const getMedicalHistories = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable MedicalHistory creation\nexport const createMedicalHistory = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getMedicalHistory = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editMedicalHistory = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}\n\nexport const createSummary = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.post(`${base_url}/createsummary`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useContext, useState } from 'react';           // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';                  // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                  // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                      // Import useForm custom hook\nimport UIkit from 'uikit';                                      // Import UIkit for notifications\nimport moment from 'moment';                                    // Import momentjs for date formatting\n\nimport { getMedicalHistory, createMedicalHistory, editMedicalHistory } from '../../services/medhistory-services';  // Import edit API call\n\nimport Questionnaire from '../common/questionnaire/Questionnaire'\nimport CatalogSearchbar from '../common/CatalogSearchbar'\n\nconst MedHistory = () => {\n\n  const { form, setForm, handleInput, handleFileInput } = useForm();\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  const [ medHistory, setMedHistory ] = useState({});\n  const [ healthHistoryState, setHealthHistoryState ] = useState({\n    \"Diabetes\": false,\n    \"Hipertensión\": false,\n    \"Asma\": false,\n    \"Alergias\": false,\n    \"Enfermedades del Corazón\": false,\n    \"Enfermedades del Hígado\": false,\n    \"Enfermedades del Riñón\": false,\n    \"Enfermedades Endócrinas\": false,\n    \"Enfermedades del Sist. Digestivo\": false,\n    \"Enfermedades Mentales\": false,\n    \"Cáncer\": false,\n    \"Otras\": false\n  })\n  \n  const { user, setUser, route, setRoute } = useContext(AppContext); // Destructure user state variable\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n\n  let healthHistoryObj = {\n    \"Diabetes\": false,\n    \"Hipertensión\": false,\n    \"Asma\": false,\n    \"Alergias\": false,\n    \"Enfermedades del Corazón\": false,\n    \"Enfermedades del Hígado\": false,\n    \"Enfermedades del Riñón\": false,\n    \"Enfermedades Endócrinas\": false,\n    \"Enfermedades del Sist. Digestivo\": false,\n    \"Enfermedades Mentales\": false,\n    \"Cáncer\": false,\n    \"Otras\": false\n  }, allergiesObj = {\n    \"Agentes Biológicos\": \"Ninguno\",\n    \"Alimentos\": \"Ninguno\",\n    \"Insectos\": \"Ninguno\",\n    \"Medicamentos\": \"Ninguno\",\n  }, weekly_exercise_hours = 0;\n\n  // Hook to update component when user state variable is modified\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getMedicalHistory()\n    .then( res => {\n\n      const { medicalHistory } = res.data;\n\n      setMedHistory(medicalHistory);\n\n    });\n\n  }, [user] );\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true);\n\n    form['health_history'] = {...healthHistoryState};\n    // form['health_history'] = healthHistoryObj;\n    // form['allergies'] = allergiesObj;\n    form['weekly_exercise_hours'] = parseInt(weekly_exercise_hours);\n    \n    // Call edit service with formData as parameter, which includes form data for user profile information\n    if ( route === 'edit' ) {\n\n      editMedicalHistory(form)\n      .then( res => {\n\n        const { medicalHistory } = res.data   // Destructure updated user document from response\n        \n        setMedHistory(medicalHistory);              // Modify user state variable with updated information\n        setRoute('none');\n        setIsButtonDisabled(false);\n\n        // Send UIkit success notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> '¡Tu historial clínico fue actualizado exitosamente!'`,\n          pos: 'bottom-center',\n          status: 'success'\n        });\n\n      })\n      .catch( error => {\n\n        console.log(error);\n        setIsButtonDisabled(false);\n\n        // Send UIkit error notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> ${error}`,\n          pos: 'bottom-center',\n          status: 'danger'\n        });\n\n      });\n\n    }\n\n    if ( route !== 'edit' ) {\n\n      createMedicalHistory(form)\n      .then( res => {\n\n        const { medicalHistory } = res.data   // Destructure updated user document from response\n        \n        setMedHistory(medicalHistory);              // Modify user state variable with updated information\n        setRoute('none');\n        setIsButtonDisabled(false);\n\n        // Send UIkit success notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> '¡Tu historial clínico fue creado exitosamente!'`,\n          pos: 'bottom-center',\n          status: 'success'\n        });\n\n      })\n      .catch( error => {\n\n        console.log(error);\n        setIsButtonDisabled(false);\n\n        // Send UIkit error notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> ${error}`,\n          pos: 'bottom-center',\n          status: 'danger'\n        });\n\n      });\n\n    }\n\n  };\n\n  const handleMedHistoryInput = (event) => {\n\n    const { name, value, id, checked } = event.target;\n\n    switch ( name ) {\n      case 'health_history':\n        // healthHistoryObj[value] = !healthHistoryObj[value];\n        setHealthHistoryState( prevState => ({...prevState, [value]: checked}))\n        // console.log(healthHistoryState)\n        // setForm( prevState => ({...prevState, ['health_history']: healthHistoryObj}) );\n        break;\n      case 'allergies':\n        allergiesObj[id] = value;\n        // console.log(allergiesObj)\n        // setForm( prevState => ({...prevState, ['allergies']: allergiesObj}) );\n        break;\n      case 'weekly_exercise_hours':\n        weekly_exercise_hours = parseInt(value)\n    }\n\n    // console.log(healthHistoryObj)\n    // console.log(allergiesObj)\n  }\n\n  const medHistoryQuestionnaire = [\n    <div className=\"\">\n      <h4 className=\"uk-margin\">Antecedentes Heredo-Familiares</h4>\n      <div className=\"uk-margin\">\n        <p>Si seleccionas una casilla, por favor indica el familiar</p>\n        <div className=\"uk-form-controls uk-flex\">\n          <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n            <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n              <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_diabetes\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_diabetes : null}/> Diabetes</label>\n              <div className=\"uk-form-controls\">\n                <select name=\"family_diabetes_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_diabetes_patient : \"\"}>\n                  <option>Ninguno</option>\n                  <option>Padre</option>\n                  <option>Madre</option>\n                  <option>Hermano(a)</option>\n                  <option>Abuelo(a) Paterno</option>\n                  <option>Abuelo(a) Materno</option>\n                  <option>Tío(a) Paterno</option>\n                  <option>Tío(a) Materno</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_hypertension\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_hypertension : null} /> Hipertensión</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_hypertension_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_hypertension_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_asthma\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_asthma : null} /> Asma</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_asthma_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_asthma_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_allergies\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_allergies : null} /> Alergias</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_allergies_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_allergies_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_heart_disease\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_heart_disease : null} /> Enfermedades del Corazón</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_heart_disease_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_heart_disease_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_liver_disease\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_liver_disease : null} /> Enfermedades del Hígado</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_liver_disease_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_liver_disease_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_digestive_disease\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_digestive_disease : null} /> Enfermedades del Sist. Digestivo</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_digestive_disease_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_digestive_disease_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_kidney_disease\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_kidney_disease : null} /> Enfermedades del Riñón</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_kidney_disease_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_kidney_disease_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_endocrin_disease\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_diabetes : null} /> Enfermedades Endócrinas</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_endocrin_disease_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_endocrin_disease_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_mental_disease\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_mental_disease : null} /> Enfermedades Mentales</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_mental_disease_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_mental_disease_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_cancer\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_cancer : null} /> Cáncer</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_cancer_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_cancer_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_other_disease\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_other_disease : null} /> Otras</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_other_disease_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_other_disease_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>,\n    <div className=\"\">\n      <h4 className=\"uk-margin\">Antecedentes Personales Patológicos</h4>\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\">Enfermedades Actuales:</label>\n        <div className=\"uk-form-controls uk-flex\">\n          <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Diabetes\" onChange={handleMedHistoryInput} /> Diabetes</label>\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Hipertensión\" onChange={handleMedHistoryInput} /> Hipertensión</label>\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Asma\" onChange={handleMedHistoryInput} /> Asma</label>\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Alergias\" onChange={handleMedHistoryInput} /> Alergias</label>\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Enfermedades del Corazón\" onChange={handleMedHistoryInput} /> Enfermedades del Corazón</label>\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Enfermedades del Hígado\" onChange={handleMedHistoryInput} /> Enfermedades del Hígado</label>\n          </div>\n          <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Enfermedades del Riñón\" onChange={handleMedHistoryInput} /> Enfermedades del Riñon</label>\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Enfermedades Endócrinas\" onChange={handleMedHistoryInput} /> Enfermedades del Endócrinas</label>\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Enfermedades del Sist. Digestivo\" onChange={handleMedHistoryInput} /> Enfermedades del Sist. Digestivo</label>\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Enfermedades Mentales\" onChange={handleMedHistoryInput} /> Enfermedades Mentales</label>\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Cáncer\" onChange={handleMedHistoryInput} /> Cáncer</label>\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Otras\" onChange={handleMedHistoryInput} /> Otras</label>\n          </div>\n        </div>\n      </div>\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Intervenciones Quirúrgicas:</label>\n        <div className=\"uk-form-controls\">\n          <CatalogSearchbar type=\"procedure\" form={form} handleFormInput={handleInput}/>\n        </div>\n      </div>\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Alergias:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"allergies\" onChange={handleInput} placeholder=\"Introducir alergias...\" />\n        </div>\n      </div>\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Traumatismos:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"traumatisms\" onChange={handleInput} placeholder=\"Introducir traumatismos...\" />\n        </div>\n      </div>\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Hospitalizaciones Previas:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"hospitalizations\" onChange={handleInput} placeholder=\"Introducir hospitalizaciones...\" />\n        </div>\n      </div>\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Adicciones:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"addictions\" onChange={handleInput} placeholder=\"Introducir adicciones...\" />\n        </div>\n      </div>\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Otros:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"others\" onChange={handleInput} defaultValue={medHistory ? medHistory.others : \"Introducir otros...\"} />\n        </div>\n      </div>\n    </div>,\n    <div className=\"\">\n      <h4 className=\"uk-margin\">Antecedentes Personales No Patológicos</h4>\n      <div className=\"uk-margin\">\n        <div className=\"uk-form-controls uk-flex\">\n          <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n            <label className=\"uk-form-label\">Tabaquismo:</label>\n            <div className=\"uk-form-controls\">\n              <select name=\"smoking_status\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue=\"\">\n                <option></option>\n                <option>No fuma</option>\n                <option>Moderado</option>\n                <option>Intenso</option>\n              </select>\n            </div>\n            <label className=\"uk-form-label\">Alcoholismo:</label>\n            <div className=\"uk-form-controls\">\n              <select name=\"alcoholism\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue=\"\">\n                <option></option>\n                <option>No toma</option>\n                <option>Moderado</option>\n                <option>Intenso</option>\n              </select>\n            </div>\n            <label className=\"uk-form-label\">Hábitos Alimenticios:</label>\n            <div className=\"uk-form-controls\">\n              <select name=\"nutritional_status\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue=\"\">\n                <option></option>\n                <option>Buenos</option>\n                <option>Regular</option>\n                <option>Malos</option>\n              </select>\n            </div>\n            <label className=\"uk-form-label\">Sueño:</label>\n            <div className=\"uk-form-controls\">\n              <select name=\"sleep_status\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue=\"\">\n                <option></option>\n                <option>Duerme bien</option>\n                <option>Duerme mal</option>\n              </select>\n            </div>\n            <label className=\"uk-form-label\">Horas de Ejercicio Semanales:</label>\n            <div className=\"uk-form-controls\">\n              <input className=\"uk-input uk-border-pill\" type=\"number\" name=\"weekly_exercise_hours\" onChange={handleMedHistoryInput} />\n            </div>\n            <label className=\"uk-form-label\">Higiene Bucal:</label>\n            <div className=\"uk-form-controls\">\n              <select name=\"oral_hygiene\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue=\"\">\n                <option></option>\n                <option>1 Vez al día</option>\n                <option>2 Veces al día</option>\n                <option>3 Veces al día</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>,\n  ]\n\n  const backButton = (event) => setRoute('none')\n\n  const [ step, setStep ] = useState(1);\n\n  const changeStep = (index) => {\n    setStep(index)\n  }\n\n  return (\n    <div className=\"content\">\n      \n      { route === 'none' && !medHistory ? (\n          <div className=\"uk-section\">\n            <div className=\"uk-container uk-overflow-auto\">\n              <Questionnaire title=\"Registra tus Antecedentes\" questionnaire={medHistoryQuestionnaire} handleSubmit={handleSubmit} form={form} backButton={backButton} isComplete={false}/>\n            </div>\n          </div>\n        ) : route === 'none' ? (\n          <div className=\"uk-section\">\n            <h2>Mis Antecedentes</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('edit')} >\n              Editar historial\n            </button>\n            <div className=\"uk-container uk-overflow-auto\">\n              <div className=\"uk-flex uk-flex-center\">\n                <ul className=\"uk-dotnav\">\n                  <li onClick={() => changeStep(1)} key=\"1\" className={ step === 1 ? \"uk-active\" : null }><a href=\"#\">1</a></li>\n                  <li onClick={() => changeStep(2)} key=\"2\" className={ step === 2 ? \"uk-active\" : null }><a href=\"#\">2</a></li>\n                  <li onClick={() => changeStep(3)} key=\"3\" className={ step === 3 ? \"uk-active\" : null }><a href=\"#\">3</a></li>\n                </ul>\n              </div>\n              <div className={ step === 1 ? \"uk-visible\" : \"uk-hidden\" }>\n                <h4 className=\"uk-margin\">Antecedentes Heredo-Familiares</h4>\n                <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                  <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                    <label> Diabetes: {medHistory ? medHistory.family_diabetes : \"Negativo\"}</label>\n                    <div className=\"uk-form-controls\">\n                      <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_diabetes_patient : \"Ninguno\"} />\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Hipertensión: {medHistory ? medHistory.family_hypertension : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_hypertension_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Asma: {medHistory ? medHistory.family_asthma : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_asthma_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Alergias: {medHistory ? medHistory.family_allergies : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_allergies_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Enfermedades del Corazón: {medHistory ? medHistory.family_heart_disease : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_heart_disease_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Enfermedades del Hígado: {medHistory ? medHistory.family_liver_disease : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_liver_disease_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Enfermedades del Sist. Digestivo: {medHistory ? medHistory.family_digestive_disease : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_digestive_disease_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Enfermedades del Riñón: {medHistory ? medHistory.family_kidney_disease : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_kidney_disease_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Enfermedades Endócrinas: {medHistory ? medHistory.family_endocrin_disease : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_endocrin_disease_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Enfermedades Mentales: {medHistory ? medHistory.family_mental_disease : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_mental_disease_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Cáncer: {medHistory ? medHistory.family_cancer : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_cancer_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Otras Enfermedades: {medHistory ? medHistory.family_other_disease : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_other_disease_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className={ step === 2 ? \"uk-visible\" : \"uk-hidden\" }>\n                <h4 className=\"uk-margin\">Antecedentes Personales Patológicos</h4>\n                <h5>Enfermedades Actuales</h5>\n                <ul className=\"uk-list\">\n                  { medHistory.health_history ? Object.entries(medHistory.health_history).map( (entry, index) => {\n                    if (entry[1] === true) \n                    return (<li key={index}>{entry[0]}</li>) \n                  else \n                    return null\n                }) : 'Cargando' }\n                </ul>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Intervenciones Quirúrgicas:</label>\n                  <div className=\"uk-form-controls\">\n                    <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.procedure : \"Ninguno\"} />\n                  </div>\n                </div>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Alergias:</label>\n                  <div className=\"uk-form-controls\">\n                    <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.allergies : \"Ninguna\"} />\n                  </div>\n                </div>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Traumatismos:</label>\n                  <div className=\"uk-form-controls\">\n                    <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.traumatisms : \"Ninguno\"} />\n                  </div>\n                </div>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Hospitalizaciones Previas:</label>\n                  <div className=\"uk-form-controls\">\n                    <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.hospitalizations : \"Ninguno\"} />\n                  </div>\n                </div>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Adicciones:</label>\n                  <div className=\"uk-form-controls\">\n                    <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.addictions : \"Ninguno\"} />\n                  </div>\n                </div>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Otros:</label>\n                  <div className=\"uk-form-controls\">\n                  <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.others : \"Ninguno\"} />\n                  </div>\n                </div>\n              </div>\n              <div className={ step === 3 ? \"uk-visible\" : \"uk-hidden\" }>\n                <h4 className=\"uk-margin\">Antecedentes Personales No Patológicos</h4>\n                <p>Horas de actividad física a la semana: {medHistory.weekly_exercise_hours}</p>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Tabaquismo:</label>\n                  <div className=\"uk-form-controls\">\n                  <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.smoking_status : \"Ninguno\"} />\n                  </div>\n                </div>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Alcoholismo:</label>\n                  <div className=\"uk-form-controls\">\n                  <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.alcoholism : \"Ninguno\"} />\n                  </div>\n                </div>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Hábitos Alimenticios:</label>\n                  <div className=\"uk-form-controls\">\n                  <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.nutritional_status : \"Ninguno\"} />\n                  </div>\n                </div>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Sueño:</label>\n                  <div className=\"uk-form-controls\">\n                  <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.sleep_status : \"Ninguno\"} />\n                  </div>\n                </div>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Higiene Bucal:</label>\n                  <div className=\"uk-form-controls\">\n                  <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.oral_hygiene : \"Ninguno\"} />\n                  </div>\n                </div>\n              </div>\n          </div>\n        </div>\n        ) : (\n          <div className=\"uk-section\">\n          <div className=\"uk-container uk-overflow-auto\">\n            <Questionnaire title=\"Editar mis Antecedentes\" questionnaire={medHistoryQuestionnaire} handleSubmit={handleSubmit} form={form} backButton={backButton} isComplete={true}/>\n          </div>\n            \n          </div>\n        )\n      }\n      </div>)\n\n}\n\nexport default MedHistory","import React from 'react';\nimport CatalogSearchbar from '../common/CatalogSearchbar'\n\nconst HospitalizationForm = ({ handleSubmit, handleInput, form, isButtonDisabled }) => {\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n      <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">¿Ingresó usted al quirófano?</label>\n        <div className=\"uk-margin uk-flex uk-flex-around\">\n          <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"isSurgery\" value={false} />No</label>\n          <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"isSurgery\" value={true} />Sí</label>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de admisión:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"date\" name=\"admission_date\" onChange={handleInput} required={true}/>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de alta:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"date\" name=\"discharge_date\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Motivo de visita</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"chief_complaint\" onChange={handleInput} placeholder=\"Dolor, fiebre, etc...\" required={true}/>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Diagnóstico</label>\n        <div className=\"uk-form-controls\">\n          <CatalogSearchbar type=\"diagnosis\" form={form} handleFormInput={handleInput}/>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Procedimiento</label>\n        <div className=\"uk-form-controls\">\n          <CatalogSearchbar type=\"procedure\" form={form} handleFormInput={handleInput}/>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Médico tratante:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"doctor\" onChange={handleInput} placeholder=\"Nombre completo del médico\"  required={true}/>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Especialidad del Médico:</label>\n        <div className=\"uk-form-controls\">\n          <CatalogSearchbar type=\"doctor_specialty\" form={form} handleFormInput={handleInput}/>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Clínica</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"facility_name\" onChange={handleInput} placeholder=\"Hospital General de México...\" required={true} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Observaciones y comentarios</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"description\" onChange={handleInput} placeholder=\"Describir evento\" required={true} />\n        </div>\n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-border-pill uk-width-2-3 uk-width-1-4@m\" disabled={isButtonDisabled} >\n          Crear Visita\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default HospitalizationForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst HospitalizationInfo = ({ hospitalization }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de admisión: {moment(hospitalization.admission_date).locale('es').format('LL')}</p>\n        <p>Motivo de visita: {hospitalization.chief_complaint}</p>\n        <p>Diagnóstico: {hospitalization.diagnosis}</p>\n        <p>Clínica: {hospitalization.facility_name}</p>\n        <p>Observaciones y comentarios: {hospitalization.description}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default HospitalizationInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport { AppContext } from '../../AppContext';\nimport useForm from '../../hooks/useForm';\nimport UIkit from 'uikit';\nimport moment from 'moment';\n\nimport { getHospitalizations, getHospitalization, createHospitalization } from '../../services/hospitalization-services';\nimport HospitalizationForm from './HospitalizationForm';\nimport HospitalizationInfo from './HospitalizationInfo';\n\nconst Hozpitalization = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ hospitalization, setHospitalization ] = useState({});\n  const [ hospitalizations, setHospitalizations ] = useState([]);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getHospitalizations()\n    .then( res => {\n      \n      const { hospitalizations } = res.data;\n      setHospitalizations(hospitalizations);\n      setRoute('hospitalizations');\n\n    })\n    \n  }, [isButtonDisabled]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();\n    setIsButtonDisabled(true);\n    console.log(form)\n\n    createHospitalization(form)\n    .then( res => {\n\n      const { hospitalization } = res.data    // Destructure updated preferences document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡La hospitalización fue creada exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('hospitalizations');\n      setIsButtonDisabled(false);\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n      \n      setIsButtonDisabled(false);\n\n    });\n\n  }\n\n  // const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadHospitalization = (hospitalization) => {\n    setHospitalization(hospitalization);\n    setRoute('read');\n  }\n\n  const goToPrescription = (event, hospitalization, newRoute) => {\n    event.preventDefault();\n    setHospitalization(hospitalization);\n    setObjectHandler(hospitalization);\n    setRoute(newRoute);\n    console.log(objectHandler)\n  }\n\n  const goToStudies = (event, hospitalization, newRoute) => {\n    event.preventDefault();\n    setObjectHandler(hospitalization);\n    setRoute(newRoute);\n    console.log(objectHandler);\n  }\n\n  return (\n    <div className=\"content\">\n      \n        { route === 'hospitalizations' ? (\n          <div className=\"uk-section\">\n            <h2>Hospitalizaciones</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nueva Hospitalización\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { hospitalizations.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado hospitalizaciones</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center\">Diagnóstico</th>\n                    <th className=\"uk-text-center uk-visible@s\">Clínica</th>\n                    <th className=\"uk-text-center uk-visible@s\">Estancia</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { hospitalizations ? \n                      hospitalizations.map( (hospitalization, index) => \n                        <tr key={index} >\n                          <td className=\"uk-text-center\">{moment(hospitalization.admission_date).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center\">{hospitalization.diagnosis ? hospitalization.diagnosis : 'No definido'}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{hospitalization.facility_name}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{`No disponible`}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadHospitalization({hospitalization})} >\n                              Ver\n                            </button>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nueva Hospitalización</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('hospitalizations')} >\n                    Regresar\n                  </button>\n                  <HospitalizationForm handleSubmit={handleSubmit} handleInput={handleInput} form={form} isButtonDisabled={isButtonDisabled} />\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Hospitalización</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('hospitalizations')} >\n                    Regresar\n                  </button>\n                  <HospitalizationInfo {...hospitalization} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('hospitalizations')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n  )\n}\n\nexport default Hozpitalization","import React from 'react';\nimport CatalogSearchbar from '../common/CatalogSearchbar'\n\nconst EmergencyForm = ({ handleSubmit, handleInput, form, isButtonDisabled }) => {\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n      <label className=\"uk-form-label\" htmlFor=\"date\">Fecha y hora de urgencia:</label>\n                <div className=\"uk-form-controls uk-flex uk-flex-wrap uk-flex-between uk-width-1-1\">\n                  <div className=\"uk-width-1-1 uk-width-1-2@s\">\n                    <input className=\"uk-input uk-border-pill\" type=\"date\" name=\"only-date\" onChange={handleInput} required={true} />\n                  </div>\n                  <div className=\"uk-width-1-1 uk-width-1-3@s uk-flex uk-flex-around\">\n                    <select name=\"time-hours\" onChange={handleInput} className=\"uk-select uk-border-pill uk-width-1-3\" defaultValue=\"Hora\">\n                      <option disabled={true}>Hora</option>\n                      <option>1</option>\n                      <option>2</option>\n                      <option>3</option>\n                      <option>4</option>\n                      <option>5</option>\n                      <option>6</option>\n                      <option>7</option>\n                      <option>8</option>\n                      <option>9</option>\n                      <option>10</option>\n                      <option>11</option>\n                      <option>12</option>\n                    </select>\n                    <select name=\"time-minutes\" onChange={handleInput} className=\"uk-select uk-border-pill uk-width-1-3\" defaultValue=\"Minutos\">\n                      <option disabled={true}>Minutos</option>\n                      <option>00</option>\n                      <option>15</option>\n                      <option>30</option>\n                      <option>45</option>\n                    </select>\n                    <select name=\"time-period\" onChange={handleInput} className=\"uk-select uk-border-pill uk-width-1-4\" defaultValue=\"AM/PM\">\n                      <option disabled={true}>AM/PM</option>\n                      <option>AM</option>\n                      <option>PM</option>\n                    </select>\n                  </div>\n                </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Motivo de visita:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"chief_complaint\" onChange={handleInput} placeholder=\"Dolor, fiebre, etc...\"  required={true}/>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Diagnóstico:</label>\n        <div className=\"uk-form-controls\">\n          <CatalogSearchbar type=\"diagnosis\" form={form} handleFormInput={handleInput}/>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Médico tratante:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"doctor\" onChange={handleInput} placeholder=\"Nombre completo del médico\"  required={true}/>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Especialidad del Médico:</label>\n        <div className=\"uk-form-controls\">\n          <CatalogSearchbar type=\"doctor_specialty\" form={form} handleFormInput={handleInput}/>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Clínica:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"facility_name\" onChange={handleInput} placeholder=\"Hospital General de México...\" required={true}/>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Observaciones y comentarios:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"description\" onChange={handleInput} placeholder=\"Describir evento\" required={true}/>\n        </div>\n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-border-pill uk-width-2-3 uk-width-1-4@m\" disabled={isButtonDisabled} >\n          Crear Urgencia\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default EmergencyForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst EmergencyInfo = ({ emergency }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de visita: {moment(emergency.date).locale('es').format('LL')}</p>\n        <p>Motivo de visita: {emergency.chief_complaint}</p>\n        <p>Diagnóstico: {emergency.diagnosis}</p>\n        <p>Clínica: {emergency.facility_name}</p>\n        <p>Observaciones y comentarios: {emergency.description}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default EmergencyInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport { AppContext } from '../../AppContext';\nimport useForm from '../../hooks/useForm';\nimport UIkit from 'uikit';\nimport moment from 'moment';\n\nimport { getEmergencies, getEmergency, createEmergency } from '../../services/emergency-services';\nimport EmergencyForm from './EmergencyForm';\nimport EmergencyInfo from './EmergencyInfo';\n\nconst Emergency = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ emergency, setEmergency ] = useState({});\n  const [ emergencies, setEmergencies ] = useState([]);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getEmergencies()\n    .then( res => {\n      \n      const { emergencies } = res.data;\n      setEmergencies(emergencies);\n      setRoute('emergencies');\n\n    })\n    \n  }, [isButtonDisabled]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();\n    setIsButtonDisabled(true);\n    \n    let datetime;\n\n    if ( form.timeperiod === 'AM' ) {\n      if ( form['time-hours'] === '12' )\n        datetime = form['only-date']+'T00'+':'+form['time-minutes']+':00';\n      else\n        datetime = form['only-date']+'T'+form['time-hours']+':'+form['time-minutes']+':00';\n    }\n    else {\n      if ( form['time-hours'] === '12' )\n        datetime = form['only-date']+'T12'+':'+form['time-minutes']+':00';\n      else {\n        switch (form['time-hours']) {\n          case '1': datetime = form['only-date']+'T13'+':'+form['time-minutes']+':00'; break;\n          case '2': datetime = form['only-date']+'T14'+':'+form['time-minutes']+':00'; break;\n          case '3': datetime = form['only-date']+'T15'+':'+form['time-minutes']+':00'; break;\n          case '4': datetime = form['only-date']+'T16'+':'+form['time-minutes']+':00'; break;\n          case '5': datetime = form['only-date']+'T17'+':'+form['time-minutes']+':00'; break;\n          case '6': datetime = form['only-date']+'T18'+':'+form['time-minutes']+':00'; break;\n          case '7': datetime = form['only-date']+'T19'+':'+form['time-minutes']+':00'; break;\n          case '8': datetime = form['only-date']+'T20'+':'+form['time-minutes']+':00'; break;\n          case '9': datetime = form['only-date']+'T21'+':'+form['time-minutes']+':00'; break;\n          case '10': datetime = form['only-date']+'T22'+':'+form['time-minutes']+':00'; break;\n          case '11': datetime = form['only-date']+'T23'+':'+form['time-minutes']+':00'; break;\n          default: datetime = form['only-date']+'T12'+':'+form['time-minutes']+':00';\n        }\n      }\n    }\n\n    form['date'] = datetime;\n    console.log(datetime)\n\n    createEmergency(form)\n    .then( res => {\n\n      const { emergency } = res.data    // Destructure updated preferences document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡La urgencia fue creada exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('emergencies');\n      setIsButtonDisabled(false);\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n      \n      setIsButtonDisabled(false);\n\n    });\n\n  }\n\n  // const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadEmergency = (emergency) => {\n    setEmergency(emergency);\n    setRoute('read');\n  }\n\n  const goToPrescription = (event, emergency, newRoute) => {\n    event.preventDefault();\n    setEmergency(emergency);\n    setObjectHandler(emergency);\n    setRoute(newRoute);\n    console.log(objectHandler)\n  }\n\n  const goToStudies = (event, emergency, newRoute) => {\n    event.preventDefault();\n    setObjectHandler(emergency);\n    setRoute(newRoute);\n    console.log(objectHandler);\n  }\n\n  return (\n    <div className=\"content\">\n      \n        { route === 'emergencies' ? (\n          <div className=\"uk-section\">\n            <h2>Urgencias</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nueva Urgencia\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { emergencies.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado urgencias</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center\">Hora</th>\n                    <th className=\"uk-text-center uk-visible@s\">Motivo de visita</th>\n                    <th className=\"uk-text-center uk-visible@s\">Diagnóstico</th>\n                    <th className=\"uk-text-center uk-visible@s\">Doctor</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { emergencies ? \n                      emergencies.map( (emergency, index) => \n                        <tr key={index} >\n                          <td className=\"uk-text-center\">{moment(emergency.date).locale('es').format('l')}</td>\n                          <td className=\"uk-text-center\">{moment(emergency.date).locale('es').format('LT')}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{emergency.chief_complaint}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{emergency.diagnosis}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{`Dr. ${emergency.doctor}`}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadEmergency({emergency})} >\n                              Ver\n                            </button>\n                          </td>\n                          <td>\n                            <a href={`#modal-sections-${index}`} uk-toggle={`target: #modal-sections-${index}`}>\n                              <span className=\"uk-margin-small-right\" uk-icon=\"more-vertical\"></span>\n                            </a>\n                            <div id={`modal-sections-${index}`} className=\"uk-flex-top\" uk-modal=\"true\">\n                              <div className=\"uk-modal-dialog uk-margin-auto-vertical\">\n                                <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\" />\n                                <div className=\"uk-modal-header\">\n                                  <h3 className=\"uk-text-center\">Datos de la Urgencia</h3>\n                                  <p>Fecha: {moment(emergency.date).locale('es').format('LL')}</p>\n                                  <p>Clínica: {emergency.facility_name}</p>\n                                </div>\n                                <div className=\"uk-modal-body uk-flex uk-flex-column\">\n                                  { emergency.treatment ? (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToPrescription(event, emergency, 'read')} >\n                                        <NavLink to=\"/recetas\">Ver Receta</NavLink>\n                                      </button>\n                                    ) : (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToPrescription(event, emergency, 'create')} >\n                                        <NavLink to=\"/recetas\">Agregar Receta</NavLink>\n                                      </button>\n                                    )\n                                  }\n                                  { emergency.treatment ? (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToStudies(event, emergency, 'read')} >\n                                        <NavLink to=\"/estudios\">Ver Estudios</NavLink>\n                                      </button>\n                                    ) : (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToStudies(event, emergency, 'create')} >\n                                        <NavLink to=\"/estudios\">Agregar Estudios</NavLink>\n                                      </button>\n                                    )\n                                  }\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nueva Urgencia</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('emergencies')} >\n                    Regresar\n                  </button>\n                  <EmergencyForm handleSubmit={handleSubmit} handleInput={handleInput} form={form} isButtonDisabled={isButtonDisabled} />\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Urgencia</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('emergencies')} >\n                    Regresar\n                  </button>\n                  <EmergencyInfo {...emergency} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('emergencies')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n  )\n}\n\nexport default Emergency","import React, { useEffect, useState } from 'react'\nimport cie10 from '../../catalogs/cie10.json'\nimport procedures from '../../catalogs/procedimientos.json'\nimport drugs from '../../catalogs/drugs.json'\n\nconst CatalogSearchbar = ({type, form, handleFormInput}) => {\n\n  const [ searchResults, setSearchResults ] = useState('');\n  const [ searchValue, setSearchValue ] = useState('');\n  const [ showDrop, setShowDrop ] = useState(false);\n\n  const handleInput = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  let results = [];\n\n  useEffect( () => {\n\n    switch (type) {\n      case \"diagnosis\": results = cie10.filter( disease =>\n        disease.NOMBRE.toLowerCase().includes(searchValue)\n        );\n        break;\n\n      case \"procedure\": results = procedures.filter( disease =>\n        disease.PRO_NOMBRE.toLowerCase().includes(searchValue)\n        );\n        break;\n\n      case \"drugs\": results = drugs.filter( disease =>\n        disease.generic_name.toLowerCase().includes(searchValue)\n        );\n        break;\n    }\n\n    setSearchResults(results);\n\n    if ( results.length <= 15 ) {\n      setShowDrop(true);\n    }\n    console.log(searchResults)\n\n  }, [searchValue]);\n\n\n  return (\n      <div className=\"uk-margin uk-width-1-1\">\n        <div className=\"uk-search uk-search-default uk-width-1-1\">\n          <span className=\"uk-search-icon-flip\" uk-search-icon=\"true\"></span>\n          <input\n            className=\"uk-search-input uk-text-center\"\n            type=\"search\"\n            placeholder={ type === 'diagnosis' ? \"Busca padecimiento...\" : type === 'drugs' ? \"Busca por nombre genérico...\" : \"Busca procedimiento...\"}\n            value={searchValue}\n            onChange={handleInput}\n          />\n        </div>\n        { showDrop ? (\n            <select className=\"uk-select\" name=\"generic_name\" onChange={handleFormInput}>\n              {searchResults.map( (drug, index) => <option key={index} value={drug.generic_name} >{drug.generic_name}</option> )}\n            </select>\n          ) : null \n        }\n      </div>\n  )\n}\n\nexport default CatalogSearchbar","import React from 'react';\nimport DrugSearchbar from '../common/DrugSearchbar'\n\nconst DrugForm = ({ handleSubmit, handleInput, form, isButtonDisabled }) => {\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de inicio del tratamiento:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"date_added\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre de patente:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"brand_name\" onChange={handleInput} placeholder=\"Tempra, Aspirina...\" />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre genérico:</label>\n        <div className=\"uk-form-controls\">\n          <DrugSearchbar type=\"drugs\" form={form} handleFormInput={handleInput}/>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Dosis:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"dose\" onChange={handleInput} placeholder=\"500 mg, 5 mg, etc...\" />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Presentación:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"dosage_form\" onChange={handleInput} placeholder=\"Tableta, jarabe, etc\" />\n        </div>\n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-width-2-3 uk-border-pill\" disabled={isButtonDisabled} >\n          Agregar\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default DrugForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst PrescriptionInfo = ({ drug }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de inicio de tratamiento: {moment(drug.date).locale('es').format('LL')}</p>\n        <p>Nombre Genérico : {drug.generic_name}</p>\n        <p>Nombre Comercial : {drug.brand_name}</p>\n        <p>Presentación : {drug.dosage_form}</p>\n        <p>Dosis : {drug.dose}</p>\n      </div>\n      <div className=\"uk-flex uk-flex-column uk-flex-middle\">\n        <div className=\"uk-button uk-button-primary uk-width-2-3 uk-width-1-4@m uk-border-pill uk-margin\">\n          Terminar\n        </div>\n        <div className=\"uk-button uk-button-danger uk-width-2-3 uk-width-1-4@m uk-border-pill\">\n          Eliminar\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PrescriptionInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport { getDrugs, createDrug, getDrug, editDrug } from '../../services/drug-services';\n\nimport DrugForm from './DrugForm';\nimport DrugInfo from './DrugInfo';\n\nconst Drug = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput, handleFileInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ drug, setDrug] = useState({});\n  const [ drugs, setDrugs ] = useState([]);\n  const [ showForm, setShowForm ] = useState(false);\n  const [ showDrug, setShowDrug ] = useState(false);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    if ( route !== 'create' && route !== 'read' ) {\n\n      getDrugs()\n      .then( res => {\n      \n        const { drugs } = res.data;\n        setDrugs(drugs);\n        setRoute('drugs');\n\n      });\n    }\n\n    \n    \n  }, [route]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true)\n\n    createDrug(form)\n    .then( res => {\n\n      const { drug } = res.data    // Destructure updated preferences document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡El registro de medicamento fue creado exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('drugs');\n      setIsButtonDisabled(false);\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n      \n      setIsButtonDisabled(false);\n\n    });\n    \n  };\n\n  const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadDrug = (drug) => {\n    setDrug(drug);\n    setRoute('read');\n  }\n\n  const deleteDrugObject = () => {\n    setObjectHandler(null);\n    setRoute('drugs');\n  }\n\n  return (\n\n    <div className=\"content\">\n      \n        { route === 'drugs' ? (\n          <div className=\"uk-section\">\n            <h2>Mis Medicamentos</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nuevo Medicamento\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { drugs.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado medicamentos</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha Agregada</th>\n                    <th className=\"uk-text-center uk-visible\">Medicamento</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { drugs ? \n                      drugs.map( (drug, index) => \n                        <tr key={index}>\n                          <td className=\"uk-text-center\">{moment(drug.date_added).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center uk-visible\">{drug.brand_name}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadDrug({drug})} >\n                              Ver\n                            </button>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nuevo Medicamento</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={deleteDrugObject} >\n                    Regresar\n                  </button>\n                  <DrugForm handleSubmit={handleSubmit} handleInput={handleInput} handleFileInput={handleFileInput} form={form} isButtonDisabled={isButtonDisabled} objectHandler={objectHandler}/>\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Medicamento</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('drugs')} >\n                    Regresar\n                  </button>\n                  <DrugInfo {...drug} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('drugs')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n    \n  )\n}\n\nexport default Drug","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\nimport 'moment/locale/es'  // without this line it didn't work\n\nimport { getVitalSigns, getOneVitalSigns, createVitalSigns } from '../../services/vitalsigns-services'\n\nconst VitalSigns = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ vitalSign, setVitalSign] = useState({});\n  const [ vitalSigns, setVitalSigns ] = useState([]);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  const [ vitalsFormValues, setVitalsFormValues ] = useState({temperature: null, blood_pressure_sys: null, blood_pressure_dias: null, blood_sugar: null, heart_rate: null, weight: null});\n\n  const [ temperatureAvg, setTemperatureAvg ] = useState(null);\n  const [ sistPressureAvg, setSistPressureAvg ] = useState(null);\n  const [ diasPressureAvg, setDiasPressureAvg ] = useState(null);\n  const [ heartRateAvg, setHeartRateAvg ] = useState(null);\n  const [ respRateAvg, setRespRateAvg ] = useState(null);\n  const [ bloodSugarAvg, setBloodSugarAvg ] = useState(null);\n  const [ weightAvg, setWeightAvg ] = useState(null);\n  const [ heightAvg, setHeightAvg ] = useState(null);\n\n  useEffect( () => {\n    \n    getVitalSigns()\n    .then( res => {\n      \n      const { vitalsigns } = res.data\n      console.log(vitalsigns)\n\n      let temperature = 0, tempCounter = 0;\n      let sistPressure = 0, sistPressCounter = 0;\n      let diasPressure = 0, diasPressCounter = 0;\n      let heartRate = 0, heartRateCounter = 0;\n      let respRate = 0, repsRateCounter = 0;\n      let bloodSugar = 0, bloodSugCounter = 0;\n      let weight = 0, weightCounter = 0;\n      let height = 0, heightCounter = 0;\n\n      vitalsigns.map( record => {\n\n        const entries = Object.entries(record);\n\n        for ( const [ vital, value ] of entries ) {\n          \n          switch(vital) {\n            case 'temperature' : if ( value !== null ) {temperature += value; tempCounter++;}\n                                  break;\n            case 'blood_pressure_sys' : if ( value !== null ) {sistPressure += value; sistPressCounter++;}\n                                        break;\n            case 'blood_pressure_dias' : if ( value !== null ) {diasPressure += value; diasPressCounter++;}\n                                          break;\n            case 'heart_rate' : if ( value !== null ) {heartRate += value; heartRateCounter++;}\n                                break;\n            case 'resp_rate' : if ( value !== null ) {respRate += value; repsRateCounter++;}\n                                break;\n            case 'blood_sugar' : {bloodSugar += value; bloodSugCounter++;}\n                                  break;\n            case 'height' : if ( value !== null ) {height += value; weightCounter++;}\n                            break;\n            case 'weight' : if ( value !== null ) {weight += value; heightCounter++;}\n                            break;\n          }\n\n        }\n\n      });\n\n      setTemperatureAvg(temperature/tempCounter);\n      setSistPressureAvg(Math.floor(sistPressure/sistPressCounter));\n      setDiasPressureAvg(Math.floor(diasPressure/diasPressCounter));\n      setHeartRateAvg(Math.floor(heartRate/heartRateCounter));\n      setRespRateAvg(Math.floor(respRate/repsRateCounter));\n      setBloodSugarAvg(Math.floor(bloodSugar/bloodSugCounter));\n      setWeightAvg(weight/weightCounter);\n      setHeightAvg(height/heightCounter);\n\n    })\n  }, [])\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();\n    setIsButtonDisabled(true);\n\n    createVitalSigns(form)\n    .then( res => {\n\n      const { vitalsigns } = res.data;\n\n      console.log(vitalsigns)\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡Tus signos vitales fueron registrados exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('none');\n      setIsButtonDisabled(false);\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n      \n      setIsButtonDisabled(false);\n\n    })\n  }\n\n  return (\n    <div className=\"uk-section\">\n      <div className=\"uk-container\">\n        { route === 'none' ? (\n            <div>\n              <h2>Signos Vitales</h2>\n              <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n                + Nuevo Registro\n              </button>\n              <div className=\"uk-margin\">\n                <div className=\"uk-child-width-1-3@m uk-child-width-1-2 uk-grid-small uk-grid-match\" uk-grid=\"true\">\n                  <div>\n                    <div className=\"uk-card uk-card-hover uk-card-body uk-padding-small\">\n                      <h5>Temperatura</h5>\n                      <p>{temperatureAvg ? temperatureAvg.toFixed(1) : null} °C</p>\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"uk-card uk-card-hover uk-card-body uk-padding-small\">\n                      <h5>Presión Arterial</h5>\n                      <p>{sistPressureAvg}/{diasPressureAvg} mmHg</p>\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"uk-card uk-card-hover uk-card-body uk-padding-small\">\n                      <h5>Frecuencia Cardiaca</h5>\n                      <p>{heartRateAvg} lpm</p>\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"uk-card uk-card-hover uk-card-body uk-padding-small\">\n                      <h5>Frecuencia Respiratoria</h5>\n                      <p>{respRateAvg} rpm</p>\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"uk-card uk-card-hover uk-card-body uk-padding-small\">\n                      <h5>Glucosa</h5>\n                      <p>{bloodSugarAvg} mg/dl</p>\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"uk-card uk-card-hover uk-card-body uk-padding-small\">\n                      <h5>Peso</h5>\n                      <p>{weightAvg} kg</p>\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"uk-card uk-card-hover uk-card-body uk-padding-small\">\n                      <h5>Talla</h5>\n                      <p>{heightAvg} cm</p>\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"uk-card uk-card-hover uk-card-body uk-padding-small\">\n                      <h5>IMC</h5>\n                      <p>{weightAvg && heightAvg ?  (weightAvg/(heightAvg*heightAvg/10000)).toFixed(2) : null}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : route === 'create' ? (\n              <div>\n                <h2>Registrar Signos Vitales</h2>\n                <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('none')} >\n                  Regresar\n                </button>\n                <form onSubmit={handleSubmit} className=\"uk-margin uk-width-1-1 uk-flex uk-flex-column\">\n                  <div className=\"uk-margin-small-bottom uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                    <label>Presión Arterial:</label>\n                    <div className=\"uk-form-controls uk-flex uk-child-width-1-2\">\n                      <input name=\"blood_pressure_sys\" className=\"uk-input uk-border-pill\" type=\"number\" onChange={handleInput} placeholder=\"Alta\"/>\n                      <input name=\"blood_pressure_dias\" className=\"uk-input uk-border-pill\" type=\"number\" onChange={handleInput} placeholder=\"Baja\"/>\n                    </div>\n                  </div>\n                  <div className=\"uk-margin-small-bottom uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                    <label>Temperatura:</label>\n                    <div className=\"uk-form-controls\">\n                      <input name=\"temperature\" step=\"any\" className=\"uk-input uk-border-pill\" type=\"number\" onChange={handleInput} />\n                    </div>\n                  </div>\n                  <div className=\"uk-margin-small-bottom uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                    <label>Frecuencia Cardiaca:</label>\n                    <div className=\"uk-form-controls\">\n                      <input name=\"heart_rate\" className=\"uk-input uk-border-pill\" type=\"number\" onChange={handleInput} />\n                    </div>\n                  </div>\n                  <div className=\"uk-margin-small-bottom uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                    <label>Frecuencia Respiratoria:</label>\n                    <div className=\"uk-form-controls\">\n                      <input name=\"resp_rate\" className=\"uk-input uk-border-pill\" type=\"number\" onChange={handleInput} />\n                    </div>\n                  </div>\n                  <div className=\"uk-margin-small-bottom uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                    <label>Glucosa en sangre:</label>\n                    <div className=\"uk-form-controls\">\n                      <input name=\"blood_sugar\" className=\"uk-input uk-border-pill\" type=\"number\" onChange={handleInput} />\n                    </div>\n                  </div>\n                  <div className=\"uk-margin-small-bottom uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                    <label>Peso:</label>\n                    <div className=\"uk-form-controls\">\n                      <input name=\"weight\" className=\"uk-input uk-border-pill\" step=\"any\" type=\"number\" onChange={handleInput} />\n                    </div>\n                  </div>\n                  <div className=\"uk-margin-small-bottom uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                    <label>Talla (cm):</label>\n                    <div className=\"uk-form-controls\">\n                      <input name=\"height\" className=\"uk-input uk-border-pill\" type=\"number\" onChange={handleInput} />\n                    </div>\n                  </div>\n                  <div className=\"uk-margin-small uk-width-1-1 uk-flex uk-flex-center uk-flex-middle\">\n                    <button type=\"submit\" className=\"uk-button uk-button-primary uk-button uk-border-pill uk-width-2-3 uk-width-1-4@m\" disabled={isButtonDisabled} >\n                      Crear registro\n                    </button>\n                  </div>\n                </form>\n              </div>\n            ) : (\n              null\n            )\n        }\n        \n      </div>\n    </div>\n  )\n}\n\nexport default VitalSigns\n","import React, { useEffect, useState } from 'react'\nimport { Document, Page } from '../../../node_modules/react-pdf/dist/entry.webpack';\nimport { createSummary } from '../../services/pdf-services'\nimport FileSaver from 'file-saver';\n\nconst Summary = () => {\n\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  const [ pdfFile, setPdfFile ] = useState(null);\n\n  useEffect( () => {\n    \n  }, [pdfFile])\n\n  const onPdfFetched = () => {\n    FileSaver.saveAs(\n      new Blob([pdfFile], { type: 'application/pdf' }),\n      `sample.pdf`\n    );\n  }\n\n  const handleSummaryClick = () => {\n\n    // event.preventDefault();\n\n    createSummary()\n    .then( res => {\n      console.log(res.data)\n      setPdfFile(res.data)\n    })\n    .catch( error => {\n      console.log(error)\n    })\n\n  }\n\n  return (\n    <div className=\"uk-section\">\n      <h2>Mi Resumen Clínico</h2>\n      <div className=\"uk-container\">\n        En esta sección puede crear un PDF para compartir tu resumen clínico.\n      </div>\n      <button className=\"uk-button uk-button-primary uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={handleSummaryClick}>\n        Crear Resumen\n      </button>\n      { pdfFile ? \n        <div className=\"uk-margin\">\n          <button className=\"uk-button uk-button-primary uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={onPdfFetched}>\n            Descargar\n          </button>\n          <Document file={{data: pdfFile}} >\n            <Page pageNumber={1} />\n          </Document> \n        </div>\n        : null\n      }\n      \n    </div>\n  )\n}\n\nexport default Summary\n","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/pdf' : 'http://localhost:3000/api/pdf';\n\nexport const createSummary = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/all`, {\n    responseType: 'arraybuffer',\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n      Accept: 'application/pdf',\n    }\n  });\n\n}","import React, { useContext } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { AppContext } from './AppContext';\n\n// Import Components for navigation\nimport Landing from './components/landing/Landing';\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\nimport Profile from './components/profile/Profile';\n// import Preferences from './components/profile/Preferences';\nimport Home from './components/home/Home';\n// import DoctorLanding from './components/doctor/DoctorLanding';\n// import DoctorHome from './components/doctor/DoctorHome';\n// import PatientHome from './components/patient/PatientHome';\n// import Patients from './components/doctor/myPatients/Patients'\nimport Study from './components/study/Study';\nimport Disease from './components/disease/Disease';\nimport Consultation from './components/consultation/Consultation';\nimport Prescription from './components/prescription/Prescription';\nimport MedHistory from './components/medHistory/MedHistory';\nimport CatalogSearchbar from './components/common/CatalogSearchbar';\nimport Hospitalization from './components/hospitalization/Hozpitalization';\nimport Emergency from './components/emergency/Emergency'\nimport ConsultationFormSpecial from './components/consultation/ConsultationFormSpecial'\nimport Drug from './components/drug/Drug'\nimport Questionnaire from './components/Questionnaire'\nimport VitalSigns from './components/vitalsigns/VitalSigns'\nimport Summary from './components/medHistory/Summary'\n// import Calendar from './components/schedule/Calendar';\n\nconst Router = () => {\n\n  const { user, setRoute } = useContext(AppContext); // Destructure user state variable\n\n  const handleRoute = (newRoute) => setRoute(newRoute);\n\n  return (\n    <Switch>\n\n      <Route exact path=\"/\">\n        <Landing />\n      </Route>\n\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n      \n      <Route path=\"/login\">\n        <Login />\n      </Route>\n\n      <Route path=\"/registro\">\n        <Signup />\n      </Route>\n\n      <Route path=\"/home\">\n        <Home />\n      </Route>\n\n      <Route path=\"/perfil\">\n        <Profile />\n      </Route>\n\n      <Route path=\"/antecedentes\">\n        <MedHistory />\n      </Route>\n\n      <Route path=\"/padecimientos\">\n        <Disease />\n      </Route>\n\n      <Route path=\"/signosvitales\">\n        <VitalSigns />\n      </Route>\n\n      <Route path=\"/consultas\">\n        <Consultation />\n      </Route>\n\n      <Route path=\"/medicamentos\">\n        <Drug />\n      </Route>\n\n      <Route path=\"/recetas\">\n        <Prescription />\n      </Route>\n\n      <Route path=\"/laboratorio\">\n        <Study studyType=\"lab\"/>\n      </Route>\n\n      <Route path=\"/imagenologia\">\n        <Study studyType=\"xray\"/>\n      </Route>\n\n      <Route path=\"/hospitalizaciones\">\n        <Hospitalization />\n      </Route>\n\n      <Route path=\"/urgencias\">\n        <Emergency />\n      </Route>\n\n      <Route path=\"/resumen\">\n        <Summary />\n      </Route>\n\n    </Switch>\n  )\n};\n\nexport default Router;","import React, { useContext } from 'react';                // Import React and useContext hook\nimport { Link, NavLink } from 'react-router-dom';         // Import NavLink for \"navigation\"\nimport { useHistory } from 'react-router-dom';            // Import useHistory for \"redirection\"\nimport { AppContext }  from '../../AppContext';           // Import AppContext to use created context\nimport { logout } from '../../services/auth-services';    // Import logout service for logout functionality\nimport logo from '../../images/icons/blue-icon.svg'\n\n\n// Declare Nav functional component (Navigation Bar)\nconst Navbar = () => {\n  \n  // Destructure user state variable and resetUserContext function from context\n  const { user, setRoute, resetUserContext } = useContext(AppContext);\n  // Destructure push method from useHistory to \"redirect\" user\n  const { push } = useHistory();\n\n  // Declare function for handling logout button\n  const handleLogout = () => {\n\n    logout();                   // Execute logout function (clear localStorage)\n    push('/login');             // Redirect user to login\n    resetUserContext();         // delete user data from context to an empty object\n    closeMenu();\n\n  };\n\n  const handleRoute = (event, newRoute) => {\n    \n    event.preventDefault();               // Prevent page reloading after submit action\n    setRoute(newRoute);                   // Update route state variable with route sent as parameter\n    closeMenu();\n\n  }\n\n  const closeMenu = () => {\n    const toggle = document.getElementById('toggle');\n    toggle.checked = !toggle.checked;\n  }\n\n  return (\n\n    <nav className=\"uk-navbar uk-navbar-container uk-navbar-transparent uk-flex uk-flex-between uk-flex-middle uk-flex-wrap\">\n      \n      <ul className=\"uk-navbar-nav uk-height-1-1\">\n          <li className=\"uk-active uk-flex uk-flex-middle\">\n            <NavLink to=\"/\">\n              <div className=\"uk-margin-left\">\n                  <img src={logo} alt=\"logo\" width=\"48px\" height=\"48px\" className=\"uk-img\" />\n              </div>\n            </NavLink>\n          </li>\n          <li className=\"uk-active uk-flex uk-flex-middle uk-height-1-1\">\n              <NavLink to=\"/\">\n                B-Health\n              </NavLink>\n          </li>\n      </ul>\n\n      <label id=\"nav-menu\" htmlFor=\"toggle\" className=\"uk-margin-right uk-height-1-1\"><span uk-icon=\"menu\"></span></label>\n      <input type=\"checkbox\" id=\"toggle\"/>\n      \n      \n          \n          { user._id ? \n            <ul className=\"menu uk-navbar-nav\">\n              <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")}>\n                <NavLink to=\"/perfil\">\n                  <div className=\"uk-width-auto uk-margin-small-right\">\n                    <img className=\"uk-border-circle\" width={40} height={40} src={user.profile_picture} alt=\"User profile\" />\n                  </div>\n                  <p className=\"uk-margin-remove\">Mi Perfil</p>\n                </NavLink>\n              </li>\n              <li className=\"uk-active\">\n                <NavLink to=\"/login\">\n                  <button className=\"uk-button uk-button-primary uk-border-pill\" onClick={handleLogout} >\n                    Logout\n                  </button>\n                </NavLink>\n              </li>\n              <div className=\"mobile-only uk-overflow-auto\">\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/home\">Mi Salud</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/antecedentes\">Antecedentes</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/signosvitales\">Signos Vitales</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/consultas\">Consultas</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/recetas\">Recetas</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/laboratorio\">Laboratorio</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/imagenologia\">Rayos X e Imagen</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/urgencias\">Urgencias</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/hospitalizaciones\">Hospitalizaciones</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/padecimientos\">Padecimientos</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/medicamentos\">Medicamentos</NavLink>\n                </li>\n                {/* <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/agenda\">Agenda</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/terapias\">Otras Terapias</NavLink>\n                </li> */}\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/servicios\">Servicios Adicionales</NavLink>\n                </li>\n              </div>\n            </ul>\n            :\n            <ul className=\"menu uk-navbar-nav\">\n              <li className=\"uk-active uk-flex uk-flex-center uk-flex-middle\" onClick={closeMenu} ><Link to=\"/servicios\">Servicios</Link></li>\n              <li className=\"uk-active uk-flex uk-flex-center uk-flex-middle\" onClick={closeMenu} ><Link to=\"/nosotros\">Nosotros</Link></li>\n              <li className=\"uk-active uk-flex uk-flex-center uk-flex-middle\" onClick={closeMenu} >\n                <Link to=\"/login\" className=\"uk-margin-remove uk-padding-remove\">\n                  <button className=\"uk-button uk-button-white uk-border-pill\">\n                    Inicia Sesión\n                  </button>\n                </Link>\n              </li>\n              <li className=\"uk-active uk-flex uk-flex-center uk-flex-middle\" onClick={closeMenu} >\n                <Link to=\"/registro\">\n                  <button className=\"uk-button uk-button-primary uk-border-pill\">\n                    Regístrate\n                  </button>\n                </Link>\n              </li>\n            </ul>\n          }\n\n    </nav>\n    \n  );\n\n};\n\nexport default Navbar;","import React, { useContext } from 'react';                // Import React and useContext hook\nimport { NavLink, Link } from 'react-router-dom';               // Import NavLink for \"navigation\"\n//import { useHistory } from 'react-router-dom';            // Import useHistory for \"redirection\"\nimport { AppContext }  from '../../AppContext';           // Import AppContext to use created context\n\n// Declare Sidebar functional component\nconst Sidebar = () => {\n  \n  // Destructure user and route state variables from context and setRoute function to change route\n  const { user, setRoute } = useContext(AppContext); // Destructure user state variable\n\n  // Declare function to update the route state variable according to the selected link for inner component nav\n  const handleRoute = (event, newRoute) => {\n    \n    event.preventDefault();               // Prevent page reloading after submit action\n    setRoute(newRoute);                   // Update route state variable with route sent as parameter\n  \n  }\n\n  // Destructure push method from useHistory to \"redirect\" user\n  //const { push } = useHistory();\n\n  return (\n     \n    <div className=\"sidebar\">\n      <ul className=\"uk-nav-default uk-nav-parent-icon uk-width-4-5 uk-text-left uk-margin-left uk-margin-large-top\" uk-nav=\"true\">\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/home\">Mi Salud</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/antecedentes\">Antecedentes</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/signosvitales\">Signos Vitales</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/consultas\">Consultas</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/recetas\">Recetas</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/laboratorio\">Laboratorio</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/imagenologia\">Rayos X e Imagen</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/urgencias\">Urgencias</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/hospitalizaciones\">Hospitalizaciones</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/padecimientos\">Resumen Padecimientos</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/medicamentos\">Resumen Medicamentos</NavLink>\n        </li>\n        {/* <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/agenda\">Agenda</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/terapias\">Otras Terapias</NavLink>\n        </li> */}\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/servicios\">Servicios Adicionales</NavLink>\n        </li>\n      </ul>\n    </div>\n        \n  );\n};\n\nexport default Sidebar;","import React, { useContext } from 'react';\nimport Router from './Router';\nimport { AppContext } from './AppContext';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/common/Navbar'\nimport Sidebar from './components/common/Sidebar';\n\nfunction App() {\n\n  const { user } = useContext(AppContext); // Destructure user state variable\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <main>\n        { user._id ? (\n          <div className=\"uk-flex\">\n            <Sidebar />\n            <Router />\n          </div>\n        ) : (\n          <Router />\n        )}\n      </main>\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Import BrowserRouter to allow the user to navigate within the app by setting defined routes. See ./Router.js for more information\nimport { BrowserRouter } from 'react-router-dom';\n\n// Import the Provider which will allow to pass down the state variables and methods to its descendants\nimport AppProvider from './AppContext';\n\n// Import UIkit for styles\nimport UIkit from 'uikit';\nimport Icons from 'uikit/dist/js/uikit-icons';\nimport 'uikit/dist/css/uikit.min.css';\n\nUIkit.use(Icons);   // Execute to allow icon use\n\n// Create a component that: Provides state variables and methods AND router functionality for navigation, to the APP\nconst WithRouterAndProvider = () => (\n  <AppProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AppProvider>\n)\n\nReactDOM.render(<WithRouterAndProvider />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 36;","module.exports = __webpack_public_path__ + \"static/media/blood-pressure.cf3aa91f.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond-icon.7b010418.svg\";","module.exports = __webpack_public_path__ + \"static/media/blood-sugar.cac6f5ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-rate.669e9159.svg\";","module.exports = __webpack_public_path__ + \"static/media/temperature.135f44d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/weight.74bdac82.svg\";","module.exports = __webpack_public_path__ + \"static/media/happy-face.df981ce0.svg\";","module.exports = __webpack_public_path__ + \"static/media/sad-face.18bccf67.svg\";","module.exports = __webpack_public_path__ + \"static/media/add-vitals.77332c1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/blue-icon.233a6f76.svg\";"],"sourceRoot":""}