{"version":3,"sources":["images/health-check.svg","logo.svg","AppContext.js","services/auth-services.js","components/auth/AuthForm.js","hooks/useForm.js","components/auth/Signup.js","components/auth/Login.js","components/profile/Profile.js","services/profile-services.js","services/study-services.js","components/study/StudyForm.js","components/study/StudyInfo.js","components/study/Study.js","services/consultation-services.js","components/consultation/ConsultationForm.js","components/consultation/ConsultationInfo.js","components/consultation/Consultation.js","services/prescription-services.js","components/prescription/PrescriptionForm.js","components/prescription/PrescriptionInfo.js","components/prescription/Prescription.js","services/medhistory-services.js","components/medHistory/MedHistory.js","Router.js","components/common/Navbar.js","components/common/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppContext","createContext","AppProvider","children","initialUserState","JSON","parse","localStorage","getItem","useState","user","setUser","route","setRoute","objectHandler","setObjectHandler","userContext","resetUserContext","Provider","value","base_url","AuthForm","submit","action","email","password","confirm_password","handleChange","className","to","onSubmit","uk-icon","onChange","name","type","useForm","form","setForm","array","setArray","genericName","setGenericName","brandName","setBrandName","dosageForm","setDosageForm","dose","setDose","indications","setIndications","handleInput","event","target","push","prevState","handleFileInput","files","Signup","useContext","useHistory","data","preventDefault","axios","post","then","res","token","setItem","stringify","UIkit","notification","message","pos","status","catch","msg","response","Login","console","log","Profile","isButtonDisabled","setIsButtonDisabled","useEffect","_id","width","height","src","profile_picture","alt","first_name","last_name1","onClick","last_name2","moment","utc","date_of_birth","format","curp","gender","formData","FormData","key","append","patch","headers","Authorization","editProfile","error","htmlFor","placeholder","disabled","StudyForm","handleSubmit","drugQuantity","uk-form-custom","multiple","tabIndex","StudyInfo","study","date","locale","doctor","study_name","facility_name","uk-lightbox","href","image","data-alt","Study","setStudy","studies","setStudies","get","getStudies","map","index","loadStudy","createStudy","ConsultationForm","step","ConsultationInfo","consultation","chief_complaint","systems_chief_complaint","diagnosis","temperature","blood_pressure_sys","blood_pressure_dias","heart_rate","glucose","weight","Consultation","setConsultation","consultations","setConsultations","getConsultations","toggleButton","goToPrescription","newRoute","goToStudies","loadConsultation","uk-toggle","id","uk-modal","uk-close","prescription","createConsultation","PrescriptionForm","drugFields","setDrugFields","setDrugQuantity","drugField","pop","deleteDrugField","addDrugField","PrescriptionInfo","generic_name","drug","brand_name","dosage_form","directions","Prescription","setPrescription","prescriptions","setPrescriptions","getPrescriptions","loadPrescription","createPrescription","MedHistory","medHistory","setMedHistory","getMedicalHistory","medicalHistory","userID","editMedicalHistory","createMedicalHistory","family_history","disease","health_history","weekly_exercise_hours","addictions","addiction","allergies","allergy","defaultChecked","Router","path","Navbar","handleRoute","closeMenu","toggle","document","getElementById","checked","logo","clear","Sidebar","uk-nav","App","Boolean","window","location","hostname","match","use","Icons","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f6f88cc1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/health-check.b6b6dbc0.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { createContext, useState } from 'react';   // Import React and 2 hooks for context-creation and state-manipulation\n\n// Create context object, and export it so children components can use it through the useContext hook\nexport const AppContext = createContext();\n\n// Create Provider component \nconst AppProvider = ({ children }) => {\n\n  // Obtain user data from the localStorage, or set it as an empty object in case there is no user stored\n  const initialUserState = JSON.parse( localStorage.getItem('user') ) || {};\n\n  // Declare user state variable and setUser function to update the user state variable\n  const [ user, setUser ] = useState(initialUserState);\n  const [ route, setRoute ] = useState(\"none\");\n  const [ objectHandler, setObjectHandler ] = useState({});\n  \n  // Declare resetUserContext function that will allow us to reset the user context\n  const resetUserContext = () => {\n\n    setUser({});    // Sets user context to an empty object \n    setRoute(\"none\");\n    setObjectHandler({});\n\n  };\n\n  // Create the context objects to be passed as props in the Provider, with our created state and functions\n  const userContext = { user, setUser, route, setRoute, objectHandler, setObjectHandler, resetUserContext };\n\n  // Return a context Provider component, sending the userContext as value prop\n  return (\n    <AppContext.Provider value={ userContext }>\n      { children }\n    </AppContext.Provider>\n  );\n\n};\n\nexport default AppProvider;","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://nubiomed-iron.herokuapp.com/api' : 'http://localhost:3000/api';\n\n// Export signup function, which receives data as parameters to enable signup\nexport const signup = (data) => {\n  \n  // Return a call to our /signup route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/signup`, data);\n\n};\n\n// Export login function, which receives data as parameters to enable login\nexport const login = (data) => {\n\n  // Return a call to our /login route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/login`, data);\n\n};\n\n// Export logout function, which \"erases\" the token from the localStorage, and without a token any user\n// that is not logged in will not be able to access the routes that require authentication/token\nexport const logout = () => {\n\n  localStorage.clear();\n\n};","import React from 'react';                        // Import React\nimport { NavLink } from 'react-router-dom';       // Import NavLink for \"navigation\"\n\n// Declare AuthForm functional component, receives action variable for conditional rendering,\n// email, password and confirm_password variables from form state variable, and submit and handleChange functions\nconst AuthForm = ( { submit, action, email = '', password = '', confirm_password = '', handleChange } ) => (\n\n\n  <div>\n  \n    <div className=\"uk-margin-bottom\">\n\n      <h2>{action === \"signup\" ? \"Registro\" : \"Inicia Sesión\"}</h2>\n  \n      { action === \"signup\" ? (\n        <h5>¿Ya tienes cuenta? \n          <NavLink to=\"/login\" className=\"uk-margin-small-left\">\n            Accede aquí\n          </NavLink>\n        </h5>\n        ) : (\n        <h5>¿Primera vez? \n          <NavLink to=\"/signup\" className=\"uk-margin-small-left\">\n            Regístrate aquí\n          </NavLink>\n        </h5>\n        )\n      }\n\n    </div>\n\n    <div>\n\n      <form className=\"uk-form-stacked\" onSubmit={submit}>\n        \n        <div className=\"uk-margin\">\n          <label className=\"uk-form-label\">Correo Electrónico:</label>\n          <div className=\"uk-inline\">\n            <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n            <input onChange={handleChange} name=\"email\" value={email} className=\"uk-input\" type=\"email\" />\n          </div>\n          <label className=\"uk-form-label\">Contraseña:</label>\n          <div className=\"uk-inline\">\n            <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n            <input\n              onChange={handleChange}\n              name=\"password\"\n              value={password}\n              className=\"uk-input\"\n              type=\"password\"\n            />\n          </div>\n          { action === \"signup\" ? (\n          <div>\n            <label className=\"uk-form-label\">Confirma tu contraseña:</label>\n            <div className=\"uk-inline\">\n              <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n              <input\n                onChange={handleChange}\n                name=\"confirm_password\"\n                value={confirm_password}\n                className=\"uk-input\"\n                type=\"password\"\n              />\n            </div>\n          </div>\n          ) : null }\n        </div>\n\n        \n\n        <button className=\"uk-button uk-button-primary uk-border-pill uk-margin\" type=\"submit\">\n          {action === \"signup\" ? \"Registrar\" : \"Entrar\"}\n        </button>\n\n      </form>\n\n    </div>\n  </div>\n);\n\nexport default AuthForm;","import { useState } from 'react';   // Import useState hook to create custom hook\n\n// Declare hook as a React functional component\nconst useForm = () => {\n  \n  // Declare form state variable and setForm function to update the form state variable\n  const [ form, setForm ] = useState({});\n  const [ array, setArray ] = useState([]);\n  const [ genericName, setGenericName ] = useState([]);\n  const [ brandName, setBrandName ] = useState([]);\n  const [ dosageForm, setDosageForm ] = useState([]);\n  const [ dose, setDose ] = useState([]);\n  const [ indications, setIndications ] = useState([]);\n\n  // Declare handleInput function for input data manipulation\n  const handleInput = (event) => {\n    \n    // Destructure input name and value (data that is being changed by user)\n    const { name, value } = event.target;\n\n    // When using checkboxes, store the values in an array\n    if ( event.target.type === 'checkbox' ) {\n      \n      array.push(value);\n      setArray(array);\n      setForm( prevState => ({...prevState, [name]: array}) );\n\n    } \n    if ( event.target.name === 'generic_name' || event.target.name === 'brand_name' || event.target.name === 'dosage_form' || event.target.name === 'dose' || event.target.name === 'indications' ) {\n\n      switch (event.target.name) {\n        case 'generic_name':\n          genericName.push(value);\n          setGenericName(genericName);\n          setForm( prevState => ({...prevState, [name]: genericName}) );\n          break;\n        case 'brand_name':\n          brandName.push(value);\n          setBrandName(brandName);\n          setForm( prevState => ({...prevState, [name]: brandName}) );\n          break;\n        case 'dosage_form':\n          dosageForm.push(value);\n          setDosageForm(dosageForm);\n          setForm( prevState => ({...prevState, [name]: dosageForm}) );\n          break;\n        case 'dose':\n          dose.push(value);\n          setDose(dose);\n          setForm( prevState => ({...prevState, [name]: dose}) );\n          break;\n        case 'indications':\n          indications.push(value);\n          setIndications(indications);\n          setForm( prevState => ({...prevState, [name]: indications}) );\n          break;\n      }\n\n    } else {\n\n      // Update the form state without erasing previos values (with prevState)\n      setForm( prevState => ({...prevState, [name]: value}) );\n\n    }\n\n  };\n\n  // Declare handleInputFile function for files manipulation\n  const handleFileInput = (event) => {\n\n    // Destructure input name and files (data that is being changed by user)\n    const { name, files } = event.target;\n\n    // Update the form state without erasing previos values (with prevState)\n    setForm( prevState => ({...prevState, [name]: files}) );\n\n  };\n\n  // Return the form state variable and input handling functions\n  return { form, setForm, handleInput, handleFileInput };\n\n};\n\nexport default useForm;","import React, { useContext } from 'react';                // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';            // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';            // Import AppContext to use created context\nimport { signup } from '../../services/auth-services';    // Import signup service for API call\nimport AuthForm from './AuthForm';                        // Import AuthForm react component\nimport useForm from '../../hooks/useForm';                // Import useForm custom hook\nimport UIkit from 'uikit';                                // Import UIkit for notifications\n\n// Declare Signup functional component\nconst Signup = () => {\n\n  const { form, handleInput } = useForm();      // Destructure form state variable and handleInput function\n  const { setUser } = useContext(AppContext);   // Destructure setUser function for user state manipulation\n  const { push } = useHistory();                // Destructure push method from useHistory to \"redirect\" user\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();                     // Prevent page reloading after submit action\n    \n    // Call signup service with form state variable as parameter, which includes form data for e-mail and password\n    signup(form)\n    .then( res => {\n      \n      const { user, token } = res.data;         // Destructure user and token from response, sent by API\n      \n      // Store user and token in localStorage\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', token);\n\n      setUser(user);    // Modify user state variable, setting the user data in the state\n      push('/home');    // \"Redirect\" user to home\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='check'></span> We sent you an e-mail, please verify it to complete the account creation`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n    })\n    .catch( res => {\n\n      const { msg } = res.response.data;\n      \n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${msg}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n    });\n    \n  };\n\n  return (\n    <div className=\"uk-section\">\n      <div className=\"uk-container uk-flex uk-flex-center\">\n        <AuthForm\n          submit={handleSubmit}\n          action=\"signup\"\n          handleChange={handleInput}\n          {...form}\n        />\n      </div>\n    </div>\n  );\n\n};\n\nexport default Signup;","import React, { useContext } from 'react';              // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';          // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';          // Import AppContext to use created context\nimport { login } from '../../services/auth-services';   // Import login service for API call\nimport AuthForm from './AuthForm';                      // Import AuthForm react component\nimport useForm from '../../hooks/useForm';              // Import useForm custom hook\nimport UIkit from 'uikit';                              // Import UIkit for notifications\n\n// Declare Login functional component\nconst Login = () => {\n\n  const { form, handleInput } = useForm();                // Destructure form state variable and handleInput function\n  const { setUser, setRoute } = useContext(AppContext);   // Destructure setUser function for user state manipulation\n  const { push } = useHistory();                          // Destructure push method from useHistory to \"redirect\" user\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();                     // Prevent page reloading after submit action\n    \n    // Call signup service with form state variable as parameter, which includes form data for e-mail and password\n    login(form)\n    .then( res => {\n      \n      const { user, token } = res.data;         // Destructure user and token from response, sent by API\n      \n      // Store user and token in localStorage\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', token);\n      console.log(user)\n\n      setUser(user);    // Modify user state variable, setting the user data in the state\n      setRoute('');\n      push('/home');    // \"Redirect\" user to home\n\n    })\n    .catch( res => {\n\n      const { msg } = res.response.data;\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${msg}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n    });\n    \n  };\n\n  return (\n    <div className=\"uk-section\">\n      <div className=\"uk-container uk-flex uk-flex-center\">\n        <AuthForm\n          submit={handleSubmit}\n          action=\"login\"\n          handleChange={handleInput}\n          {...form}\n        />\n      </div>\n    </div>\n  );\n\n};\n\nexport default Login;","import React, { useEffect, useContext, useState } from 'react';           // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';                  // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                  // Import AppContext to use created context\nimport { editProfile } from '../../services/profile-services';  // Import edit API call\nimport useForm from '../../hooks/useForm';                      // Import useForm custom hook\nimport UIkit from 'uikit';                                      // Import UIkit for notifications\nimport moment from 'moment';                                    // Import momentjs for date formatting\n\nconst Profile = () => {\n\n  const { form, handleInput, handleFileInput } = useForm();\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  \n  const { user, setUser, route, setRoute } = useContext(AppContext); // Destructure user state variable\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n\n  // Hook to update component when user state variable is modified\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n  }, [user] );\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true);\n\n    const formData = new FormData();      // Declare formData as new instance of FormData class\n    const { profile_picture } = form;     // Destructure profile_picture from form\n\n    // Iterate through every key in form object and append name:value to formData\n    for (let key in form) {\n\n      // If profile_picture, append as first item in array (currently 1 file allowed, index 0)\n      if ( key === 'profile_picture' ) formData.append(key, profile_picture[0]);\n\n      else formData.append(key, form[key]);\n      \n    }\n    \n    // Call edit service with formData as parameter, which includes form data for user profile information\n    editProfile(formData)\n    .then( res => {\n\n      const { user } = res.data   // Destructure updated user document from response\n      \n      setUser(user);              // Modify user state variable with updated information\n      setRoute('none');\n      setIsButtonDisabled(false);\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡Tu perfil fue actualizado exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n    })\n    .catch( error => {\n\n      console.log(error);\n      setIsButtonDisabled(false);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n    });\n    \n  };\n\n  return (\n    <div className=\"uk-section\">\n      <div className=\"uk-width-auto\">\n        <img className=\"uk-border-circle\" width={128} height={128} src={user.profile_picture} alt=\"User profile\" />\n      </div>\n      <h2>{user.first_name} {user.last_name1}</h2>\n      { route !== 'edit' ? (\n          <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('edit')} >\n            Editar mi perfil\n          </button>\n        ) : (\n          <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('none')} >\n            Regresar\n          </button>\n        )}\n      \n      <div className=\"uk-container uk-margin\">\n        { route !== 'edit' ? (\n          <div className=\"uk-text-left\">\n            <p>Nombre completo: {user.first_name} {user.last_name1} {user.last_name2}</p>\n            <p>Email: {user.email}</p>\n            <p>Fecha de nacimiento: {moment.utc(user.date_of_birth).format('LL')}</p>\n            <p>CURP: {user.curp ? user.curp : 'Información no registrada'}</p>\n            <p>Género: {user.gender === 'N' ? 'No definido' : user.gender === 'F' ? 'Femenino' : 'Masculino'}</p>\n          </div>\n        ) : (\n          <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n            <div className=\"uk-margin\">\n              <label className=\"uk-form-label\" htmlFor=\"date\">Nombres:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"first_name\" onChange={handleInput} placeholder={user.first_name} />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Apellido paterno:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"last_name1\" onChange={handleInput} placeholder={user.last_name1} />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Apellido materno:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"last_name2\" onChange={handleInput} placeholder={user.last_name2} />\n              </div>\n              <label className=\"uk-form-label\">Fecha de nacimiento: {moment.utc(user.date_of_birth).format('LL')}</label>\n              <div className=\"uk-inline\">\n                <input onChange={handleInput} name=\"date_of_birth\" className=\"uk-input\" type=\"date\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Género</label>\n              <div className=\"uk-margin uk-flex uk-flex-around\">\n                <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"F\" />Mujer</label>\n                <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"M\" />Hombre</label>\n                <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"N\" />No binario</label>\n              </div>\n              <label className=\"uk-form-label\">Correo electrónico:</label>\n              <div className=\"uk-form-controls\">\n                <input onChange={handleInput} name=\"email\" className=\"uk-input\" type=\"email\" placeholder={user.email} />\n              </div>\n              <label className=\"uk-form-label\">CURP:</label>\n              <div className=\"uk-form-controls\">\n                <input onChange={handleInput} name=\"curp\" className=\"uk-input\" type=\"text\" placeholder={user.curp} />\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n              <button type=\"submit\" className=\"uk-button uk-button-primary uk-button-small uk-border-pill\" disabled={isButtonDisabled} >\n                Editar perfil\n              </button>\n            </div>\n          </form>\n        )}\n        \n      </div>\n      \n      \n    </div>\n  )\n\n}\n\nexport default Profile","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://nubiomed-iron.herokuapp.com/api' : 'http://localhost:3000/api';\n\n// Export edit function, which receives data as parameters to enable profile edition\nexport const editProfile = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /edit route, while sending the parameters obtained from the form/front-end\n  return axios.patch(`${base_url}/profile/edit`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n      \"Content-Type\": \"multipart/form-data\"     // Set content as multipart/form-data for files and text\n    }\n  });\n\n};","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://nubiomed-iron.herokuapp.com/api/studies' : 'http://localhost:3000/api/studies';\n\n// Export get function to retrieve all prescriptions of the current logged in user\nexport const getStudies = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable prescription creation\nexport const createStudy = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getStudy = (studyID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${studyID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editStudy = (studyID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${studyID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useState } from 'react';\n\nconst StudyForm = ({ handleSubmit, handleInput, handleFileInput, form, isButtonDisabled, objectHandler }) => {\n\n  const [ drugFields, setDrugFields ] = useState([]);\n  const [ drugQuantity, setDrugQuantity] = useState(0);\n\n  useEffect( () => {\n\n  }, [drugQuantity])\n  \n  const addDrugField = (event) => {\n\n    event.preventDefault();\n    drugFields.push(1)\n\n    setDrugFields(drugFields);\n    setDrugQuantity(drugQuantity+1)\n\n    return null;\n\n  }\n\n  const deleteDrugField = (event) => {\n\n    event.preventDefault();\n    drugFields.pop()\n\n    setDrugFields(drugFields);\n    setDrugQuantity(drugQuantity-1)\n\n    return null;\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <h4>Datos del Estudio</h4>\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de estudio:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"date\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"doctor\">Doctor que solicitó:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"doctor\" onChange={handleInput} placeholder=\"Nombre del doctor...\" />\n        </div>\n        \n        <div className=\"uk-margin\">\n          <h4>Estudio</h4>\n          <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre de Estudio:</label>\n          <div className=\"uk-form-controls\">\n            <input className=\"uk-input\" type=\"text\" name=\"study_name\" onChange={handleInput} placeholder=\"Nombre del estudio...\" />\n          </div>\n          <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre de Laboratorio:</label>\n          <div className=\"uk-form-controls\">\n            <input className=\"uk-input\" type=\"text\" name=\"facility_name\" onChange={handleInput} placeholder=\"Dónde se realizó los estudios\" />\n          </div>\n          <div className=\"uk-flex uk-flex-middle uk-flex-around uk-margin\">\n            <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Imagen del Estudio:</label>\n            <div className=\"js-upload uk\" uk-form-custom=\"true\">\n              <input onChange={handleFileInput} name=\"image\" type=\"file\" multiple />\n              <button className=\"uk-button uk-button-default\" type=\"button\" tabIndex=\"-1\">Seleccionar</button>\n            </div>\n          </div>\n        </div>\n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-button-small uk-border-pill\" disabled={isButtonDisabled} >\n          Crear Estudio\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default StudyForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst StudyInfo = ({ study }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de Estudio: {moment(study.date).locale('es').format('LL')}</p>\n        <p>Doctor: {study.doctor}</p>\n        <div className=\"uk-margin\" key=\"index\">\n          <p>Nombre del Estudio : {study.study_name}</p>\n          <p>Nombre de Laboratorio : {study.facility_name}</p>\n        </div>\n        <div uk-lightbox=\"true\">\n          <a className=\"uk-button uk-button-default\" href={study.image} data-alt=\"Image\">Ver Imagen</a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default StudyInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport { getStudies, createStudy, getStudy, editStudy } from '../../services/study-services';\nimport StudyForm from './StudyForm';\nimport StudyInfo from './StudyInfo';\n\nconst Study = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput, handleFileInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ study, setStudy] = useState({});\n  const [ studies, setStudies ] = useState([]);\n  const [ showForm, setShowForm ] = useState(false);\n  const [ showConsultation, setShowConsultation ] = useState(false);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    if ( route !== 'create' && route !== 'read' ) {\n      getStudies()\n      .then( res => {\n      \n        const { studies } = res.data;\n        setStudies(studies);\n        setRoute('studies');\n\n      });\n    }\n\n    \n    \n  }, [route]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true)\n\n    const formData = new FormData();      // Declare formData as new instance of FormData class\n    const { image } = form;     // Destructure profile_picture from form\n\n    // Iterate through every key in form object and append name:value to formData\n    for (let key in form) {\n\n      // If profile_picture, append as first item in array (currently 1 file allowed, index 0)\n      if ( key === 'image' ) formData.append(key, image[0]);\n\n      else formData.append(key, form[key]);\n      \n    }\n    \n    // Call edit service with formData as parameter, which includes form data for user profile information\n    createStudy(formData)\n    .then( res => {\n\n      const { study } = res.data   // Destructure updated user document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡Tu estudio fue creado exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('studies');\n      setIsButtonDisabled(false);\n      setObjectHandler({});\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n      setIsButtonDisabled(false)\n\n    });\n    \n  };\n\n  const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadStudy = (study) => {\n    setStudy(study);\n    setRoute('read');\n  }\n\n  return (\n\n    <div className=\"content\">\n      \n        { route === 'studies' ? (\n          <div className=\"uk-section\">\n            <h2>Estudios</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nuevo Estudio\n            </button>\n            <div className=\"uk-overflow-auto\">\n              <table className=\"uk-table uk-table-striped uk-table-hover\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center uk-visible\">Estudio</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { studies ? \n                      studies.map( (study, index) => \n                        <tr key={index}>\n                          <td className=\"uk-text-center\">{moment(study.date).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center uk-visible\">{study.study_name}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadStudy({study})} >\n                              Ver\n                            </button>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nuevo Estudio</h2>\n                  { objectHandler._id ?\n                      <h4>{objectHandler._id}</h4>\n                      : null\n                  }\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('studies')} >\n                    Regresar\n                  </button>\n                  <StudyForm handleSubmit={handleSubmit} handleInput={handleInput} handleFileInput={handleFileInput} form={form} isButtonDisabled={isButtonDisabled} objectHandler={objectHandler}/>\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Estudio</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('studies')} >\n                    Regresar\n                  </button>\n                  <StudyInfo {...study} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('studies')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n    \n  )\n}\n\nexport default Study","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://nubiomed-iron.herokuapp.com/api/consultations' : 'http://localhost:3000/api/consultations';\n\n// Export get function to retrieve all consultations of the current logged in user\nexport const getConsultations = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable consultation creation\nexport const createConsultation = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getConsultation = (consultationID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${consultationID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editConsultation = (consultationID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${consultationID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React from 'react';\n\nconst ConsultationForm = ({ handleSubmit, handleInput, form, isButtonDisabled }) => {\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de consulta</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"date\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Doctor que atendió:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"doctor\" onChange={handleInput} placeholder=\"Nombre del doctor...\" />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Motivo de consulta</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"chief_complaint\" onChange={handleInput} placeholder=\"Dolor, fiebre, etc...\" />\n        </div>\n        <label className=\"uk-form-label\">Sistema afectado:</label>\n        <div className=\"uk-form-controls\" >\n          <select className=\"uk-select uk-form-width-large\" name=\"systems_chief_complaint\" onChange={handleInput} >\n            <option value=\"Otros\">Otros</option>\n            <option value=\"Cardiovascular\">Cardiovascular</option>\n            <option value=\"Dermatológico\">Dermatológico</option>\n            <option value=\"Dolor\">Dolor</option>\n            <option value=\"Endócrino\">Endócrino</option>\n            <option value=\"Gastrointestinal\">Gastrointestinal</option>\n            <option value=\"Génito-Urinario\">Génito-Urinario</option>\n            <option value=\"Músculo-esquelético\">Músculo-esquelético</option>\n            <option value=\"Órganos de los Sentidos\">Órganos de los Sentidos</option>\n            <option value=\"Psiquiátrico\">Psiquiátrico</option>\n            <option value=\"Respiratorio\">Respiratorio</option>\n            <option value=\"Sistema Hemato-Linfático\">Sistema Hemato-Linfático</option>\n            <option value=\"Sistema Inmunológico\">Sistema Inmunológico</option>\n            <option value=\"Sistema Nervioso\">Sistema Nervioso</option>\n            <option value=\"Síntomas Generales\">Síntomas Generales</option>\n          </select>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Diagnóstico</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"diagnosis\" onChange={handleInput} placeholder=\"Introduce para buscar...\" />\n        </div>\n        <div className=\"uk-width-1-1 uk-flex\">\n          <div className=\"uk-width-1-2\">\n            <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Temperatura</label>\n            <div className=\"uk-form-controls\">\n              <input className=\"uk-input uk-width-4-5\" type=\"number\" step=\".1\" name=\"temperature\" onChange={handleInput} />\n            </div>\n            <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Presión Sistólica</label>\n            <div className=\"uk-form-controls\">\n              <input className=\"uk-input uk-width-4-5\" type=\"number\" name=\"blood_pressure_sys\" onChange={handleInput} />\n            </div>\n            <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Glucosa</label>\n            <div className=\"uk-form-controls\">\n              <input className=\"uk-input uk-width-4-5\" type=\"number\" name=\"blood_sugar\" onChange={handleInput} />\n            </div>\n            \n          </div>\n          <div className=\"uk-width-1-2\">\n            <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Frecuencia Cardiaca</label>\n            <div className=\"uk-form-controls\">\n              <input className=\"uk-input uk-width-4-5\" type=\"number\" name=\"heart_rate\" onChange={handleInput} />\n            </div>\n            <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Presión Diastólica</label>\n            <div className=\"uk-form-controls\">\n              <input className=\"uk-input uk-width-4-5\" type=\"number\" name=\"blood_pressure_dias\" onChange={handleInput} />\n            </div>\n            \n            <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Peso</label>\n            <div className=\"uk-form-controls\">\n              <input className=\"uk-input uk-width-4-5\" type=\"number\" step=\".001\" name=\"weight\" onChange={handleInput} />\n            </div>\n            \n          </div>\n        </div>\n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-button-small uk-border-pill\" disabled={isButtonDisabled} >\n          Crear consulta\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default ConsultationForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst ConsultationInfo = ({ consultation }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de consulta: {moment(consultation.date).locale('es').format('LL')}</p>\n        <p>Doctor: {consultation.doctor}</p>\n        <p>Motivo de consulta: {consultation.chief_complaint}</p>\n        <p>Sistema afectado: {consultation.systems_chief_complaint[0]}</p>\n        <p>Diagnóstico: {consultation.diagnosis}</p>\n        <p>Temperatura: {consultation.temperature}</p>\n        <p>Presión Arterial: {consultation.blood_pressure_sys} / {consultation.blood_pressure_dias}</p>\n        <p>Frecuencia Cardiaca: {consultation.heart_rate}</p>\n        <p>Nivel de Glucosa: {consultation.glucose}</p>\n        <p>Peso: {consultation.weight}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ConsultationInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport { getConsultations, createConsultation } from '../../services/consultation-services';\nimport ConsultationForm from './ConsultationForm';\nimport ConsultationInfo from './ConsultationInfo';\n\nconst Consultation = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [consultation, setConsultation] = useState({});\n  const [ consultations, setConsultations ] = useState([]);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getConsultations()\n    .then( res => {\n      \n      const { consultations } = res.data;\n      setConsultations(consultations);\n      setRoute('consultations');\n      console.log(consultations)\n\n    })\n    \n  }, [isButtonDisabled]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();\n    console.log(form);\n    toggleButton();\n\n    createConsultation(form)\n    .then( res => {\n\n      const { consultation } = res.data    // Destructure updated preferences document from response\n      console.log(consultation)\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡La consulta fue creada exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('consultations');\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n      \n      toggleButton();\n\n    });\n\n  }\n\n  const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadConsultation = (consultation) => {\n    setConsultation(consultation);\n    setRoute('read');\n  }\n\n  const goToPrescription = (event, consultation, newRoute) => {\n    event.preventDefault();\n    setConsultation(consultation);\n    setObjectHandler(consultation);\n    setRoute(newRoute);\n    console.log(objectHandler)\n  }\n\n  const goToStudies = (event, consultation, newRoute) => {\n    event.preventDefault();\n    setObjectHandler(consultation);\n    setRoute(newRoute);\n    console.log(objectHandler);\n  }\n\n  return (\n\n    <div className=\"content\">\n      \n        { route === 'consultations' ? (\n          <div className=\"uk-section\">\n            <h2>Consultas</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('create')} >\n              + Nueva Consulta\n            </button>\n            <div className=\"uk-overflow-auto\">\n              <table className=\"uk-table uk-table-striped uk-table-hover\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center uk-visible@s\">Motivo de consulta</th>\n                    <th className=\"uk-text-center uk-visible@s\">Diagnostico</th>\n                    <th className=\"uk-text-center uk-visible@s\">Doctor</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { consultations ? \n                      consultations.map( (consultation, index) => \n                        <tr key={index} >\n                          <td className=\"uk-text-center\">{moment(consultation.date).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{consultation.chief_complaint}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{consultation.diagnosis}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{`Dr. ${consultation.doctor}`}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadConsultation({consultation})} >\n                              Ver Consulta\n                            </button>\n                          </td>\n                          <td>\n                            <a href={`#modal-sections-${index}`} uk-toggle={`target: #modal-sections-${index}`}>\n                              <span className=\"uk-margin-small-right\" uk-icon=\"more-vertical\"></span>\n                            </a>\n                            <div id={`modal-sections-${index}`} className=\"uk-flex-top\" uk-modal=\"true\">\n                              <div className=\"uk-modal-dialog uk-margin-auto-vertical\">\n                                <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\" />\n                                <div className=\"uk-modal-header\">\n                                  <h3 className=\"uk-text-center\">Datos de la Consulta</h3>\n                                  <p>Fecha: {moment(consultation.date).locale('es').format('LL')}</p>\n                                  <p>Doctor: {consultation.doctor}</p>\n                                </div>\n                                <div className=\"uk-modal-body uk-flex uk-flex-column\">\n                                  { consultation.prescription ? (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToPrescription(event, consultation, 'read')} >\n                                        <NavLink to=\"/recetas\">Ver Receta</NavLink>\n                                      </button>\n                                    ) : (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToPrescription(event, consultation, 'create')} >\n                                        <NavLink to=\"/recetas\">Agregar Receta</NavLink>\n                                      </button>\n                                    )\n                                  }\n                                  { consultation.studies ? (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToStudies(event, consultation, 'read')} >\n                                        <NavLink to=\"/estudios\">Ver Estudios</NavLink>\n                                      </button>\n                                    ) : (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToStudies(event, consultation, 'create')} >\n                                        <NavLink to=\"/estudios\">Agregar Estudios</NavLink>\n                                      </button>\n                                    )\n                                  }\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nueva Consulta</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('consultations')} >\n                    Regresar\n                  </button>\n                  <ConsultationForm handleSubmit={handleSubmit} handleInput={handleInput} form={form} isButtonDisabled={isButtonDisabled} />\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Consulta</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('consultations')} >\n                    Regresar\n                  </button>\n                  <ConsultationInfo {...consultation} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('consultations')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n    \n  )\n}\n\nexport default Consultation","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://nubiomed-iron.herokuapp.com/api/prescriptions' : 'http://localhost:3000/api/prescriptions';\n\n// Export get function to retrieve all prescriptions of the current logged in user\nexport const getPrescriptions = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable prescription creation\nexport const createPrescription = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getPrescription = (prescriptionID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${prescriptionID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editPrescription = (prescriptionID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${prescriptionID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useState } from 'react';\n\nconst PrescriptionForm = ({ handleSubmit, handleInput, handleFileInput, form, isButtonDisabled, objectHandler }) => {\n\n  const [ drugFields, setDrugFields ] = useState([]);\n  const [ drugQuantity, setDrugQuantity] = useState(0);\n\n  useEffect( () => {\n\n  }, [drugQuantity])\n  \n  const addDrugField = (event) => {\n\n    event.preventDefault();\n    drugFields.push(1)\n\n    setDrugFields(drugFields);\n    setDrugQuantity(drugQuantity+1)\n\n    return null;\n\n  }\n\n  const deleteDrugField = (event) => {\n\n    event.preventDefault();\n    drugFields.pop()\n\n    setDrugFields(drugFields);\n    setDrugQuantity(drugQuantity-1)\n\n    return null;\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <h4>Datos de la Receta</h4>\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de receta:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"date\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"doctor\">Doctor que atendió:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"doctor\" onChange={handleInput} placeholder=\"Nombre del doctor...\" />\n        </div>\n        <div className=\"uk-flex uk-flex-middle uk-flex-around uk-margin\">\n          <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Imagen de la receta:</label>\n          <div className=\"js-upload uk\" uk-form-custom=\"true\">\n            <input onChange={handleFileInput} name=\"image\" type=\"file\" multiple />\n            <button className=\"uk-button uk-button-default\" type=\"button\" tabIndex=\"-1\">Seleccionar</button>\n          </div>\n        </div>\n        \n        <div id=\"drugs\" className=\"uk-margin\">\n          { drugFields.map( (drugField, index) => \n            <div className=\"uk-margin\" key={index}>\n              <h4>Medicamento {index+1} <span className=\"uk-margin-left\" uk-icon=\"minus-circle\" onClick={event => deleteDrugField(event)}></span></h4>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre Genérico:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"brand_name\" onChange={handleInput} placeholder=\"Nombre genérico del medicamento\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre Comercial:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"generic_name\" onChange={handleInput} placeholder=\"Nombre comercial del medicamento\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Presentación:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"dosage_form\" onChange={handleInput} placeholder=\"Tabletas, jarabe, etc...\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Dosis:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"dose\" onChange={handleInput} placeholder=\"500 mg, 10 ml, etc...\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Indicaciones:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"directions\" onChange={handleInput} placeholder=\"1 tableta c/8 horas, 1 inyección diaria, etc...\" />\n              </div>\n            </div> ) }\n        </div>\n        <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin\">\n          <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => addDrugField(event)} >\n            + Medicamento\n          </button>\n        </div>\n        \n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-button-small uk-border-pill\" disabled={isButtonDisabled} >\n          Crear receta\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default PrescriptionForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst PrescriptionInfo = ({ prescription }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de receta: {moment(prescription.date).locale('es').format('LL')}</p>\n        <p>Doctor: {prescription.doctor}</p>\n        { prescription.generic_name.map( (drug, index) =>\n            <div className=\"uk-margin\" key=\"index\">\n              <p>Nombre Genérico : {prescription.generic_name}</p>\n              <p>Nombre Comercial : {prescription.brand_name}</p>\n              <p>Presentación : {prescription.dosage_form}</p>\n              <p>Dosis : {prescription.dose}</p>\n              <p>Indicaciones : {prescription.directions}</p>\n            </div>\n          )\n        }\n        <div uk-lightbox=\"true\">\n          <a className=\"uk-button uk-button-default\" href={prescription.image} data-alt=\"Image\">Ver Imagen</a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PrescriptionInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport { getPrescriptions, createPrescription, getPrescription, editPrescription } from '../../services/prescription-services';\nimport PrescriptionForm from './PrescriptionForm';\nimport PrescriptionInfo from './PrescriptionInfo';\n\nconst Prescription = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput, handleFileInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ prescription, setPrescription] = useState({});\n  const [ prescriptions, setPrescriptions ] = useState([]);\n  const [ showForm, setShowForm ] = useState(false);\n  const [ showConsultation, setShowConsultation ] = useState(false);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    if ( route !== 'create' && route !== 'read' ) {\n      console.log(route)\n      getPrescriptions()\n      .then( res => {\n      \n        const { prescriptions } = res.data;\n        setPrescriptions(prescriptions);\n        setRoute('prescriptions');\n\n      });\n    }\n\n    \n    \n  }, [route]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true)\n\n    const formData = new FormData();      // Declare formData as new instance of FormData class\n    const { image } = form;     // Destructure profile_picture from form\n\n    console.log(form)\n\n    // Iterate through every key in form object and append name:value to formData\n    for (let key in form) {\n\n      // If profile_picture, append as first item in array (currently 1 file allowed, index 0)\n      if ( key === 'image' ) formData.append(key, image[0]);\n\n      else formData.append(key, form[key]);\n      \n    }\n    \n    // Call edit service with formData as parameter, which includes form data for user profile information\n    createPrescription(formData)\n    .then( res => {\n\n      const { prescription } = res.data   // Destructure updated user document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡Tu perfil fue actualizado exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('prescriptions');\n      setIsButtonDisabled(false);\n      setObjectHandler({});\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n      setIsButtonDisabled(false)\n\n    });\n    \n  };\n\n  const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadPrescription = (prescription) => {\n    setPrescription(prescription);\n    setRoute('read');\n  }\n\n  return (\n\n    <div className=\"content\">\n      \n        { route === 'prescriptions' ? (\n          <div className=\"uk-section\">\n            <h2>Recetas</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nueva Receta\n            </button>\n            <div className=\"uk-overflow-auto\">\n              <table className=\"uk-table uk-table-striped uk-table-hover\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center uk-visible\">Doctor</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { prescriptions ? \n                      prescriptions.map( (prescription, index) => \n                        <tr key={index}>\n                          <td className=\"uk-text-center\">{moment(prescription.date).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center uk-visible\">{`Dr. ${prescription.doctor}`}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadPrescription({prescription})} >\n                              Ver\n                            </button>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nueva Receta</h2>\n                  { objectHandler._id ?\n                      <h4>{objectHandler._id}</h4>\n                      : null\n                  }\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('prescriptions')} >\n                    Regresar\n                  </button>\n                  <PrescriptionForm handleSubmit={handleSubmit} handleInput={handleInput} handleFileInput={handleFileInput} form={form} isButtonDisabled={isButtonDisabled} objectHandler={objectHandler}/>\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Receta</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('prescriptions')} >\n                    Regresar\n                  </button>\n                  <PrescriptionInfo {...prescription} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('prescriptions')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n    \n  )\n}\n\nexport default Prescription","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://nubiomed-iron.herokuapp.com/api/medicalhistory' : 'http://localhost:3000/api/medicalhistory';\n\n// Export get function to retrieve all emergencies of the current logged in user\nexport const getMedicalHistories = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable MedicalHistory creation\nexport const createMedicalHistory = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getMedicalHistory = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editMedicalHistory = (userID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${userID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useContext, useState } from 'react';           // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';                  // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                  // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                      // Import useForm custom hook\nimport UIkit from 'uikit';                                      // Import UIkit for notifications\nimport moment from 'moment';                                    // Import momentjs for date formatting\n\nimport { getMedicalHistory, createMedicalHistory, editMedicalHistory } from '../../services/medhistory-services';  // Import edit API call\n\nconst MedHistory = () => {\n\n  const { form, handleInput, handleFileInput } = useForm();\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  const [ medHistory, setMedHistory ] = useState({});\n  \n  const { user, setUser, route, setRoute } = useContext(AppContext); // Destructure user state variable\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n\n  // Hook to update component when user state variable is modified\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getMedicalHistory()\n    .then( res => {\n\n      const { medicalHistory } = res.data;\n      setMedHistory(medicalHistory);\n\n    });\n\n  }, [user] );\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true);\n    \n    // Call edit service with formData as parameter, which includes form data for user profile information\n    if ( route === 'edit' ) {\n\n      editMedicalHistory(form)\n      .then( res => {\n\n        const { medicalHistory } = res.data   // Destructure updated user document from response\n        \n        setMedHistory(medicalHistory);              // Modify user state variable with updated information\n        setRoute('none');\n        setIsButtonDisabled(false);\n\n        // Send UIkit success notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> '¡Tu historial clínico fue actualizado exitosamente!'`,\n          pos: 'bottom-center',\n          status: 'success'\n        });\n\n      })\n      .catch( error => {\n\n        console.log(error);\n        setIsButtonDisabled(false);\n\n        // Send UIkit error notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> ${error}`,\n          pos: 'bottom-center',\n          status: 'danger'\n        });\n\n      });\n\n    }\n\n    if ( route !== 'edit' ) {\n\n      createMedicalHistory(form)\n      .then( res => {\n\n        const { medicalHistory } = res.data   // Destructure updated user document from response\n        \n        setMedHistory(medicalHistory);              // Modify user state variable with updated information\n        setRoute('none');\n        setIsButtonDisabled(false);\n\n        // Send UIkit success notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> '¡Tu historial clínico fue creado exitosamente!'`,\n          pos: 'bottom-center',\n          status: 'success'\n        });\n\n      })\n      .catch( error => {\n\n        console.log(error);\n        setIsButtonDisabled(false);\n\n        // Send UIkit error notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> ${error}`,\n          pos: 'bottom-center',\n          status: 'danger'\n        });\n\n      });\n\n    }\n\n  };\n\n  return (\n    <div className=\"uk-section\">\n      <h2>Mi Historial Clínico</h2>\n      { route === 'none' && !medHistory ? (\n          <div className=\"uk-container\">\n            <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n              <h4 className=\"uk-margin\">Antecedentes Heredo-Familiares</h4>\n              <div className=\"uk-margin\">\n                <div className=\"uk-form-label\">Enfermedades o Síntomas:</div>\n                <div className=\"uk-form-controls uk-flex\">\n                  <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Ninguno\" defaultChecked={true} onChange={handleInput} /> Ninguno</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Convulsiones\" onChange={handleInput} /> Convulsiones</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Cáncer\" onChange={handleInput} /> Cáncer</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Diabetes\" onChange={handleInput} /> Diabetes</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Dislipidemia\" onChange={handleInput} /> Dislipidemia</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Eclampsia\" onChange={handleInput} /> Eclampsia</label>\n                  </div>\n                  <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Autoinmunes\" onChange={handleInput} /> Autoinmunes</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Cardiacas\" onChange={handleInput} /> Cardiacas</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Psiquiátricas\" onChange={handleInput} /> Psiquiátricas</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Tiroideas\" onChange={handleInput} /> Tiroideas</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Hipertensión\" onChange={handleInput} /> Hipertensión</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Tuberculosis\" onChange={handleInput} /> Tuberculosis</label>\n                  </div>\n                </div>\n              </div>\n              <h4 className=\"uk-margin\">Antecedentes Personales Patológicos</h4>\n              <div className=\"uk-margin\">\n                <div className=\"uk-form-label\">Sistemas o Aparatos:</div>\n                <div className=\"uk-form-controls uk-flex\">\n                  <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Ninguno\" defaultChecked={true} onChange={handleInput} /> Ninguno</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Cardiovascular\" onChange={handleInput} /> Cardiovascular</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Gastrointestinal\" onChange={handleInput} /> Gastrointestinal</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Músculo-esquelético\" onChange={handleInput} /> Músculo-esquelético</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Dolor\" onChange={handleInput} /> Dolor</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Génito-Urinario\" onChange={handleInput} /> Génito-Urinario</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Respiratorio\" onChange={handleInput} /> Respiratorio</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Psiquiátrico\" onChange={handleInput} /> Psiquiátrico</label>\n                  </div>\n                  <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Órganos de Sentidos\" onChange={handleInput} /> Órganos de Sentidos</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Otros\" onChange={handleInput} /> Otros</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Dermatológico\" onChange={handleInput} /> Dermatológico</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Síntomas Generales\" onChange={handleInput} /> Síntomas Generales</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Endócrino\" onChange={handleInput} /> Endócrino</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Hemato-Linfático\" onChange={handleInput} /> Hemato-Linfático</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Sist. Inmunológico\" onChange={handleInput} /> Sist. Inmunológico</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Sist. Nervioso\" onChange={handleInput} /> Sist. Nervioso</label>\n                  </div>\n                </div>\n              </div>\n              <h4 className=\"uk-margin\">Antecedentes Personales No Patológicos</h4>\n              <div className=\"uk-margin\">\n                <div className=\"uk-form-controls\">\n                  <label className=\"uk-form-label\" htmlFor=\"date\">Horas de Actividad Física a la Semana:</label>\n                  <div className=\"uk-form-controls\">\n                    <input className=\"uk-input\" type=\"number\" name=\"weekly_exercise_hours\" onChange={handleInput} />\n                  </div>\n                  <div className=\"uk-form-label\">Adicciones:</div>\n                  <div className=\"uk-flex uk-flex-column\">\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Ninguna\" defaultChecked={true} onChange={handleInput} /> Ninguna</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Alcoholismo\" onChange={handleInput} /> Alcoholismo</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Sustancias Psicotrópicas\" onChange={handleInput} /> Sustancias Psicotrópicas</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Tabaquismo\" onChange={handleInput} /> Tabaquismo</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Otras\" onChange={handleInput} /> Otras</label>\n                  </div>\n                </div>\n              </div>\n              <h4 className=\"uk-margin\">Alergias</h4>\n              <div className=\"uk-margin\">\n                <label className=\"uk-form-label\" htmlFor=\"date\">Agentes Biológicos:</label>\n                <div className=\"uk-form-controls\">\n                  <input className=\"uk-input\" type=\"text\" name=\"allergies\" onChange={handleInput} placeholder=\"Introducir alergéno\" />\n                </div>\n                <label className=\"uk-form-label\" htmlFor=\"date\">Alimentos:</label>\n                <div className=\"uk-form-controls\">\n                  <input className=\"uk-input\" type=\"text\" name=\"allergies\" onChange={handleInput} placeholder=\"Introducir alergéno\" />\n                </div>\n                <label className=\"uk-form-label\" htmlFor=\"date\">Insectos:</label>\n                <div className=\"uk-form-controls\">\n                  <input className=\"uk-input\" type=\"text\" name=\"allergies\" onChange={handleInput} placeholder=\"Introducir alergéno\" />\n                </div>\n                <label className=\"uk-form-label\" htmlFor=\"date\">Medicamentos:</label>\n                <div className=\"uk-form-controls\">\n                  <input className=\"uk-input\" type=\"text\" name=\"allergies\" onChange={handleInput} placeholder=\"Introducir alergéno\" />\n                </div>\n              </div>\n              <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n                <button type=\"submit\" className=\"uk-button uk-button-primary uk-button-small uk-border-pill\" disabled={isButtonDisabled} onClick={event => setRoute('none')} >\n                  Crear Historial\n                </button>\n              </div>\n            </form>\n          </div>\n        ) : route === 'none' ? (\n          <div className=\"uk-container\">\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('edit')} >\n              Editar historial\n            </button>\n            <div className=\"uk-margin\">\n              <h4 className=\"uk-margin\">Antecedentes Heredo-Familiares</h4>\n              <ul className=\"uk-list\">\n                { medHistory.family_history ? medHistory.family_history.map( (disease, index) => {\n                  return (<li key={index}>{disease}</li>)\n                }) : 'Cargando' }\n              </ul>\n              <h4 className=\"uk-margin\">Antecedentes Personales Patológicos</h4>\n              <ul className=\"uk-list\">\n                { medHistory.health_history ? medHistory.health_history.map( (disease, index) => {\n                  return (<li key={index}>{disease}</li>)\n                }) : 'Cargando' }\n              </ul>\n              <h4 className=\"uk-margin\">Antecedentes Personales No Patológicos</h4>\n              <p>Horas de actividad física a la semana: {medHistory.weekly_exercise_hours}</p>\n              <p>Adicciones:</p>\n              <ul className=\"uk-list\">\n                { medHistory.addictions ? medHistory.addictions.map( (addiction, index) => {\n                  return (<li key={index}>{addiction}</li>)\n                }) : 'Cargando' }\n              </ul>\n              <h4 className=\"uk-margin\">Alergias</h4>\n              <ul className=\"uk-list\">\n                { medHistory.allergies ? medHistory.allergies.map( (allergy, index) => {\n                  return (<li key={index}>{allergy}</li>)\n                }) : 'Sin información registrada' }\n              </ul>\n            </div>\n          </div>\n        ) : (\n          <div className=\"uk-container\">\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('none')} >\n              Regresar\n            </button>\n            <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left uk-margin\">\n              <h4 className=\"uk-margin\">Antecedentes Heredo-Familiares</h4>\n              <div className=\"uk-margin\">\n                <div className=\"uk-form-label\">Enfermedades o Síntomas:</div>\n                <div className=\"uk-form-controls uk-flex\">\n                  <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Ninguno\" defaultChecked={true} onChange={handleInput} /> Ninguno</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Convulsiones\" onChange={handleInput} /> Convulsiones</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Cáncer\" onChange={handleInput} /> Cáncer</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Diabetes\" onChange={handleInput} /> Diabetes</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Dislipidemia\" onChange={handleInput} /> Dislipidemia</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Eclampsia\" onChange={handleInput} /> Eclampsia</label>\n                  </div>\n                  <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Autoinmunes\" onChange={handleInput} /> Autoinmunes</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Cardiacas\" onChange={handleInput} /> Cardiacas</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Psiquiátricas\" onChange={handleInput} /> Psiquiátricas</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Tiroideas\" onChange={handleInput} /> Tiroideas</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Hipertensión\" onChange={handleInput} /> Hipertensión</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_history\" value=\"Tuberculosis\" onChange={handleInput} /> Tuberculosis</label>\n                  </div>\n                </div>\n              </div>\n              <h4 className=\"uk-margin\">Antecedentes Personales Patológicos</h4>\n              <div className=\"uk-margin\">\n                <div className=\"uk-form-label\">Sistemas o Aparatos:</div>\n                <div className=\"uk-form-controls uk-flex\">\n                  <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Ninguno\" defaultChecked={true} onChange={handleInput} /> Ninguno</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Cardiovascular\" onChange={handleInput} /> Cardiovascular</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Gastrointestinal\" onChange={handleInput} /> Gastrointestinal</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Músculo-esquelético\" onChange={handleInput} /> Músculo-esquelético</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Dolor\" onChange={handleInput} /> Dolor</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Génito-Urinario\" onChange={handleInput} /> Génito-Urinario</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Respiratorio\" onChange={handleInput} /> Respiratorio</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Psiquiátrico\" onChange={handleInput} /> Psiquiátrico</label>\n                  </div>\n                  <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Órganos de Sentidos\" onChange={handleInput} /> Órganos de Sentidos</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Otros\" onChange={handleInput} /> Otros</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Dermatológico\" onChange={handleInput} /> Dermatológico</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Síntomas Generales\" onChange={handleInput} /> Síntomas Generales</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Endócrino\" onChange={handleInput} /> Endócrino</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Hemato-Linfático\" onChange={handleInput} /> Hemato-Linfático</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Sist. Inmunológico\" onChange={handleInput} /> Sist. Inmunológico</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Sist. Nervioso\" onChange={handleInput} /> Sist. Nervioso</label>\n                  </div>\n                </div>\n              </div>\n              <h4 className=\"uk-margin\">Antecedentes Personales No Patológicos</h4>\n              <div className=\"uk-margin\">\n                <div className=\"uk-form-controls\">\n                  <label className=\"uk-form-label\" htmlFor=\"date\">Horas de Actividad Física a la Semana:</label>\n                  <div className=\"uk-form-controls\">\n                    <input className=\"uk-input\" type=\"number\" name=\"weekly_exercise_hours\" onChange={handleInput} />\n                  </div>\n                  <div className=\"uk-form-label\">Adicciones:</div>\n                  <div className=\"uk-flex uk-flex-column\">\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Ninguna\" defaultChecked={true} onChange={handleInput} /> Ninguna</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Alcoholismo\" onChange={handleInput} /> Alcoholismo</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Sustancias Psicotrópicas\" onChange={handleInput} /> Sustancias Psicotrópicas</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Tabaquismo\" onChange={handleInput} /> Tabaquismo</label>\n                    <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"addictions\" value=\"Otras\" onChange={handleInput} /> Otras</label>\n                  </div>\n                </div>\n              </div>\n              <h4 className=\"uk-margin\">Alergias</h4>\n              <div className=\"uk-margin\">\n                <label className=\"uk-form-label\" htmlFor=\"date\">Agentes Biológicos:</label>\n                <div className=\"uk-form-controls\">\n                  <input className=\"uk-input\" type=\"text\" name=\"allergies\" onChange={handleInput} placeholder=\"Introducir alergéno\" />\n                </div>\n                <label className=\"uk-form-label\" htmlFor=\"date\">Alimentos:</label>\n                <div className=\"uk-form-controls\">\n                  <input className=\"uk-input\" type=\"text\" name=\"allergies\" onChange={handleInput} placeholder=\"Introducir alergéno\" />\n                </div>\n                <label className=\"uk-form-label\" htmlFor=\"date\">Insectos:</label>\n                <div className=\"uk-form-controls\">\n                  <input className=\"uk-input\" type=\"text\" name=\"allergies\" onChange={handleInput} placeholder=\"Introducir alergéno\" />\n                </div>\n                <label className=\"uk-form-label\" htmlFor=\"date\">Medicamentos:</label>\n                <div className=\"uk-form-controls\">\n                  <input className=\"uk-input\" type=\"text\" name=\"allergies\" onChange={handleInput} placeholder=\"Introducir alergéno\" />\n                </div>\n              </div>\n              <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n                <button type=\"submit\" className=\"uk-button uk-button-primary uk-button-small uk-border-pill\" disabled={isButtonDisabled} onClick={event => setRoute('none')} >\n                  Crear Historial\n                </button>\n              </div>\n            </form>\n          </div>\n        )\n      }\n      </div>)\n\n}\n\nexport default MedHistory","import React, { useContext } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { AppContext } from './AppContext';\n\n// Import Components for navigation\n// import Landing from './components/landing/Landing';\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\nimport Profile from './components/profile/Profile';\n// import Preferences from './components/profile/Preferences';\n// import Doctors from './components/doctor/Doctors';\n// import DoctorLanding from './components/doctor/DoctorLanding';\n// import DoctorHome from './components/doctor/DoctorHome';\n// import PatientHome from './components/patient/PatientHome';\n// import Patients from './components/doctor/myPatients/Patients'\nimport Study from './components/study/Study';\nimport Consultation from './components/consultation/Consultation';\nimport Prescription from './components/prescription/Prescription';\nimport MedHistory from './components/medHistory/MedHistory';\n// import AppLoader from './components/common/Loader';\n// import Calendar from './components/schedule/Calendar';\n\nconst Router = () => {\n\n  const { user, setRoute } = useContext(AppContext); // Destructure user state variable\n\n  const handleRoute = (newRoute) => setRoute(newRoute);\n\n  return (\n    <Switch>\n\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n      \n      <Route path=\"/login\">\n        <Login />\n      </Route>\n\n      <Route path=\"/perfil\">\n        <Profile />\n      </Route>\n\n      <Route path=\"/historial\">\n        <MedHistory />\n      </Route>\n\n      <Route path=\"/consultas\">\n        <Consultation />\n      </Route>\n\n      <Route path=\"/recetas\">\n        <Prescription />\n      </Route>\n\n      <Route path=\"/estudios\">\n        <Study />\n      </Route>\n\n    </Switch>\n  )\n};\n\nexport default Router;","import React, { useContext } from 'react';                // Import React and useContext hook\nimport { Link, NavLink } from 'react-router-dom';         // Import NavLink for \"navigation\"\nimport { useHistory } from 'react-router-dom';            // Import useHistory for \"redirection\"\nimport { AppContext }  from '../../AppContext';           // Import AppContext to use created context\nimport { logout } from '../../services/auth-services';    // Import logout service for logout functionality\nimport logo from '../../images/health-check.svg'\n\n\n// Declare Nav functional component (Navigation Bar)\nconst Navbar = () => {\n  \n  // Destructure user state variable and resetUserContext function from context\n  const { user, setRoute, resetUserContext } = useContext(AppContext);\n  // Destructure push method from useHistory to \"redirect\" user\n  const { push } = useHistory();\n\n  // Declare function for handling logout button\n  const handleLogout = () => {\n\n    logout();                   // Execute logout function (clear localStorage)\n    push('/login');             // Redirect user to login\n    resetUserContext();         // delete user data from context to an empty object\n    closeMenu();\n\n  };\n\n  const handleRoute = (event, newRoute) => {\n    \n    event.preventDefault();               // Prevent page reloading after submit action\n    setRoute(newRoute);                   // Update route state variable with route sent as parameter\n    closeMenu();\n\n  }\n\n  const closeMenu = () => {\n    const toggle = document.getElementById('toggle');\n    toggle.checked = !toggle.checked;\n  }\n\n  return (\n\n    <nav className=\"uk-navbar uk-navbar-container uk-flex uk-flex-between uk-flex-middle uk-flex-wrap\">\n      \n      <ul className=\"uk-navbar-nav uk-height-1-1\">\n          <li className=\"uk-active uk-flex uk-flex-middle\">\n            <NavLink to=\"/\">\n              <div className=\"uk-margin-left\">\n                  <img src={logo} alt=\"logo\" width=\"48px\" height=\"48px\" className=\"uk-img\" />\n              </div>\n            </NavLink>\n          </li>\n          <li className=\"uk-active uk-flex uk-flex-middle uk-height-1-1\">\n              <NavLink to=\"/\">\n                B-Health\n              </NavLink>\n          </li>\n      </ul>\n\n      <label id=\"nav-menu\" htmlFor=\"toggle\" className=\"uk-margin-right uk-height-1-1\"><span uk-icon=\"menu\"></span></label>\n      <input type=\"checkbox\" id=\"toggle\"/>\n      \n      \n          \n          { user._id ? \n            <ul className=\"menu uk-navbar-nav\">\n              <li className=\"uk-active\"  onClick={event => handleRoute(event, \"none\")}>\n                <NavLink to=\"/perfil\">\n                  <div className=\"uk-width-auto uk-margin-small-right\">\n                    <img className=\"uk-border-circle\" width={40} height={40} src={user.profile_picture} alt=\"User profile\" />\n                  </div>\n                  <p className=\"uk-margin-remove\">Mi Perfil</p>\n                </NavLink>\n              </li>\n              <li className=\"uk-active\">\n                <NavLink to=\"/login\">\n                  <button className=\"uk-button uk-button-primary uk-button-small uk-border-pill\" onClick={handleLogout} >\n                    Logout\n                  </button>\n                </NavLink>\n              </li>\n              <div className=\"mobile-only uk-overflow-auto\">\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/home\">Mi Salud</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/historial\">Historial</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/consultas\">Consultas</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/recetas\">Recetas</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/estudios\">Estudios</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/urgencias\">Urgencias</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/hospitalizaciones\">Hospitalizaciones</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/agenda\">Agenda</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/terapias\">Otras Terapias</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/tienda\">Tienda</NavLink>\n                </li>\n              </div>\n            </ul>\n            :\n            <ul className=\"menu uk-navbar-nav\">\n              <li className=\"uk-active uk-width-1-1 uk-flex uk-flex-center uk-flex-middle\" onClick={closeMenu} ><Link to=\"/servicios\">Servicios</Link></li>\n              <li className=\"uk-active uk-width-1-1 uk-flex uk-flex-center uk-flex-middle\" onClick={closeMenu} ><Link to=\"/nosotros\">Nosotros</Link></li>\n              <li className=\"uk-active uk-width-1-1 uk-flex uk-flex-center uk-flex-middle\" onClick={closeMenu} >\n                <Link to=\"/login\">\n                  <button className=\"uk-button uk-button-primary uk-button-small uk-border-pill\">\n                    Ingresar\n                  </button>\n                </Link>\n              </li>\n            </ul>\n          }\n\n    </nav>\n    \n  );\n\n};\n\nexport default Navbar;","import React, { useContext } from 'react';                // Import React and useContext hook\nimport { NavLink, Link } from 'react-router-dom';               // Import NavLink for \"navigation\"\n//import { useHistory } from 'react-router-dom';            // Import useHistory for \"redirection\"\nimport { AppContext }  from '../../AppContext';           // Import AppContext to use created context\n\n// Declare Sidebar functional component\nconst Sidebar = () => {\n  \n  // Destructure user and route state variables from context and setRoute function to change route\n  const { user, setRoute } = useContext(AppContext); // Destructure user state variable\n\n  // Declare function to update the route state variable according to the selected link for inner component nav\n  const handleRoute = (event, newRoute) => {\n    \n    event.preventDefault();               // Prevent page reloading after submit action\n    setRoute(newRoute);                   // Update route state variable with route sent as parameter\n  \n  }\n\n  // Destructure push method from useHistory to \"redirect\" user\n  //const { push } = useHistory();\n\n  return (\n     \n    <div className=\"sidebar\">\n      <ul className=\"uk-nav-default uk-nav-parent-icon uk-width-4-5 uk-text-left uk-margin-left uk-margin-large-top\" uk-nav=\"true\">\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/home\">Mi Salud</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/historial\">Historial</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/consultas\">Consultas</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/recetas\">Recetas</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/estudios\">Estudios</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/urgencias\">Urgencias</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/hospitalizaciones\">Hospitalizaciones</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/agenda\">Agenda</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/terapias\">Otras Terapias</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/tienda\">Tienda</NavLink>\n        </li>\n      </ul>\n    </div>\n        \n  );\n};\n\nexport default Sidebar;","import React, { useContext } from 'react';\nimport Router from './Router';\nimport { AppContext } from './AppContext';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/common/Navbar'\nimport Sidebar from './components/common/Sidebar';\n\nfunction App() {\n\n  const { user } = useContext(AppContext); // Destructure user state variable\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <main>\n        { user._id ? (\n          <div className=\"uk-flex\">\n            <Sidebar />\n            <Router />\n          </div>\n        ) : (\n          <Router />\n        )}\n      </main>\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Import BrowserRouter to allow the user to navigate within the app by setting defined routes. See ./Router.js for more information\nimport { BrowserRouter } from 'react-router-dom';\n\n// Import the Provider which will allow to pass down the state variables and methods to its descendants\nimport AppProvider from './AppContext';\n\n// Import UIkit for styles\nimport UIkit from 'uikit';\nimport Icons from 'uikit/dist/js/uikit-icons';\nimport 'uikit/dist/css/uikit.min.css';\n\nUIkit.use(Icons);   // Execute to allow icon use\n\n// Create a component that: Provides state variables and methods AND router functionality for navigation, to the APP\nconst WithRouterAndProvider = () => (\n  <AppProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AppProvider>\n)\n\nReactDOM.render(<WithRouterAndProvider />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}