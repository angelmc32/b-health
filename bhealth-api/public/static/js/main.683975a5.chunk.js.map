{"version":3,"sources":["images/icons/blood-pressure.svg","images/icons/diamond-icon.svg","images/icons/happy-face.svg","images/icons/sad-face.svg","images/icons/blood-sugar.svg","images/icons/heart-rate.svg","images/icons/temperature.svg","images/icons/weight.svg","images/icons/add-vitals.svg","images/icons/sick-face.svg","images/icons/blue-icon.svg","logo.svg","AppContext.js","components/landing/Landing.js","services/auth-services.js","components/auth/AuthForm.js","hooks/useForm.js","components/auth/Signup.js","components/auth/Login.js","components/common/questionnaire/Questionnaire.js","components/profile/Profile.js","services/profile-services.js","components/vitalsigns/VitalSignsCard.js","services/vitalsigns-services.js","components/vitalsigns/VitalSignsForm.js","components/home/Home.js","services/study-services.js","components/study/StudyForm.js","components/study/StudyInfo.js","components/study/Study.js","services/consultation-services.js","services/emergency-services.js","services/hospitalization-services.js","components/disease/Disease.js","components/common/CatalogSearchbar.js","components/consultation/ConsultationFormSpecial.js","components/consultation/ConsultationInfo.js","components/consultation/Consultation.js","hooks/useDrugsForm.js","services/drug-services.js","components/prescription/PrescriptionForm.js","components/prescription/PrescriptionInfo.js","components/prescription/Prescription.js","services/prescription-services.js","services/medhistory-services.js","components/medHistory/MedHistory.js","components/hospitalization/HospitalizationForm.js","components/hospitalization/HospitalizationInfo.js","components/hospitalization/Hozpitalization.js","components/emergency/EmergencyForm.js","components/emergency/EmergencyInfo.js","components/emergency/Emergency.js","components/common/DrugSearchbar.js","components/drug/DrugForm.js","components/drug/DrugInfo.js","components/drug/Drug.js","components/Questionnaire.js","Router.js","components/common/Navbar.js","components/common/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppContext","createContext","AppProvider","children","initialUserState","JSON","parse","localStorage","getItem","useState","user","setUser","route","setRoute","objectHandler","setObjectHandler","userContext","resetUserContext","Provider","value","Landing","className","to","src","placeholderImg","alt","base_url","AuthForm","submit","action","email","password","confirm_password","handleChange","emailInputState","setEmailInputState","passwordInputState","setPasswordInputState","confPasswordInputState","setConfPasswordInputState","isButtonDisabled","setIsButtonDisabled","useEffect","inputValidation","event","target","name","test","validateEmail","validatePassword","onSubmit","uk-icon","onChange","type","disabled","useForm","form","setForm","handleInput","checked","prevState","handleFileInput","files","Signup","useContext","push","useHistory","data","preventDefault","axios","post","then","res","token","setItem","stringify","UIkit","notification","message","pos","status","catch","msg","response","Login","console","log","Questionnaire","title","questionnaire","handleSubmit","backButton","isComplete","currentStep","setCurrentStep","onClick","map","section","index","changeStepState","key","href","Profile","_id","ProfileQuestionnaire","htmlFor","placeholder","first_name","last_name1","last_name2","moment","utc","date_of_birth","format","gender","curp","zip_code","marital_status","defaultValue","education_level","phone_number","width","height","profile_picture","formData","FormData","append","patch","headers","Authorization","editProfile","error","VitalSignsCard","vitalsign_name","vitalsign_icon","form_name","handleInputChange","showInput","setShowInput","step","createVitalSigns","VitalSignsForm","setShowVitalsForm","setVitalsFormValues","vitalsFormValues","persist","parseFloat","currentValues","temperature_icon","blood_pressure_icon","blood_sugar_icon","heart_rate_icon","weight_icon","vitalsigns","Home","temperature","blood_pressure_sys","blood_pressure_dias","blood_sugar","heart_rate","weight","Date","now","locale","happy_img","sad_img","sick_img","uk-accordion","StudyForm","drugQuantity","uk-form-custom","multiple","tabIndex","StudyInfo","study","date","doctor","image","uk-lightbox","data-alt","study_name","facility_name","Study","setStudy","studies","setStudies","get","getStudies","length","loadStudy","createStudy","getConsultations","getEmergencies","getHospitalizations","Disease","diseases","setDiseases","setConsultations","setEmergencies","setHospitalizations","diseasesHandler","consultations","i","diagnosis","emergencies","hospitalizations","disease","uk-toggle","id","uk-modal","uk-close","CatalogSearchbar","handleFormInput","searchResults","setSearchResults","searchValue","setSearchValue","showDrop","setShowDrop","results","cie10","filter","NOMBRE","toLowerCase","includes","procedures","PRO_NOMBRE","drugs","generic_name","uk-search-icon","ConsultationForm","showVitalsForm","toggleVitalsForm","ConsultationInfo","consultation","vitals","setVitals","consultationID","getOneVitalSignsConsultation","chief_complaint","glucose","Consultation","setConsultation","goToPrescription","newRoute","goToStudies","loadConsultation","prescription","ConsultationFormSpecial","createConsultation","useDrugsForm","drugsArray","array","setArray","PrescriptionForm","drugFields","setDrugFields","setDrugQuantity","drug","handleDrugInput","brand_name","dosage_form","dose","directions","drugField","pop","deleteDrugField","addDrugField","PrescriptionInfo","Prescription","setPrescription","prescriptions","setPrescriptions","getPrescriptions","loadPrescription","drugsJSON","createPrescription","MedHistory","medHistory","setMedHistory","healthHistoryState","setHealthHistoryState","allergiesObj","weekly_exercise_hours","getMedicalHistory","medicalHistory","parseInt","editMedicalHistory","createMedicalHistory","handleMedHistoryInput","medHistoryQuestionnaire","defaultChecked","family_diabetes","family_diabetes_patient","family_hypertension","family_hypertension_patient","family_asthma","family_asthma_patient","family_allergies","family_allergies_patient","family_heart_disease","family_heart_disease_patient","family_liver_disease","family_liver_disease_patient","family_digestive_disease","family_digestive_disease_patient","family_kidney_disease","family_kidney_disease_patient","family_endocrin_disease_patient","family_mental_disease","family_mental_disease_patient","family_cancer","family_cancer_patient","family_other_disease","family_other_disease_patient","others","setStep","changeStep","family_endocrin_disease","health_history","Object","entries","entry","procedure","allergies","traumatisms","addictions","smoking_status","alcoholism","nutritional_status","sleep_status","oral_hygiene","HospitalizationForm","HospitalizationInfo","hospitalization","admission_date","description","Hozpitalization","setHospitalization","loadHospitalization","createHospitalization","EmergencyForm","EmergencyInfo","emergency","Emergency","setEmergency","loadEmergency","treatment","createEmergency","DrugForm","DrugSearchbar","Drug","setDrug","setDrugs","getDrugs","date_added","loadDrug","createDrug","DrugInfo","questionnaire_var","Router","exact","path","Navbar","handleRoute","closeMenu","toggle","document","getElementById","logo","clear","Sidebar","uk-nav","App","Boolean","window","location","hostname","match","use","Icons","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.683975a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blood-pressure.cf3aa91f.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond-icon.7b010418.svg\";","module.exports = __webpack_public_path__ + \"static/media/happy-face.df981ce0.svg\";","module.exports = __webpack_public_path__ + \"static/media/sad-face.18bccf67.svg\";","module.exports = __webpack_public_path__ + \"static/media/blood-sugar.cac6f5ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-rate.669e9159.svg\";","module.exports = __webpack_public_path__ + \"static/media/temperature.135f44d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/weight.74bdac82.svg\";","module.exports = __webpack_public_path__ + \"static/media/add-vitals.77332c1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/sick-face.e921748a.svg\";","module.exports = __webpack_public_path__ + \"static/media/blue-icon.233a6f76.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { createContext, useState } from 'react';   // Import React and 2 hooks for context-creation and state-manipulation\n\n// Create context object, and export it so children components can use it through the useContext hook\nexport const AppContext = createContext();\n\n// Create Provider component \nconst AppProvider = ({ children }) => {\n\n  // Obtain user data from the localStorage, or set it as an empty object in case there is no user stored\n  const initialUserState = JSON.parse( localStorage.getItem('user') ) || {};\n\n  // Declare user state variable and setUser function to update the user state variable\n  const [ user, setUser ] = useState(initialUserState);\n  const [ route, setRoute ] = useState(\"none\");\n  const [ objectHandler, setObjectHandler ] = useState({});\n  \n  // Declare resetUserContext function that will allow us to reset the user context\n  const resetUserContext = () => {\n\n    setUser({});    // Sets user context to an empty object \n    setRoute(\"none\");\n    setObjectHandler({});\n\n  };\n\n  // Create the context objects to be passed as props in the Provider, with our created state and functions\n  const userContext = { user, setUser, route, setRoute, objectHandler, setObjectHandler, resetUserContext };\n\n  // Return a context Provider component, sending the userContext as value prop\n  return (\n    <AppContext.Provider value={ userContext }>\n      { children }\n    </AppContext.Provider>\n  );\n\n};\n\nexport default AppProvider;","import React from 'react'\nimport { Link, NavLink } from 'react-router-dom';         // Import NavLink for \"navigation\"\nimport placeholderImg from '../../images/icons/diamond-icon.svg'\n\nconst Landing = () => {\n  \n  return (\n    <div className=\"content\">\n\n      <div className=\"uk-section\">\n        <div className=\"uk-container uk-height-1-1\">\n          <div className=\"uk-width-1-1 uk-width-2-3@m uk-height-1-1 uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n            <h1>La <span className=\"uk-text-secondary uk-text-bold\">salud</span> de tu <span className=\"uk-text-primary uk-text-bold\">familia</span>, <br/> en tus manos.</h1>\n            <h3 className=\"uk-margin-remove\">Tus datos. Tus medicamentos. Tu salud.</h3>\n            <Link to=\"/registro\" className=\"uk-width-1-1 uk-margin-large uk-hidden@s\">\n              <button className=\"uk-button uk-button-primary uk-width-2-3 uk-border-pill\">\n                Regístrate Gratis\n              </button>\n            </Link>\n            <Link to=\"/login\" className=\"uk-width-1-1 uk-hidden@s\">\n              <button className=\"uk-button uk-button-muted uk-width-2-3 uk-border-pill\">\n                Inicia Sesión\n              </button>\n            </Link>\n            <Link to=\"/registro\" className=\"uk-width-1-1 uk-margin-large\">\n              <button className=\"uk-visible@s uk-button uk-button-primary uk-button-large uk-border-pill\">\n                Regístrate Gratis\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"uk-section\">\n        <div className=\"uk-container\">\n          <div className=\"uk-grid uk-child-width-1-1 uk-child-width-1-3@m\">\n            <div>\n              <div className=\"uk-card uk-card-default uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n                <div className=\"uk-card-media-top uk-width-1-5 uk-flex uk-flex-center uk-flex-middle\">\n                  <img className=\"uk-margin-small-top\" src={placeholderImg} alt=\"\" />\n                </div>\n                <div className=\"uk-card-body uk-padding-small\">\n                  <h3 className=\"uk-margin-remove\">Tu Expediente Clínico</h3>\n                  <p className=\"uk-margin-remove\">La información clínica de tu <span className=\"uk-text-primary uk-text-bold\">familia</span>, siempre segura y disponible.</p>\n                </div>\n              </div>\n            </div>\n            <div>\n              <div className=\"uk-card uk-card-default uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n                <div className=\"uk-card-media-top uk-width-1-5 uk-flex uk-flex-center uk-flex-middle\">\n                  <img className=\"uk-margin-small-top\" src={placeholderImg} alt=\"\" />\n                </div>\n                <div className=\"uk-card-body uk-padding-small\">\n                  <h3 className=\"uk-margin-remove\">Monitorea tu salud</h3>\n                  <p className=\"uk-margin-remove\">Recordatorios para tus <span className=\"uk-text-primary uk-text-bold\">medicamentos</span> y <span className=\"uk-text-primary uk-text-bold\">signos vitales</span></p>\n                </div>\n              </div>\n            </div>\n            <div>\n              <div className=\"uk-card uk-card-default uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n                <div className=\"uk-card-media-top uk-width-1-5 uk-flex uk-flex-center uk-flex-middle\">\n                  <img className=\"uk-margin-small-top\" src={placeholderImg} alt=\"\" />\n                </div>\n                <div className=\"uk-card-body uk-padding-small\">\n                  <h3 className=\"uk-margin-remove\">Controla el acceso</h3>\n                  <p className=\"uk-margin-remove\">Tú decides la información que quieras compartir con <span className=\"uk-text-primary uk-text-bold\">familiares o médicos</span></p>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* \n          <div className=\"uk-visible@s uk-flex uk-width-1-1 uk-child-width-1-3\">\n            <div>Test</div>\n            <div>Test</div>\n            <div>Test</div>\n          </div> */}\n        </div>\n      </div>\n\n      <div className=\"uk-section uk-hidden@s\">\n        <div className=\"uk-container\">\n          <div className=\"uk-text-left\">\n            <h1>Toma el control <br/> de tu salud</h1>\n            <h4>Nadie conoce mejor tu salud <br/>y la de tu familia que tú.</h4>\n            <h3>Con B-Health, nunca fue más sencillo</h3>\n          </div>\n          \n        </div>\n        {/* <div className=\"uk-flex uk-flex-column uk-width-1-1 uk-child-width-1-1\">\n          <div>Test</div>\n          <div>Test</div>\n          <div>Test</div>\n        </div> */}\n      </div>\n\n    </div>\n  )\n}\n\nexport default Landing\n","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api' : 'http://localhost:3000/api';\n\n// Export signup function, which receives data as parameters to enable signup\nexport const signup = (data) => {\n  \n  // Return a call to our /signup route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/signup`, data);\n\n};\n\n// Export login function, which receives data as parameters to enable login\nexport const login = (data) => {\n\n  // Return a call to our /login route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/login`, data);\n\n};\n\n// Export logout function, which \"erases\" the token from the localStorage, and without a token any user\n// that is not logged in will not be able to access the routes that require authentication/token\nexport const logout = () => {\n\n  localStorage.clear();\n\n};","import React, { useEffect, useState } from 'react';                        // Import React\nimport { NavLink } from 'react-router-dom';       // Import NavLink for \"navigation\"\n\n// Declare AuthForm functional component, receives action variable for conditional rendering,\n// email, password and confirm_password variables from form state variable, and submit and handleChange functions\nconst AuthForm = ( { submit, action, email = '', password = '', confirm_password = '', handleChange } ) => {\n\n  let error = null;\n  const [ emailInputState, setEmailInputState ] = useState(null)\n  const [ passwordInputState, setPasswordInputState ] = useState(null)\n  const [ confPasswordInputState, setConfPasswordInputState ] = useState(null)\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(true)\n\n  useEffect( () => {\n    if ( emailInputState === 'uk-form-success' && passwordInputState === 'uk-form-success' && confPasswordInputState === 'uk-form-success' )\n      setIsButtonDisabled(false);\n    else\n      setIsButtonDisabled(true);\n  }, [emailInputState, passwordInputState, confPasswordInputState])\n\n  const validateEmail = (email) => {\n    const regEx = /\\S+@\\S+\\.\\S+/;\n    return regEx.test(email);\n  }\n\n  const validatePassword = (password) => {\n    const regEx = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\n    return regEx.test(password);\n  }\n\n  const inputValidation = (event) => {\n\n    const { name, value } = event.target;\n\n    handleChange(event);\n\n    switch( name ) {\n      case 'email': {\n        if ( validateEmail(value) ) \n          setEmailInputState('uk-form-success');\n        else \n          setEmailInputState('uk-form-danger');\n        break;\n      }\n      case 'password': {\n        if (  validatePassword(value) )\n          setPasswordInputState('uk-form-success');\n        else\n          setPasswordInputState('uk-form-danger');\n        break;\n      }\n      case 'confirm_password': {\n        if ( value === password )\n          setConfPasswordInputState('uk-form-success')\n        else\n          setConfPasswordInputState('uk-form-danger')\n      }\n    }\n    \n  }\n\n  return (\n    <div className=\" uk-width-1-1 uk-margin-top uk-margin-remove-top@s\">\n\n      <div className=\"uk-margin\">\n\n        <h2>{action === \"signup\" ? \"Registro\" : \"Inicia Sesión\"}</h2>\n    \n        { action === \"signup\" ? (\n          <p>¿Ya tienes cuenta? \n            <NavLink to=\"/login\" className=\"uk-margin-small-left\">\n              Accede aquí\n            </NavLink>\n          </p>\n          ) : (\n          <p>¿No tienes cuenta? \n            <NavLink to=\"/signup\" className=\"uk-margin-small-left\">\n              Regístrate aquí\n            </NavLink>\n          </p>\n          )\n        }\n      \n      </div>\n\n        <form className=\"uk-form-stacked\" onSubmit={submit}>\n          \n          <div className=\"uk-margin\">\n            <label className=\"uk-form-label\">Correo Electrónico:</label>\n            <div className=\"uk-inline uk-width-4-5 uk-width-1-3@s\">\n              <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n              <input onChange={event => inputValidation(event)} name=\"email\" value={email} className={emailInputState !== null ? `${emailInputState} uk-input uk-width-1-1 uk-border-pill` : \"uk-input uk-width-1-1 uk-border-pill\"} type=\"email\" />\n            </div>\n            { emailInputState === 'uk-form-danger' ?\n                <div>\n                  <span className=\"uk-text-danger\">Introduce una dirección de correo válida</span>\n                </div>\n              : null \n            }\n          </div>\n          <div className=\"uk-margin\">\n            <label className=\"uk-form-label\">Contraseña:</label>\n            <div className=\"uk-inline uk-width-4-5 uk-width-1-3@s\">\n              <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n              <input\n                onChange={event => inputValidation(event)}\n                name=\"password\"\n                value={password}\n                className={\n                  action === 'signup' ?\n                    passwordInputState !== null ? `${passwordInputState} uk-input uk-width-1-1 uk-border-pill` : \"uk-input uk-width-1-1 uk-border-pill\"\n                  : \"uk-input uk-width-1-1 uk-border-pill\"}\n                type=\"password\"\n              />\n            </div>\n            { passwordInputState === 'uk-form-danger' ?\n                <div>\n                  <span className=\"uk-text-danger\">La contraseña debe contener al menos una mayúscula, una minúscula y un número</span>\n                </div>\n              : null \n            }\n          </div>\n            { action === \"signup\" ? (\n            <div className=\"uk-margin\">\n              <label className=\"uk-form-label\">Confirma tu contraseña:</label>\n              <div className=\"uk-inline uk-width-4-5 uk-width-1-3@s\">\n                <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n                <input\n                  onChange={event => inputValidation(event)}\n                  name=\"confirm_password\"\n                  value={confirm_password}\n                  className={passwordInputState !== null ? `${confPasswordInputState} uk-input uk-width-1-1 uk-border-pill` : \"uk-input uk-width-1-1 uk-border-pill\"}\n                  type=\"password\"\n                />\n              </div>\n              { confPasswordInputState === 'uk-form-danger' ?\n                <div>\n                  <span className=\"uk-text-danger\">Asegúrate de introducir la misma contraseña</span>\n                </div>\n              : null \n            }\n            </div>\n            ) : null }\n\n          \n\n          <button disabled={action === 'signup' ? isButtonDisabled : false} className=\"uk-button uk-button-primary uk-border-pill uk-width-3-5 uk-width-1-5@s uk-margin\" type=\"submit\">\n            {action === \"signup\" ? \"Registrar\" : \"Entrar\"}\n          </button>\n\n        </form>\n    </div>\n  )\n\n}\n\nexport default AuthForm;","import { useState } from 'react';   // Import useState hook to create custom hook\n\n// Declare hook as a React functional component\nconst useForm = () => {\n  \n  // Declare form state variable and setForm function to update the form state variable\n  const [ form, setForm ] = useState({});\n  const [ array, setArray ] = useState([]);\n\n  // Declare handleInput function for input data manipulation\n  const handleInput = (event) => {\n    \n    // Destructure input name and value (data that is being changed by user)\n    const { name, value } = event.target;\n\n    // When using checkboxes, store the values in an array\n    if ( event.target.type === 'checkbox' ) {\n      const { checked } = event.target\n      setForm( prevState => ({...prevState, [name]: checked}) );\n\n    } else {\n  \n      // Update the form state without erasing previos values (with prevState)\n      setForm( prevState => ({...prevState, [name]: value}) );\n\n    }\n\n  };\n\n  // Declare handleInputFile function for files manipulation\n  const handleFileInput = (event) => {\n\n    // Destructure input name and files (data that is being changed by user)\n    const { name, files } = event.target;\n\n    // Update the form state without erasing previos values (with prevState)\n    setForm( prevState => ({...prevState, [name]: files}) );\n\n  };\n\n  // Return the form state variable and input handling functions\n  return { form, setForm, handleInput, handleFileInput };\n\n};\n\nexport default useForm;","import React, { useContext } from 'react';                // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';            // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';            // Import AppContext to use created context\nimport { signup } from '../../services/auth-services';    // Import signup service for API call\nimport AuthForm from './AuthForm';                        // Import AuthForm react component\nimport useForm from '../../hooks/useForm';                // Import useForm custom hook\nimport UIkit from 'uikit';                                // Import UIkit for notifications\n\n// Declare Signup functional component\nconst Signup = () => {\n\n  const { form, handleInput } = useForm();      // Destructure form state variable and handleInput function\n  const { setUser, setRoute } = useContext(AppContext);   // Destructure setUser function for user state manipulation\n  const { push } = useHistory();                // Destructure push method from useHistory to \"redirect\" user\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();                     // Prevent page reloading after submit action\n    \n    // Call signup service with form state variable as parameter, which includes form data for e-mail and password\n    signup(form)\n    .then( res => {\n      \n      const { user, token } = res.data;         // Destructure user and token from response, sent by API\n      \n      // Store user and token in localStorage\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', token);\n\n      setUser(user);    // Modify user state variable, setting the user data in the state\n      setRoute('edit');\n      push('/perfil');    // \"Redirect\" user to home\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='check'></span> Completa tu registro usando la liga que te enviamos a la dirección de correo electrónico proporcionada`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n    })\n    .catch( res => {\n\n      const { msg } = res.response.data;\n      \n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${msg}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n    });\n    \n  };\n\n  const validateEmail = (email) => {\n    const regEx = /\\S+@\\S+\\.\\S+/;\n    return regEx.test(email);\n  }\n\n  return (\n    <div className=\"uk-section\">\n      <div className=\"uk-container\">\n        <AuthForm\n          submit={handleSubmit}\n          action=\"signup\"\n          handleChange={handleInput}\n          validateEmail={validateEmail}\n          {...form}\n        />\n      </div>\n    </div>\n  );\n\n};\n\nexport default Signup;","import React, { useContext } from 'react';              // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';          // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';          // Import AppContext to use created context\nimport { login } from '../../services/auth-services';   // Import login service for API call\nimport AuthForm from './AuthForm';                      // Import AuthForm react component\nimport useForm from '../../hooks/useForm';              // Import useForm custom hook\nimport UIkit from 'uikit';                              // Import UIkit for notifications\n\n// Declare Login functional component\nconst Login = () => {\n\n  const { form, handleInput } = useForm();                // Destructure form state variable and handleInput function\n  const { setUser, setRoute } = useContext(AppContext);   // Destructure setUser function for user state manipulation\n  const { push } = useHistory();                          // Destructure push method from useHistory to \"redirect\" user\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();                     // Prevent page reloading after submit action\n    \n    // Call signup service with form state variable as parameter, which includes form data for e-mail and password\n    login(form)\n    .then( res => {\n      \n      const { user, token } = res.data;         // Destructure user and token from response, sent by API\n      \n      // Store user and token in localStorage\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', token);\n      console.log(user)\n\n      setUser(user);    // Modify user state variable, setting the user data in the state\n      setRoute('');\n      push('/home');    // \"Redirect\" user to home\n\n    })\n    .catch( res => {\n\n      const { msg } = res.response.data;\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${msg}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n    });\n    \n  };\n\n  return (\n    <div className=\"uk-section\">\n      <div className=\"uk-container\">\n        <AuthForm\n          submit={handleSubmit}\n          action=\"login\"\n          handleChange={handleInput}\n          {...form}\n        />\n      </div>\n    </div>\n  );\n\n};\n\nexport default Login;","import React, { useState, useContext } from 'react'\nimport { AppContext } from '../../../AppContext'\nimport moment from 'moment';                                    // Import momentjs for date formatting\n\nconst Questionnaire = ({title = 'Cuestionario', questionnaire = [1,2,3], handleSubmit, backButton, isComplete}) => {\n\n  // const { user, setUser, route, setRoute } = useContext(AppContext); // Destructure user state variable\n  \n  const [ currentStep, setCurrentStep ] = useState(0);\n\n  const changeStepState = (index) => {\n    setCurrentStep(index)\n  }\n\n  return (\n        <div>\n          <h2>{title}</h2>\n          { isComplete ? \n            <button onClick={backButton} className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" >\n              Regresar\n            </button> :\n            <h4 className=\"uk-text-danger\">\n              Completa tus Antecedentes\n            </h4>\n            }\n          \n          <div className=\"uk-flex uk-flex-center\">\n            <ul className=\"uk-dotnav\">\n              {\n                questionnaire.map( (section, index) => \n                  <li onClick={() => changeStepState(index)} key={index} className={ index === currentStep ? \"uk-active\" : null }><a href=\"#\">{index}</a></li>\n                )\n              }\n            </ul>\n          </div>\n          <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left uk-margin\">\n            {\n              questionnaire.map( (section, index) => \n                <div key={index} className={ index === currentStep ? \"uk-visible\" : \"uk-hidden\" }>\n                  { section }\n                </div>\n              )\n            }\n            <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin-large-top\">\n              <button type=\"submit\" className=\"uk-button uk-button-primary uk-border-pill uk-width-3-5 uk-width-1-4@s\" >\n                Guardar cambios\n              </button>\n            </div>\n          </form>\n        </div>\n  )\n}\n\nexport default Questionnaire","import React, { useEffect, useContext, useState } from 'react';           // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';                  // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                  // Import AppContext to use created context\nimport { editProfile } from '../../services/profile-services';  // Import edit API call\nimport useForm from '../../hooks/useForm';                      // Import useForm custom hook\nimport UIkit from 'uikit';                                      // Import UIkit for notifications\nimport moment from 'moment';                                    // Import momentjs for date formatting\n\nimport Questionnaire from '../common/questionnaire/Questionnaire'\n\nconst Profile = () => {\n\n  const { form, handleInput, handleFileInput } = useForm();\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  \n  const { user, setUser, route, setRoute } = useContext(AppContext); // Destructure user state variable\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n\n  // Hook to update component when user state variable is modified\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    console.log(user)\n\n  }, [user] );\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true);\n\n    console.log(form)\n\n    // if ( form.profile_picture ) {\n      \n      const formData = new FormData();      // Declare formData as new instance of FormData class\n      const { profile_picture } = form;     // Destructure profile_picture from form\n\n      // Iterate through every key in form object and append name:value to formData\n      for (let key in form) {\n\n        // If profile_picture, append as first item in array (currently 1 file allowed, index 0)\n        if ( key === 'profile_picture' ) formData.append(key, profile_picture[0]);\n\n        else formData.append(key, form[key]);\n        \n      }\n      \n      // Call edit service with formData as parameter, which includes form data for user profile information\n      editProfile(formData)\n      .then( res => {\n\n        const { user } = res.data   // Destructure updated user document from response\n        \n        setUser(user);              // Modify user state variable with updated information\n        setRoute('none');\n        setIsButtonDisabled(false);\n\n        // Send UIkit success notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> '¡Tu perfil fue actualizado exitosamente!'`,\n          pos: 'bottom-center',\n          status: 'success'\n        });\n\n      })\n      .catch( error => {\n\n        console.log(error);\n        setIsButtonDisabled(false);\n\n        // Send UIkit error notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> ${error}`,\n          pos: 'bottom-center',\n          status: 'danger'\n        });\n\n      });\n\n  };\n\n  const backButton = (event) => setRoute('none')\n\n  const ProfileQuestionnaire = [\n    <div>\n      <label className=\"uk-form-label\" htmlFor=\"date\">Nombres:</label>\n      <div className=\"uk-form-controls\">\n        <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"first_name\" onChange={handleInput} placeholder={user.first_name} />\n      </div>\n      <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Apellido paterno:</label>\n      <div className=\"uk-form-controls\">\n        <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"last_name1\" onChange={handleInput} placeholder={user.last_name1} />\n      </div>\n      <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Apellido materno:</label>\n      <div className=\"uk-form-controls\">\n        <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"last_name2\" onChange={handleInput} placeholder={user.last_name2} />\n      </div>\n      <label className=\"uk-form-label\">Fecha de nacimiento: {moment.utc(user.date_of_birth).format('LL')}</label>\n      <div className=\"uk-inline\">\n        <input onChange={handleInput} name=\"date_of_birth\" className=\"uk-input uk-border-pill\" type=\"date\" />\n      </div>\n      <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Género: {user.gender === \"N\" ? \"No definido\" : user.gender === \"F\" ? \"Femenino\" : \"Masculino\"}</label>\n      <div className=\"uk-margin uk-flex uk-flex-around\">\n        <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"F\" />  Mujer</label>\n        <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"M\" />  Hombre</label>\n        <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"N\" />  No binario</label>\n      </div>\n    </div>\n    ,\n    <div>\n      <label className=\"uk-form-label\">CURP:</label>\n      <div className=\"uk-form-controls\">\n        <input onChange={handleInput} name=\"curp\" className=\"uk-input uk-border-pill\" type=\"text\" placeholder={user.curp} />\n      </div>\n      <label className=\"uk-form-label\">Código Postal:</label>\n      <div className=\"uk-form-controls\">\n        <input onChange={handleInput} name=\"zip_code\" className=\"uk-input uk-border-pill\" type=\"number\" placeholder={user.zip_code ? user.zip_code : 12345} />\n      </div>\n      <label className=\"uk-form-label\">Estado Civil registrado: {user.marital_status}</label>\n      <div className=\"uk-form-controls\">\n        <select name=\"marital_status\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={user.marital_status ? user.marital_status : \"\"}>\n          <option></option>\n          <option>Soltero</option>\n          <option>Casado</option>\n          <option>Viudo</option>\n          <option>Divorciado</option>\n        </select>\n      </div>\n      <label className=\"uk-form-label\">Grado Máximo de Estudios: {user.education_level}</label>\n      <div className=\"uk-form-controls\">\n        <select name=\"education_level\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={user.education_level ? user.education_level : \"\"}>\n          <option></option>\n          <option>Primaria</option>\n          <option>Secundaria</option>\n          <option>Preparatoria</option>\n          <option>Licenciatura</option>\n          <option>Posgrado</option>\n        </select>\n      </div>\n    </div>,\n    <div>\n      <label className=\"uk-form-label\">Teléfono/Whatsapp:</label>\n      <div className=\"uk-form-controls\">\n        <input onChange={handleInput} name=\"phone_number\" className=\"uk-input uk-border-pill\" type=\"number\" placeholder={user.phone_number ? user.phone_number : 5544332211} />\n      </div>\n      <label className=\"uk-form-label\">Correo electrónico:</label>\n      <div className=\"uk-form-controls\">\n        <input onChange={handleInput} name=\"email\" className=\"uk-input uk-border-pill\" type=\"email\" placeholder={user.email} />\n      </div>\n    </div>\n  ]\n\n  return (\n    <div className=\"uk-section\">\n      <div className=\"uk-container\">\n        \n        { route !== 'edit' ? (\n          <div>\n            <div className=\"uk-width-auto\">\n              <img className=\"uk-border-circle\" width={128} height={128} src={user.profile_picture} alt=\"User profile\" />\n            </div>\n            <h2>{user.first_name} {user.last_name1}</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('edit')} >\n              Editar mi perfil\n            </button>\n          </div>\n          ) : (\n            null\n          )}\n        \n        <div className=\"uk-container uk-margin\">\n          { route !== 'edit' ? (\n            <div>\n              <div className=\"uk-child-width-1-1 uk-hidden@s\">\n              <div className=\"card-section-white\">\n                  <h4>Información Personal</h4>\n                  <p>Nombres: {user.first_name}</p>\n                  <p>Apellidos: {user.last_name1} {user.last_name2}</p>\n                  <p>Fecha de nacimiento: {moment.utc(user.date_of_birth).format('LL')}</p>\n                  <p>Género: {user.gender === 'N' ? 'No definido' : user.gender === 'F' ? 'Femenino' : 'Masculino'}</p>\n                </div>\n                <div className=\"card-section-white\">\n                  <h4>Información Social</h4>\n                  <p>CURP: {user.curp ? user.curp : 'Información no registrada'}</p>\n                  <p>Estado Civil: {user.marital_status}</p>\n                  <p>Código Postal: {user.zip_code}</p>\n                  <p>Grado Máximo de Estudios: {user.education_level}</p>\n                </div>\n                <div className=\"card-section-white\">\n                  <h4>Información Plataforma</h4>\n                  <p>Teléfono: {user.phone_number ? user.phone_number : \"No hay número registrado\"}</p>\n                  <p>Email: {user.email}</p>\n                  <p>Contraseña: *********</p>\n                </div>\n              </div>\n              <div className=\"uk-flex uk-child-width-1-3 uk-visible@s\">\n                <div className=\"card-section-white\">\n                  <h4>Información Personal</h4>\n                  <p>Nombres: {user.first_name}</p>\n                  <p>Apellidos: {user.last_name1} {user.last_name2}</p>\n                  <p>Fecha de nacimiento: {moment.utc(user.date_of_birth).format('LL')}</p>\n                  <p>Género: {user.gender === 'N' ? 'No definido' : user.gender === 'F' ? 'Femenino' : 'Masculino'}</p>\n                </div>\n                <div className=\"card-section-white\">\n                  <h4>Información Social</h4>\n                  <p>CURP: {user.curp ? user.curp : 'Información no registrada'}</p>\n                  <p>Estado Civil: {user.marital_status}</p>\n                  <p>Código Postal: {user.zip_code}</p>\n                  <p>Grado Máximo de Estudios: {user.education_level}</p>\n                </div>\n                <div className=\"card-section-white\">\n                  <h4>Información Plataforma</h4>\n                  <p>Teléfono: {user.phone_number ? user.phone_number : \"No hay número registrado\"}</p>\n                  <p>Email: {user.email}</p>\n                  <p>Contraseña: *********</p>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <Questionnaire title=\"Mi Perfil\" isComplete={true} questionnaire={ProfileQuestionnaire} handleSubmit={handleSubmit} form={form} backButton={backButton}/>\n            // <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n            //   <div className=\"uk-margin\">\n            //     <label className=\"uk-form-label\" htmlFor=\"date\">Nombres:</label>\n            //     <div className=\"uk-form-controls\">\n            //       <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"first_name\" onChange={handleInput} placeholder={user.first_name} />\n            //     </div>\n            //     <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Apellido paterno:</label>\n            //     <div className=\"uk-form-controls\">\n            //       <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"last_name1\" onChange={handleInput} placeholder={user.last_name1} />\n            //     </div>\n            //     <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Apellido materno:</label>\n            //     <div className=\"uk-form-controls\">\n            //       <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"last_name2\" onChange={handleInput} placeholder={user.last_name2} />\n            //     </div>\n            //     <label className=\"uk-form-label\">Fecha de nacimiento: {moment.utc(user.date_of_birth).format('LL')}</label>\n            //     <div className=\"uk-inline\">\n            //       <input onChange={handleInput} name=\"date_of_birth\" className=\"uk-input uk-border-pill\" type=\"date\" />\n            //     </div>\n            //     <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Género</label>\n            //     <div className=\"uk-margin uk-flex uk-flex-around\">\n            //       <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"F\" />  Mujer</label>\n            //       <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"M\" />  Hombre</label>\n            //       <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"N\" />  No binario</label>\n            //     </div>\n            //     <label className=\"uk-form-label\">CURP:</label>\n            //     <div className=\"uk-form-controls\">\n            //       <input onChange={handleInput} name=\"curp\" className=\"uk-input uk-border-pill\" type=\"text\" placeholder={user.curp} />\n            //     </div>\n            //     <label className=\"uk-form-label\">Código Postal:</label>\n            //     <div className=\"uk-form-controls\">\n            //       <input onChange={handleInput} name=\"zip_code\" className=\"uk-input uk-border-pill\" type=\"number\" placeholder={user.zip_code ? user.zip_code : 5544332211} />\n            //     </div>\n            //     <label className=\"uk-form-label\">Estado Civil:</label>\n            //     <div className=\"uk-form-controls\">\n            //       <select className=\"uk-select uk-border-pill\">\n            //         <option>Soltero</option>\n            //         <option>Casado</option>\n            //         <option>Viudo</option>\n            //         <option>Divorciado</option>\n            //       </select>\n            //     </div>\n            //     <label className=\"uk-form-label\">Grado Máximo de Estudios:</label>\n            //     <div className=\"uk-form-controls\">\n            //       <select className=\"uk-select uk-border-pill\">\n            //         <option>Primaria</option>\n            //         <option>Secundaria</option>\n            //         <option>Preparatoria</option>\n            //         <option>Licenciatura</option>\n            //         <option>Posgrado</option>\n            //       </select>\n            //     </div>\n            //     <label className=\"uk-form-label\">Teléfono/Whatsapp:</label>\n            //     <div className=\"uk-form-controls\">\n            //       <input onChange={handleInput} name=\"phone_numnber\" className=\"uk-input uk-border-pill\" type=\"number\" placeholder={user.phone_number ? user.phone_number : 5544332211} />\n            //     </div>\n            //     <label className=\"uk-form-label\">Correo electrónico:</label>\n            //     <div className=\"uk-form-controls\">\n            //       <input onChange={handleInput} name=\"email\" className=\"uk-input uk-border-pill\" type=\"email\" placeholder={user.email} />\n            //     </div>\n            //   </div>\n            //   <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n            //     <button type=\"submit\" className=\"uk-button uk-button-primary uk-border-pill uk-width-3-5 uk-width-1-4@s uk-margin\" disabled={isButtonDisabled} >\n            //       Guardar cambios\n            //     </button>\n            //   </div>\n            // </form>\n          )}\n          \n        </div>\n      </div>\n      \n    </div>\n  )\n\n}\n\nexport default Profile","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/profile' : 'http://localhost:3000/api/profile';\n\n// Export edit function, which receives data as parameters to enable profile edition\nexport const editProfile = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /edit route, while sending the parameters obtained from the form/front-end\n  return axios.patch(`${base_url}/edit`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n      \"Content-Type\": \"multipart/form-data\"     // Set content as multipart/form-data for files and text\n    }\n  });\n\n};","import React, { useState } from 'react'\n\nconst VitalSignsCard = ({ vitalsign_name, vitalsign_icon, form_name, handleInputChange }) => {\n\n  const [ showInput, setShowInput ] = useState(false)\n\n  const toggleInput = () => setShowInput(true);\n\n  return (\n    <div className={`uk-card uk-card-hover uk-card-body uk-padding-small`} onClick={toggleInput}>\n      <h5>{vitalsign_name}</h5>\n      <div className=\"uk-flex uk-flex-center\">\n        <img className=\"uk-width-4-5\" src={vitalsign_icon} alt=\"\"/>\n      </div>\n      {\n        showInput ? \n          <input className=\"uk-input uk-width-4-5\" type=\"number\" step=\"any\" name={form_name} onChange={handleInputChange} />\n        : null\n      }\n    </div>\n  )\n}\n\n\nexport default VitalSignsCard","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/vitalsigns' : 'http://localhost:3000/api/vitalsigns';\n\n// Export get function to retrieve all prescriptions of the current logged in user\nexport const getVitalSigns = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable prescription creation\nexport const createVitalSigns = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getOneVitalSigns = (vitalSignsID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${vitalSignsID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getOneVitalSignsConsultation = (consultationID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/vitals/${consultationID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editVitalSigns = (vitalSignsID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${vitalSignsID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useState } from 'react';\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport VitalSignsCard from '../vitalsigns/VitalSignsCard'\n\nimport happy_img from '../../images/icons/happy-face.svg'\nimport sad_img from '../../images/icons/sad-face.svg'\nimport add_vitals_icon from '../../images/icons/add-vitals.svg'\nimport blood_pressure_icon from '../../images/icons/blood-pressure.svg'\nimport blood_sugar_icon from '../../images/icons/blood-sugar.svg'\nimport heart_rate_icon from '../../images/icons/heart-rate.svg'\nimport temperature_icon from '../../images/icons/temperature.svg'\nimport weight_icon from '../../images/icons/weight.svg'\n\nimport { getVitalSigns, getOneVitalSigns, createVitalSigns } from '../../services/vitalsigns-services'\n\nconst VitalSignsForm = ({ type, setShowVitalsForm, setVitalsFormValues, setRoute, vitalsFormValues = null }) => {\n\n  // const [ formValues, setFormValues ] = useState({temperature: null, blood_pressure_sys: null, blood_pressure_dias: null, blood_sugar: null, heart_rate: null, weight: null});\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  const saveVitalSigns = (event) => {\n\n    event.preventDefault();\n\n    if ( type === 'consultation' )\n      setShowVitalsForm(false);\n    else {\n\n      createVitalSigns(vitalsFormValues)\n      .then( res => {\n\n        const { vitalsigns } = res.data;\n        console.log(vitalsigns)\n\n        // Send UIkit success notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> '¡Los signos vitales fueron registrados exitosamente!'`,\n          pos: 'bottom-center',\n          status: 'success'\n        });\n\n      })\n      .catch( error => {\n        console.log('error creando signos vitales');\n        console.log(error);\n\n        // Send UIkit error notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> ${error}`,\n          pos: 'bottom-center',\n          status: 'danger'\n        });\n\n      })\n\n    }\n      setRoute(null);\n\n  }\n\n  // const handleSubmit = (event) => {\n\n  //   event.preventDefault();\n  //   console.log(formValues);\n  //   setIsButtonDisabled(true);\n\n  //   createVitalSigns(formValues)\n  //   .then( res => {\n\n  //     const { vitalSigns } = res.data    // Destructure updated preferences document from response\n  //     console.log(vitalSigns)\n\n  //     // Send UIkit success notification\n  //     UIkit.notification({\n  //       message: `<span uk-icon='close'></span> '¡El registro de signos vitales fue creado exitosamente!'`,\n  //       pos: 'bottom-center',\n  //       status: 'success'\n  //     });\n\n  //     if ( type === 'consultation' )\n  //       setShowVitalsForm(false)\n  //     else setRoute('vitalSigns')\n\n  //     // setRoute('consultations');\n  //     setIsButtonDisabled(false);\n\n  //   })\n  //   .catch( error => {\n\n  //     console.log(error);\n\n  //     // Send UIkit error notification\n  //     UIkit.notification({\n  //       message: `<span uk-icon='close'></span> ${error}`,\n  //       pos: 'bottom-center',\n  //       status: 'danger'\n  //     });\n      \n  //     setIsButtonDisabled(false);\n\n  //   });\n\n  // }\n\n  const handleInputChange = (event) => {\n    event.persist();\n\n    if(event.target.type === 'number') event.target.value = parseFloat(event.target.value);\n    setVitalsFormValues( currentValues => ({\n      ...currentValues,\n      [event.target.name]: event.target.value\n    }))\n  }\n\n  return (\n    <form className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <div className=\"uk-width-1-1 uk-width-1-4@s uk-child-width-1-3 uk-grid uk-grid-collapse uk-grid-match\">\n          \n            <VitalSignsCard vitalsign_name=\"Temperatura Corporal\" vitalsign_icon={temperature_icon} handleInputChange={handleInputChange} form_name=\"temperature\" />\n            <VitalSignsCard vitalsign_name=\"Presión Sistólica\" vitalsign_icon={blood_pressure_icon} handleInputChange={handleInputChange} form_name=\"blood_pressure_sys\" />\n            <VitalSignsCard vitalsign_name=\"Glucosa\" vitalsign_icon={blood_sugar_icon} handleInputChange={handleInputChange} form_name=\"blood_sugar\" />\n\n            <VitalSignsCard vitalsign_name=\"Frecuencia Cardiaca\" vitalsign_icon={heart_rate_icon} handleInputChange={handleInputChange} form_name=\"heart_rate\" />\n            <VitalSignsCard vitalsign_name=\"Presión Diastólica\" vitalsign_icon={blood_pressure_icon} handleInputChange={handleInputChange} form_name=\"blood_pressure_dias\" />\n            <VitalSignsCard vitalsign_name=\"Peso\" vitalsign_icon={weight_icon} handleInputChange={handleInputChange} form_name=\"weight\" />\n\n        </div>\n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin\">\n        <button onClick={saveVitalSigns} className=\"uk-button uk-button-primary uk-border-pill\" disabled={isButtonDisabled} >\n          Agregar Signos Vitales\n        </button>\n      </div>     \n    </form>\n  )\n}\n\nexport default VitalSignsForm","import React, { useEffect, useContext, useState } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { AppContext } from '../../AppContext';\nimport UIkit from 'uikit';\nimport moment from 'moment';\n\nimport VitalSignsForm from '../vitalsigns/VitalSignsForm'\nimport ProfileCard from '../profile/ProfileCard'\n\nimport happy_img from '../../images/icons/happy-face.svg'\nimport sad_img from '../../images/icons/sad-face.svg'\nimport sick_img from '../../images/icons/sick-face.svg'\nimport add_vitals_icon from '../../images/icons/add-vitals.svg'\nimport blood_pressure_icon from '../../images/icons/blood-pressure.svg'\nimport blood_sugar_icon from '../../images/icons/blood-sugar.svg'\nimport heart_rate_icon from '../../images/icons/heart-rate.svg'\nimport temperature_icon from '../../images/icons/temperature.svg'\nimport weight_icon from '../../images/icons/weight.svg'\n\nconst Home = () => {\n\n  const { user, setUser, route, setRoute } = useContext(AppContext); // Destructure user state variable\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n\n  const [ vitalsFormValues, setVitalsFormValues ] = useState({temperature: null, blood_pressure_sys: null, blood_pressure_dias: null, blood_sugar: null, heart_rate: null, weight: null});\n\n  // Hook to update component when user state variable is modified\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n  }, [user] );\n  \n  return (\n    <div className=\"content\">\n      <div className=\"uk-section\">\n        <h2 className=\"uk-margin-small-top\">Hola {user.first_name === \"Nombres\" ? \"Usuario\" : user.first_name}</h2>\n        <p>{moment(Date.now()).locale('es').format('LL')}</p>\n        <div className=\"uk-container uk-overflow-auto\">\n          <div className=\"uk-grid uk-grid-collapse\">\n            <div className=\"uk-width-1-1 uk-width-1-3@s uk-grid uk-grid-collapse\">\n              <div className=\"uk-width-1-1\">\n                <h4>¿Cómo te sientes?</h4>\n              </div>\n              <div className=\"uk-width-1-3 uk-card-hover uk-padding\">\n                <img src={happy_img} alt=\"\"/>\n              </div>\n              <div className=\"uk-width-1-3 uk-card-hover uk-padding uk-light\">\n                <img src={sad_img} alt=\"\"/>\n              </div>\n              <div className=\"uk-width-1-3 uk-card-hover uk-padding uk-light\">\n                <img src={sick_img} alt=\"\"/>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-grid uk-grid-collapse\">\n              <ul className=\"uk-width-1-1 uk-child-width-1-2@s\" uk-accordion=\"true\">\n                <li className=\"uk-open\">\n                  <a className=\"uk-accordion-title\" href=\"#\">Mis Medicamentos</a>\n                  <div className=\"uk-accordion-content\">\n                    <table className=\"uk-table uk-table-hover uk-table-divider uk-margin-small-bottom\">\n                      <tbody>\n                        <tr>\n                          <td className=\"uk-text-center\">Medicamento 1</td>\n                          <td>\n                            <span className=\"uk-margin-small-right\" uk-icon=\"bell\"></span>\n                            <span className=\"uk-margin-small-right\" uk-icon=\"info\"></span>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td className=\"uk-text-center\">Medicamento 2</td>\n                          <td>\n                            <span className=\"uk-margin-small-right\" uk-icon=\"bell\"></span>\n                            <span className=\"uk-margin-small-right\" uk-icon=\"info\"></span>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td className=\"uk-text-center\">Medicamento 3</td>\n                          <td>\n                            <span className=\"uk-margin-small-right\" uk-icon=\"bell\"></span>\n                            <span className=\"uk-margin-small-right\" uk-icon=\"info\"></span>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                    <button className=\"uk-button uk-button-default uk-border-pill uk-button-small\">Agregar Medicamento</button>\n                  </div>\n                </li>\n                <li>\n                  <a className=\"uk-accordion-title\" href=\"#\">Mis Padecimientos</a>\n                  <div className=\"uk-accordion-content\">\n                    <table className=\"uk-table uk-table-hover uk-table-divider uk-margin-small-bottom\">\n                        <tbody>\n                          <tr>\n                            <td className=\"uk-text-center\">\n                              Padecimiento 1\n                              <span className=\"uk-margin-small-left\" uk-icon=\"info\"></span>\n                            </td>\n                            <td>\n                              <button className=\"uk-button uk-button-default uk-border-pill uk-button-small\">+ Consulta</button>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"uk-text-center\">\n                              Padecimiento 2\n                              <span className=\"uk-margin-small-left\" uk-icon=\"info\"></span>\n                            </td>\n                            <td>\n                              <button className=\"uk-button uk-button-default uk-border-pill uk-button-small\">+ Consulta</button>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"uk-text-center\">\n                              Padecimiento 3\n                              <span className=\"uk-margin-small-left\" uk-icon=\"info\"></span>\n                            </td>\n                            <td>\n                              <button className=\"uk-button uk-button-default uk-border-pill uk-button-small\">+ Consulta</button>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                      <button className=\"uk-button uk-button-default uk-border-pill uk-button-small\">Agregar Padecimiento</button>\n                  </div>\n                </li>\n                <li>\n                  <a className=\"uk-accordion-title\" href=\"#\">Signos Vitales</a>\n                  <div className=\"uk-accordion-content\">\n                    <VitalSignsForm vitalsFormValues={vitalsFormValues} setVitalsFormValues={setVitalsFormValues} setRoute={setRoute}/>\n                  </div>\n                </li>\n              </ul>\n            </div>\n          </div>\n          \n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/studies' : 'http://localhost:3000/api/studies';\n\n// Export get function to retrieve all prescriptions of the current logged in user\nexport const getStudies = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable prescription creation\nexport const createStudy = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getStudy = (studyID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${studyID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editStudy = (studyID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${studyID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useState } from 'react';\n\nconst StudyForm = ({ handleSubmit, handleInput, handleFileInput, form, isButtonDisabled, objectHandler }) => {\n\n  const [ drugFields, setDrugFields ] = useState([]);\n  const [ drugQuantity, setDrugQuantity] = useState(0);\n\n  useEffect( () => {\n\n  }, [drugQuantity])\n  \n  const addDrugField = (event) => {\n\n    event.preventDefault();\n    drugFields.push(1)\n\n    setDrugFields(drugFields);\n    setDrugQuantity(drugQuantity+1)\n\n    return null;\n\n  }\n\n  const deleteDrugField = (event) => {\n\n    event.preventDefault();\n    drugFields.pop()\n\n    setDrugFields(drugFields);\n    setDrugQuantity(drugQuantity-1)\n\n    return null;\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <h4>Datos del Estudio</h4>\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de estudio:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"date\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"doctor\">Doctor que solicitó:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"doctor\" onChange={handleInput} placeholder=\"Nombre del doctor...\" />\n        </div>\n        \n        <div className=\"uk-margin\">\n          <h4>Estudio</h4>\n          <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre de Estudio:</label>\n          <div className=\"uk-form-controls\">\n            <input className=\"uk-input\" type=\"text\" name=\"study_name\" onChange={handleInput} placeholder=\"Nombre del estudio...\" />\n          </div>\n          <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre de Laboratorio:</label>\n          <div className=\"uk-form-controls\">\n            <input className=\"uk-input\" type=\"text\" name=\"facility_name\" onChange={handleInput} placeholder=\"Dónde se realizó los estudios\" />\n          </div>\n          <div className=\"uk-flex uk-flex-middle uk-flex-around uk-margin\">\n            <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Imagen del Estudio:</label>\n            <div className=\"js-upload uk\" uk-form-custom=\"true\">\n              <input onChange={handleFileInput} name=\"image\" type=\"file\" multiple />\n              <button className=\"uk-button uk-button-default\" type=\"button\" tabIndex=\"-1\">Seleccionar</button>\n            </div>\n          </div>\n        </div>\n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-border-pill uk-width-2-3 uk-width-1-4@m\" disabled={isButtonDisabled} >\n          Crear Estudio\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default StudyForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst StudyInfo = ({ study }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de Estudio: {moment(study.date).locale('es').format('LL')}</p>\n        <p>Doctor: {study.doctor}</p>\n        { study.image ?\n            <div uk-lightbox=\"true\">\n              <a className=\"uk-button uk-button-default\" href={study.image} data-alt=\"Image\">Ver Imagen</a>\n            </div>\n          : null\n        }\n        <div className=\"uk-margin\" key=\"index\">\n          <p>Nombre del Estudio : {study.study_name}</p>\n          <p>Nombre de Laboratorio : {study.facility_name}</p>\n        </div>\n        \n      </div>\n    </div>\n  )\n}\n\nexport default StudyInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport { getStudies, createStudy, getStudy, editStudy } from '../../services/study-services';\nimport StudyForm from './StudyForm';\nimport StudyInfo from './StudyInfo';\n\nconst Study = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput, handleFileInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ study, setStudy] = useState({});\n  const [ studies, setStudies ] = useState([]);\n  const [ showForm, setShowForm ] = useState(false);\n  const [ showConsultation, setShowConsultation ] = useState(false);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    if ( route !== 'create' && route !== 'read' ) {\n      getStudies()\n      .then( res => {\n      \n        const { studies } = res.data;\n        setStudies(studies);\n        setRoute('studies');\n\n      });\n    }\n\n    \n    \n  }, [route]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true)\n\n    const formData = new FormData();      // Declare formData as new instance of FormData class\n    const { image } = form;     // Destructure profile_picture from form\n\n    // Iterate through every key in form object and append name:value to formData\n    for (let key in form) {\n\n      // If profile_picture, append as first item in array (currently 1 file allowed, index 0)\n      if ( key === 'image' ) formData.append(key, image[0]);\n\n      else formData.append(key, form[key]);\n      \n    }\n    \n    // Call edit service with formData as parameter, which includes form data for user profile information\n    createStudy(formData)\n    .then( res => {\n\n      const { study } = res.data   // Destructure updated user document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡Tu estudio fue creado exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('studies');\n      setIsButtonDisabled(false);\n      setObjectHandler({});\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n      setIsButtonDisabled(false)\n\n    });\n    \n  };\n\n  const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadStudy = (study) => {\n    setStudy(study);\n    setRoute('read');\n  }\n\n  return (\n\n    <div className=\"content\">\n      \n        { route === 'studies' ? (\n          <div className=\"uk-section\">\n            <h2>Estudios</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nuevo Estudio\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { studies.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado estudios</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center uk-visible\">Estudio</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { studies ? \n                      studies.map( (study, index) => \n                        <tr key={index}>\n                          <td className=\"uk-text-center\">{moment(study.date).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center uk-visible\">{study.study_name}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadStudy({study})} >\n                              Ver\n                            </button>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nuevo Estudio</h2>\n                  { objectHandler ?\n                      <h4>{objectHandler._id}</h4>\n                      : null\n                  }\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('studies')} >\n                    Regresar\n                  </button>\n                  <StudyForm handleSubmit={handleSubmit} handleInput={handleInput} handleFileInput={handleFileInput} form={form} isButtonDisabled={isButtonDisabled} objectHandler={objectHandler}/>\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Estudio</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('studies')} >\n                    Regresar\n                  </button>\n                  <StudyInfo {...study} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('studies')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n    \n  )\n}\n\nexport default Study","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/consultations' : 'http://localhost:3000/api/consultations';\n\n// Export get function to retrieve all consultations of the current logged in user\nexport const getConsultations = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable consultation creation\nexport const createConsultation = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getConsultation = (consultationID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${consultationID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editConsultation = (consultationID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${consultationID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/emergencies' : 'http://localhost:3000/api/emergencies';\n\n// Export get function to retrieve all emergencies of the current logged in user\nexport const getEmergencies = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable emergency creation\nexport const createEmergency = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getEmergency = (emergencyID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${emergencyID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editEmergency = (emergencyID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${emergencyID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/hospitalizations' : 'http://localhost:3000/api/hospitalizations';\n\n// Export get function to retrieve all hospitalizations of the current logged in user\nexport const getHospitalizations = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable hospitalization creation\nexport const createHospitalization = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getHospitalization = (hospitalizationID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${hospitalizationID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editHospitalization = (hospitalizationID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${hospitalizationID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\nimport 'moment/locale/es'  // without this line it didn't work\nimport { getConsultations } from '../../services/consultation-services';\nimport { getEmergencies } from '../../services/emergency-services';\nimport { getHospitalizations } from '../../services/hospitalization-services';\n\nmoment.locale('es')\n\nconst Disease = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ disease, setDisease] = useState({});\n  const [ diseases, setDiseases ] = useState([]);\n  const [ consultations, setConsultations ] = useState([]);\n  const [ emergencies, setEmergencies ] = useState([]);\n  const [ hospitalizations, setHospitalizations ] = useState([]);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  let diseasesHandler = []\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getConsultations()\n    .then( res => {\n      \n      const { consultations } = res.data;\n      setConsultations(consultations);\n\n      for ( let i = 0 ; i < consultations.length ; i++ ) {\n        diseasesHandler.push(consultations[i].diagnosis)\n      }\n\n    })\n\n    getEmergencies()\n    .then( res => {\n      \n      const { emergencies } = res.data;\n      setEmergencies(emergencies);\n\n      for ( let i = 0 ; i < emergencies.length ; i++ ) {\n        diseasesHandler.push(emergencies[i].diagnosis)\n      }\n\n    })\n\n    getHospitalizations()\n    .then( res => {\n      \n      const { hospitalizations } = res.data;\n      setHospitalizations(hospitalizations);\n\n      for ( let i = 0 ; i < hospitalizations.length ; i++ ) {\n        diseasesHandler.push(hospitalizations[i].diagnosis)\n      }\n\n      setDiseases(diseasesHandler);\n      setRoute('diseases')\n\n    })\n\n    console.log(diseasesHandler)\n    console.log(diseases)\n    \n  }, [route]);\n\n  // const handleSubmit = (event) => {\n\n  //   event.preventDefault();\n  //   console.log(form);\n  //   setIsButtonDisabled(true);\n\n  //   createConsultation(form)\n  //   .then( res => {\n\n  //     const { consultation } = res.data    // Destructure updated preferences document from response\n  //     console.log(consultation)\n\n  //     // Send UIkit success notification\n  //     UIkit.notification({\n  //       message: `<span uk-icon='close'></span> '¡La consulta fue creada exitosamente!'`,\n  //       pos: 'bottom-center',\n  //       status: 'success'\n  //     });\n\n  //     setRoute('consultations');\n  //     setIsButtonDisabled(false);\n\n  //   })\n  //   .catch( error => {\n\n  //     console.log(error);\n\n  //     // Send UIkit error notification\n  //     UIkit.notification({\n  //       message: `<span uk-icon='close'></span> ${error}`,\n  //       pos: 'bottom-center',\n  //       status: 'danger'\n  //     });\n      \n  //     setIsButtonDisabled(false);\n\n  //   });\n\n  // }\n\n  // const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadDisease = (disease) => {\n    setDisease(disease);\n    setRoute('read');\n  }\n\n  // const goToPrescription = (event, consultation, newRoute) => {\n  //   event.preventDefault();\n  //   setConsultation(consultation);\n  //   setObjectHandler(consultation);\n  //   setRoute(newRoute);\n  //   console.log(objectHandler)\n  // }\n\n  // const goToStudies = (event, consultation, newRoute) => {\n  //   event.preventDefault();\n  //   setObjectHandler(consultation);\n  //   setRoute(newRoute);\n  //   console.log(objectHandler);\n  // }\n\n  return (\n\n    <div className=\"content\">\n      { route === 'diseases' ? (\n          <div className=\"uk-section\">\n            <h2>Mis Padecimientos</h2>\n            {/* <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nuevo Padecimiento\n            </button> */}\n            <div className=\"uk-overflow-auto\">\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Diagnóstico</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { diseases ? \n                      diseases.map( (disease, index) => \n                        <tr key={index} >\n                          <td className=\"uk-text-center\">{disease ? disease : 'No definida'}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" uk-toggle={`target: #modal-sections-${index}`} >\n                              Ver\n                            </button>\n                            <div id={`modal-sections-${index}`} className=\"uk-flex-top\" uk-modal=\"true\">\n                              <div className=\"uk-modal-dialog uk-margin-auto-vertical\">\n                                <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\" />\n                                <div className=\"uk-modal-header\">\n                                  <h3 className=\"uk-text-center\">Datos del Padecimiento</h3>\n                                  <p>Nombre: {disease}</p>\n                                  <p>Fecha de primer diagnóstico: No disponible</p>\n                                  <p>Doctor o Clínica que realizó diagnóstico: No disponible</p>\n                                  <p>Aquí se presentará un resumen del padecimiento, así como una liga para mayor información</p>\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                          <td></td>\n                          {/* <td>\n                            <a href={`#modal-sections-${index}`} uk-toggle={`target: #modal-sections-${index}`}>\n                              <span className=\"uk-margin-small-right\" uk-icon=\"more-vertical\"></span>\n                            </a>\n                            \n                          </td> */}\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : ( null\n            // route === 'create' ? (\n            //   <div className=\"uk-section\">\n            //     <div className=\"uk-container\">\n            //       <h2>Nueva Consulta</h2>\n            //       <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n            //         Regresar\n            //       </button>\n            //       <ConsultationFormSpecial handleSubmit={handleSubmit} handleInput={handleInput} form={form} isButtonDisabled={isButtonDisabled} setVitalsFormValues={setVitalsFormValues}/>\n            //     </div>\n            //   </div>\n            // ) : (\n            //   route === 'read' ? (\n            //     <div className=\"uk-section\">\n            //       <h2>Ver Consulta</h2>\n            //       <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n            //         Regresar\n            //       </button>\n            //       <ConsultationInfo {...consultation} />\n            //     </div>\n            //   ) : (\n            //     <div className=\"uk-section\">\n            //       <h2>Cargando...</h2>\n            //       <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n            //         Regresar\n            //       </button>\n            //     </div> \n            //   )\n            // )\n          )\n        }\n    </div>\n    \n  )\n}\n\nexport default Disease","import React, { useEffect, useState } from 'react'\nimport cie10 from '../../catalogs/cie10.json'\nimport procedures from '../../catalogs/procedimientos.json'\nimport drugs from '../../catalogs/drugs.json'\n\nconst CatalogSearchbar = ({type, form, handleFormInput}) => {\n\n  const [ searchResults, setSearchResults ] = useState('');\n  const [ searchValue, setSearchValue ] = useState('');\n  const [ showDrop, setShowDrop ] = useState(false);\n\n  const handleInput = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  let results = [];\n\n  useEffect( () => {\n\n    switch (type) {\n      case \"diagnosis\": results = cie10.filter( disease =>\n        disease.NOMBRE.toLowerCase().includes(searchValue)\n        );\n        break;\n\n      case \"procedure\": results = procedures.filter( disease =>\n        disease.PRO_NOMBRE.toLowerCase().includes(searchValue)\n        );\n        break;\n\n      case \"drugs\": results = drugs.filter( disease =>\n        disease.generic_name.toLowerCase().includes(searchValue)\n        );\n        break;\n    }\n\n    setSearchResults(results);\n\n    if ( results.length <= 15 ) {\n      setShowDrop(true);\n    }\n\n  }, [searchValue]);\n\n\n  return (\n      <div className=\"uk-margin uk-width-1-1\">\n        <div className=\"uk-search uk-search-default uk-width-1-1\">\n          <span className=\"uk-search-icon-flip\" uk-search-icon=\"true\"></span>\n          <input\n            className=\"uk-search-input uk-text-center uk-border-pill\"\n            type=\"search\"\n            placeholder={ type === 'diagnosis' ? \"Busca padecimiento...\" : type === 'drugs' ? \"Busca por nombre genérico...\" : \"Busca procedimiento...\"}\n            value={searchValue}\n            onChange={handleInput}\n          />\n        </div>\n        { showDrop ? (\n            <select className=\"uk-select uk-border-pill\" name={type} onChange={handleFormInput}>\n              <option>Selecciona por favor</option>\n              {searchResults.map( (disease, index) => <option key={index} value={ type === \"diagnosis\" ? disease.NOMBRE : type === \"drugs\" ? disease.generic_name : disease.PRO_NOMBRE} >{ type === \"diagnosis\" ? disease.NOMBRE : type === \"drugs\" ? disease.generic_name : disease.PRO_NOMBRE}</option> )}\n            </select>\n          ) : null \n        }\n      </div>\n  )\n}\n\nexport default CatalogSearchbar","import React, { useState } from 'react';\nimport CatalogSearchbar from '../common/CatalogSearchbar'\nimport VitalSignsForm from '../vitalsigns/VitalSignsForm'\n\nconst ConsultationForm = ({ handleSubmit, handleInput, form, isButtonDisabled, setVitalsFormValues }) => {\n\n  const [ showVitalsForm, setShowVitalsForm ] = useState(false);\n\n  const toggleVitalsForm = (event) => {\n    event.preventDefault();\n    setShowVitalsForm(!showVitalsForm)\n  }\n\n  return (\n    <div>\n      {\n        !showVitalsForm ? (\n            <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n              <div className=\"uk-margin\">\n                <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de consulta</label>\n                <div className=\"uk-form-controls\">\n                  <input className=\"uk-input\" type=\"date\" name=\"date\" onChange={handleInput} />\n                </div>\n                <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Doctor que atendió:</label>\n                <div className=\"uk-form-controls\">\n                  <input className=\"uk-input\" type=\"text\" name=\"doctor\" onChange={handleInput} placeholder=\"Nombre del doctor...\" />\n                </div>\n                <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Motivo de consulta</label>\n                <div className=\"uk-form-controls\">\n                  <input className=\"uk-input\" type=\"text\" name=\"chief_complaint\" onChange={handleInput} placeholder=\"Dolor, fiebre, etc...\" />\n                </div>\n                <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Diagnóstico</label>\n                <div className=\"uk-form-controls\">\n                  <CatalogSearchbar type=\"diagnosis\" form={form} handleFormInput={handleInput}/>\n                </div>\n              </div>\n              <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin\">\n                {\n                  showVitalsForm ? (\n                    <button type=\"submit\" className=\"uk-button uk-button-secondary uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={toggleVitalsForm} >\n                      - Signos Vitales\n                    </button>\n                  ) : (\n                    <button type=\"submit\" className=\"uk-button uk-button-secondary uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={toggleVitalsForm}  >\n                      + Signos Vitales\n                    </button>\n                  )\n                }\n              </div>\n              <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin\">\n                <button type=\"submit\" className=\"uk-button uk-button-primary uk-button uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" disabled={isButtonDisabled} >\n                  Crear consulta\n                </button>\n              </div>\n            </form>\n        ) : (\n          <div className=\"uk-section\">\n            <h2>Registro de Signos Vitales</h2>\n            <button className=\"uk-button uk-button-secondary uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={toggleVitalsForm} >\n              Regresar a Consulta\n            </button>\n            <VitalSignsForm type=\"consultation\" setShowVitalsForm={setShowVitalsForm} setVitalsFormValues={setVitalsFormValues}/>\n          </div>\n        )\n      }\n    \n    </div>\n    \n  )\n}\n\nexport default ConsultationForm","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\nimport { getOneVitalSignsConsultation } from '../../services/vitalsigns-services'\n\nimport 'moment/locale/es'  // without this line it didn't work\nmoment.locale('es')\n\nconst ConsultationInfo = ({ consultation }) => {\n\n  const [ vitals, setVitals ] = useState({});\n\n  useEffect( () => {\n\n    getOneVitalSignsConsultation(consultation._id)\n    .then( res => {\n\n      const { vitalsigns } = res.data;\n      console.log(vitalsigns)\n      setVitals(vitalsigns)\n    })\n\n  }, [])\n\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de consulta: {moment(consultation.date).locale('es').format('LL')}</p>\n        <p>Doctor: {consultation.doctor}</p>\n        <p>Motivo de consulta: {consultation.chief_complaint}</p>\n        <p>Diagnóstico: {consultation.diagnosis}</p>\n        <p>Temperatura: {vitals.temperature ? vitals.temperature : 'No registrada'}</p>\n        <p>Presión Arterial: {vitals.blood_pressure_sys ? `${vitals.blood_pressure_sys} / ${vitals.blood_pressure_dias}` : 'No registrada'}</p>\n        <p>Frecuencia Cardiaca: {vitals.heart_rate ? vitals.heart_rate : 'No registrada'}</p>\n        <p>Nivel de Glucosa: {vitals.glucose ? vitals.glucose : 'No registrada'}</p>\n        <p>Peso: {vitals.weight ? vitals.weight : 'No registrado'}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ConsultationInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\nimport 'moment/locale/es'  // without this line it didn't work\n\nimport { getConsultations, createConsultation } from '../../services/consultation-services';\nimport { createVitalSigns } from '../../services/vitalsigns-services'\nimport ConsultationForm from './ConsultationForm';\nimport ConsultationFormSpecial from './ConsultationFormSpecial'\nimport ConsultationInfo from './ConsultationInfo';\n\nmoment.locale('es')\n\nconst Consultation = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [consultation, setConsultation] = useState({});\n  const [ consultations, setConsultations ] = useState([]);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  const [ vitalsFormValues, setVitalsFormValues ] = useState({temperature: null, blood_pressure_sys: null, blood_pressure_dias: null, blood_sugar: null, heart_rate: null, weight: null});\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getConsultations()\n    .then( res => {\n      \n      const { consultations } = res.data;\n      setConsultations(consultations);\n      setRoute('consultations');\n\n    })\n    \n  }, [isButtonDisabled]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();\n    setIsButtonDisabled(true);\n\n    createConsultation(form)\n    .then( res => {\n\n      const { consultation } = res.data    // Destructure updated preferences document from response\n\n      vitalsFormValues['consultation'] = consultation._id\n\n      // setVitalsFormValues( currentValues => ({\n      //   ...currentValues,\n      //   [date]: event.target.value\n      // }))\n\n      createVitalSigns(vitalsFormValues)\n      .then( res => {\n\n        const { vitalsigns } = res.data;\n\n      })\n      .catch( error => {\n        console.log('error creando signos vitales');\n        console.log(error);\n      })\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡La consulta fue creada exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('consultations');\n      setIsButtonDisabled(false);\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n      \n      setIsButtonDisabled(false);\n\n    });\n\n  }\n\n  const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadConsultation = (consultation) => {\n    setConsultation(consultation);\n    setRoute('read');\n  }\n\n  const goToPrescription = (event, consultation, newRoute) => {\n    event.preventDefault();\n    setConsultation(consultation);\n    setObjectHandler(consultation);\n    setRoute(newRoute);\n    console.log(objectHandler)\n  }\n\n  const goToStudies = (event, consultation, newRoute) => {\n    event.preventDefault();\n    setObjectHandler(consultation);\n    setRoute(newRoute);\n    console.log(objectHandler);\n  }\n\n  return (\n\n    <div className=\"content\">\n      \n        { route === 'consultations' ? (\n          <div className=\"uk-section\">\n            <h2>Consultas</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nueva Consulta\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { consultations.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado consultas</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center uk-visible@s\">Motivo de consulta</th>\n                    <th className=\"uk-text-center uk-visible@s\">Diagnostico</th>\n                    <th className=\"uk-text-center uk-visible@s\">Doctor</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { consultations ? \n                      consultations.map( (consultation, index) => \n                        <tr key={index} >\n                          <td className=\"uk-text-center\">{moment(consultation.date).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{consultation.chief_complaint}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{consultation.diagnosis}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{`Dr. ${consultation.doctor}`}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadConsultation({consultation})} >\n                              Ver Consulta\n                            </button>\n                          </td>\n                          <td>\n                            <a href={`#modal-sections-${index}`} uk-toggle={`target: #modal-sections-${index}`}>\n                              <span className=\"uk-margin-small-right\" uk-icon=\"more-vertical\"></span>\n                            </a>\n                            <div id={`modal-sections-${index}`} className=\"uk-flex-top\" uk-modal=\"true\">\n                              <div className=\"uk-modal-dialog uk-margin-auto-vertical\">\n                                <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\" />\n                                <div className=\"uk-modal-header\">\n                                  <h3 className=\"uk-text-center\">Datos de la Consulta</h3>\n                                  <p>Fecha: {moment(consultation.date).locale('es').format('LL')}</p>\n                                  <p>Doctor: {consultation.doctor}</p>\n                                </div>\n                                <div className=\"uk-modal-body uk-flex uk-flex-column\">\n                                  { consultation.prescription ? (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToPrescription(event, consultation, 'read')} >\n                                        <NavLink to=\"/recetas\">Ver Receta</NavLink>\n                                      </button>\n                                    ) : (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToPrescription(event, consultation, 'create')} >\n                                        <NavLink to=\"/recetas\">Agregar Receta</NavLink>\n                                      </button>\n                                    )\n                                  }\n                                  { consultation.studies ? (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToStudies(event, consultation, 'read')} >\n                                        <NavLink to=\"/estudios\">Ver Estudios</NavLink>\n                                      </button>\n                                    ) : (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToStudies(event, consultation, 'create')} >\n                                        <NavLink to=\"/estudios\">Agregar Estudios</NavLink>\n                                      </button>\n                                    )\n                                  }\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td className=\"uk-text-center\">Cargando</td>\n                        <td className=\"uk-text-center uk-visible@s\">Cargando</td>\n                        <td className=\"uk-text-center uk-visible@s\">Cargando</td>\n                        <td className=\"uk-text-center uk-visible@s\">Cargando</td>\n                        <td className=\"uk-text-center\">Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nueva Consulta</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n                    Regresar\n                  </button>\n                  <ConsultationFormSpecial handleSubmit={handleSubmit} handleInput={handleInput} form={form} isButtonDisabled={isButtonDisabled} setVitalsFormValues={setVitalsFormValues}/>\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Consulta</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n                    Regresar\n                  </button>\n                  <ConsultationInfo {...consultation} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('consultations')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n    \n  )\n}\n\nexport default Consultation","import { useState } from 'react';   // Import useState hook to create custom hook\n\n// Declare hook as a React functional component\nconst useDrugsForm = (drugsArray) => {\n  \n  // Declare form state variable and setForm function to update the form state variable\n  const [ form, setForm ] = useState({});\n  const [ array, setArray ] = useState([]);\n  const [ genericName, setGenericName ] = useState();\n  const [ brandName, setBrandName ] = useState();\n  const [ dosageForm, setDosageForm ] = useState();\n  const [ dose, setDose ] = useState();\n  const [ indications, setIndications ] = useState();\n\n  // Declare handleInput function for input data manipulation\n  const handleInput = (event) => {\n    \n    // Destructure input name and value (data that is being changed by user)\n    const { name, value } = event.target;\n\n    // When using checkboxes, store the values in an array\n    if ( event.target.type === 'checkbox' ) {\n      \n      array.push(value);\n      setArray(array);\n      setForm( prevState => ({...prevState, [name]: array}) );\n\n    } else {\n\n      // Update the form state without erasing previos values (with prevState)\n      setForm( prevState => ({...prevState, [name]: value}) );\n\n    }\n\n  };\n\n  // Declare handleInputFile function for files manipulation\n  const handleFileInput = (event) => {\n\n    // Destructure input name and files (data that is being changed by user)\n    const { name, files } = event.target;\n\n    // Update the form state without erasing previos values (with prevState)\n    setForm( prevState => ({...prevState, [name]: files}) );\n\n  };\n\n  // Return the form state variable and input handling functions\n  return { form, setForm, handleInput, handleFileInput };\n\n};\n\nexport default useDrugsForm;","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/drugs' : 'http://localhost:3000/api/drugs';\n\n// Export get function to retrieve all prescriptions of the current logged in user\nexport const getDrugs = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable prescription creation\nexport const createDrug = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getDrug = (drugID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${drugID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editDrug = (drugID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${drugID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useState } from 'react';\n\nconst PrescriptionForm = ({ handleSubmit, handleInput, handleFileInput, form, isButtonDisabled, objectHandler, drugs }) => {\n\n  const [ drugFields, setDrugFields ] = useState([]);\n  const [ drugQuantity, setDrugQuantity] = useState(0);\n  let drug = {'generic_name': null, 'brand_name': null, 'dosage_form': null, 'dose': null, 'directions': null};\n\n  useEffect( () => {\n\n  }, [drugQuantity])\n\n  const handleDrugInput = (event, index) => {\n\n    switch (event.target.name) {\n      case 'generic_name':\n        drugs[index].generic_name = event.target.value;\n        // setForm( prevState => ({...prevState, ['drugs']: {[name]:value}}) );\n        break;\n      case 'brand_name':\n        drugs[index].brand_name = event.target.value;\n        // setForm( prevState => ({...prevState, [name]: value}) );\n        break;\n      case 'dosage_form':\n        drugs[index].dosage_form = event.target.value;\n        // setForm( prevState => ({...prevState, [name]: value}) );\n        break;\n      case 'dose':\n        drugs[index].dose = event.target.value;\n        // setForm( prevState => ({...prevState, [name]: value}) );\n        break;\n      case 'directions':\n        drugs[index].directions = event.target.value;\n        // setForm( prevState => ({...prevState, [name]: value}) );\n        break;\n    }\n\n    console.log(drugs);\n\n  }\n  \n  const addDrugField = (event) => {\n\n    event.preventDefault();\n    drugFields.push(1)\n    drugs.push(drug);\n\n    setDrugFields(drugFields);\n    setDrugQuantity(drugQuantity+1)\n\n    return null;\n\n  }\n\n  const deleteDrugField = (event) => {\n\n    event.preventDefault();\n    drugFields.pop()\n    drugs.pop();\n\n    setDrugFields(drugFields);\n    setDrugQuantity(drugQuantity-1)\n\n    return null;\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <h4>Datos de la Receta</h4>\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de receta:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"date\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"doctor\">Doctor que atendió:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"doctor\" onChange={handleInput} placeholder=\"Nombre del doctor...\" />\n        </div>\n        <div className=\"uk-flex uk-flex-middle uk-flex-around uk-margin\">\n          <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Imagen de la receta:</label>\n          <div className=\"js-upload uk\" uk-form-custom=\"true\">\n            <input onChange={handleFileInput} name=\"image\" type=\"file\" multiple />\n            <button className=\"uk-button uk-button-default\" type=\"button\" tabIndex=\"-1\">Seleccionar</button>\n          </div>\n        </div>\n        \n        <div id=\"drugs\" className=\"uk-margin\">\n          { drugFields.map( (drugField, index) => \n            <div className=\"uk-margin\" key={index}>\n              <h4>Medicamento {index+1} <span className=\"uk-margin-left\" uk-icon=\"minus-circle\" onClick={event => deleteDrugField(event)}></span></h4>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre Genérico:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"generic_name\" onChange={event => handleDrugInput(event, index)} placeholder=\"Nombre genérico del medicamento\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre Comercial:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"brand_name\" onChange={event => handleDrugInput(event, index)} placeholder=\"Nombre comercial del medicamento\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Presentación:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"dosage_form\" onChange={event => handleDrugInput(event, index)} placeholder=\"Tabletas, jarabe, etc...\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Dosis:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"dose\" onChange={event => handleDrugInput(event, index)} placeholder=\"500 mg, 10 ml, etc...\" />\n              </div>\n              <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Indicaciones:</label>\n              <div className=\"uk-form-controls\">\n                <input className=\"uk-input\" type=\"text\" name=\"directions\" onChange={event => handleDrugInput(event, index)} placeholder=\"1 tableta c/8 horas, 1 inyección diaria, etc...\" />\n              </div>\n            </div> ) }\n        </div>\n        <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin\">\n          <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => addDrugField(event)} >\n            + Medicamento\n          </button>\n        </div>\n        \n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-border-pill uk-width-2-3 uk-width-1-4@m\" disabled={isButtonDisabled} >\n          Crear receta\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default PrescriptionForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst PrescriptionInfo = ({ prescription }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de receta: {moment(prescription.date).locale('es').format('LL')}</p>\n        <p>Doctor: {prescription.doctor}</p>\n        { prescription.image === 'Sin imagen registrada' ? null :\n            <div uk-lightbox=\"true\">\n              <a className=\"uk-button uk-button-default\" href={prescription.image} data-alt=\"Image\">Ver Imagen</a>\n            </div>\n        }\n        \n        { prescription.drugs.map( (drug, index) =>\n            <div className=\"uk-margin\" key={index}>\n              <h4>Medicamento {index+1}</h4>\n              <p>Nombre Genérico : {prescription.drugs[index].generic_name}</p>\n              <p>Nombre Comercial : {prescription.drugs[index].brand_name}</p>\n              <p>Presentación : {prescription.drugs[index].dosage_form}</p>\n              <p>Dosis : {prescription.drugs[index].dose}</p>\n              <p>Indicaciones : {prescription.drugs[index].directions}</p>\n            </div>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default PrescriptionInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useDrugsForm from '../../hooks/useDrugsForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport { getPrescriptions, createPrescription, getPrescription, editPrescription } from '../../services/prescription-services';\nimport { createDrug } from '../../services/drug-services';\n\nimport PrescriptionForm from './PrescriptionForm';\nimport PrescriptionInfo from './PrescriptionInfo';\n\nconst Prescription = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput, handleFileInput } = useDrugsForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ prescription, setPrescription] = useState({});\n  const [ prescriptions, setPrescriptions ] = useState([]);\n  const [ showForm, setShowForm ] = useState(false);\n  const [ showConsultation, setShowConsultation ] = useState(false);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  let drugs = [/*{'generic_name': null, brand_name: null, dosage_form: null, dose: null, indications: null}]*/];\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    if ( route !== 'create' && route !== 'read' ) {\n\n      getPrescriptions()\n      .then( res => {\n      \n        const { prescriptions } = res.data;\n        setPrescriptions(prescriptions);\n        setRoute('prescriptions');\n\n      });\n    }\n\n    \n    \n  }, [route]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true)\n\n    const formData = new FormData();      // Declare formData as new instance of FormData class\n    const { image } = form;     // Destructure profile_picture from form\n\n    console.log(drugs)\n    form.drugsJSON = JSON.stringify(drugs);\n    console.log(form)\n\n    // LearningCenterObject.observations = myArray;\n    // form.drugs = drugsArray\n    // console.log\n\n    // Iterate through every key in form object and append name:value to formData\n    for (let key in form) {\n\n      // If profile_picture, append as first item in array (currently 1 file allowed, index 0)\n      if ( key === 'image' ) formData.append(key, image[0]);\n\n      else formData.append(key, form[key]);\n      \n    }\n    \n    // Call edit service with formData as parameter, which includes form data for user profile information\n    createPrescription(formData)\n    .then( res => {\n\n      const { prescription } = res.data   // Destructure updated user document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡Tu receta fue creada exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('prescriptions');\n      setIsButtonDisabled(false);\n      setObjectHandler({});\n\n      // Save drug information\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n      setIsButtonDisabled(false)\n\n    });\n    \n  };\n\n  const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadPrescription = (prescription) => {\n    setPrescription(prescription);\n    setRoute('read');\n  }\n\n  const deleteConsultationObject = () => {\n    setObjectHandler(null);\n    setRoute('prescriptions');\n  }\n\n  return (\n\n    <div className=\"content\">\n      \n        { route === 'prescriptions' ? (\n          <div className=\"uk-section\">\n            <h2>Recetas</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nueva Receta\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { prescriptions.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado recetas</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center uk-visible\">Doctor</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { prescriptions ? \n                      prescriptions.map( (prescription, index) => \n                        <tr key={index}>\n                          <td className=\"uk-text-center\">{moment(prescription.date).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center uk-visible\">{`Dr. ${prescription.doctor}`}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadPrescription({prescription})} >\n                              Ver\n                            </button>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nueva Receta</h2>\n                  { objectHandler ?\n                      <h4>{objectHandler._id}</h4>\n                      : null\n                  }\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={deleteConsultationObject} >\n                    Regresar\n                  </button>\n                  <PrescriptionForm handleSubmit={handleSubmit} handleInput={handleInput} handleFileInput={handleFileInput} form={form} isButtonDisabled={isButtonDisabled} objectHandler={objectHandler} drugs={drugs}/>\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Receta</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('prescriptions')} >\n                    Regresar\n                  </button>\n                  <PrescriptionInfo {...prescription} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('prescriptions')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n    \n  )\n}\n\nexport default Prescription","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/prescriptions' : 'http://localhost:3000/api/prescriptions';\n\n// Export get function to retrieve all prescriptions of the current logged in user\nexport const getPrescriptions = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable prescription creation\nexport const createPrescription = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getPrescription = (prescriptionID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${prescriptionID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editPrescription = (prescriptionID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${prescriptionID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://b-health.herokuapp.com/api/medicalhistory' : 'http://localhost:3000/api/medicalhistory';\n\n// Export get function to retrieve all emergencies of the current logged in user\nexport const getMedicalHistories = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable MedicalHistory creation\nexport const createMedicalHistory = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getMedicalHistory = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editMedicalHistory = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useContext, useState } from 'react';           // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';                  // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                  // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                      // Import useForm custom hook\nimport UIkit from 'uikit';                                      // Import UIkit for notifications\nimport moment from 'moment';                                    // Import momentjs for date formatting\n\nimport { getMedicalHistory, createMedicalHistory, editMedicalHistory } from '../../services/medhistory-services';  // Import edit API call\n\nimport Questionnaire from '../common/questionnaire/Questionnaire'\nimport CatalogSearchbar from '../common/CatalogSearchbar'\n\nconst MedHistory = () => {\n\n  const { form, setForm, handleInput, handleFileInput } = useForm();\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n  const [ medHistory, setMedHistory ] = useState({});\n  const [ healthHistoryState, setHealthHistoryState ] = useState({\n    \"Diabetes\": false,\n    \"Hipertensión\": false,\n    \"Asma\": false,\n    \"Alergias\": false,\n    \"Enfermedades del Corazón\": false,\n    \"Enfermedades del Hígado\": false,\n    \"Enfermedades del Riñón\": false,\n    \"Enfermedades Endócrinas\": false,\n    \"Enfermedades del Sist. Digestivo\": false,\n    \"Enfermedades Mentales\": false,\n    \"Cáncer\": false,\n    \"Otras\": false\n  })\n  \n  const { user, setUser, route, setRoute } = useContext(AppContext); // Destructure user state variable\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n\n  let healthHistoryObj = {\n    \"Diabetes\": false,\n    \"Hipertensión\": false,\n    \"Asma\": false,\n    \"Alergias\": false,\n    \"Enfermedades del Corazón\": false,\n    \"Enfermedades del Hígado\": false,\n    \"Enfermedades del Riñón\": false,\n    \"Enfermedades Endócrinas\": false,\n    \"Enfermedades del Sist. Digestivo\": false,\n    \"Enfermedades Mentales\": false,\n    \"Cáncer\": false,\n    \"Otras\": false\n  }, allergiesObj = {\n    \"Agentes Biológicos\": \"Ninguno\",\n    \"Alimentos\": \"Ninguno\",\n    \"Insectos\": \"Ninguno\",\n    \"Medicamentos\": \"Ninguno\",\n  }, weekly_exercise_hours = 0;\n\n  // Hook to update component when user state variable is modified\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getMedicalHistory()\n    .then( res => {\n\n      const { medicalHistory } = res.data;\n\n      setMedHistory(medicalHistory);\n\n    });\n\n  }, [user] );\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true);\n\n    form['health_history'] = {...healthHistoryState};\n    // form['health_history'] = healthHistoryObj;\n    // form['allergies'] = allergiesObj;\n    form['weekly_exercise_hours'] = parseInt(weekly_exercise_hours);\n    \n    // Call edit service with formData as parameter, which includes form data for user profile information\n    if ( route === 'edit' ) {\n\n      editMedicalHistory(form)\n      .then( res => {\n\n        const { medicalHistory } = res.data   // Destructure updated user document from response\n        \n        setMedHistory(medicalHistory);              // Modify user state variable with updated information\n        setRoute('none');\n        setIsButtonDisabled(false);\n\n        // Send UIkit success notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> '¡Tu historial clínico fue actualizado exitosamente!'`,\n          pos: 'bottom-center',\n          status: 'success'\n        });\n\n      })\n      .catch( error => {\n\n        console.log(error);\n        setIsButtonDisabled(false);\n\n        // Send UIkit error notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> ${error}`,\n          pos: 'bottom-center',\n          status: 'danger'\n        });\n\n      });\n\n    }\n\n    if ( route !== 'edit' ) {\n\n      createMedicalHistory(form)\n      .then( res => {\n\n        const { medicalHistory } = res.data   // Destructure updated user document from response\n        \n        setMedHistory(medicalHistory);              // Modify user state variable with updated information\n        setRoute('none');\n        setIsButtonDisabled(false);\n\n        // Send UIkit success notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> '¡Tu historial clínico fue creado exitosamente!'`,\n          pos: 'bottom-center',\n          status: 'success'\n        });\n\n      })\n      .catch( error => {\n\n        console.log(error);\n        setIsButtonDisabled(false);\n\n        // Send UIkit error notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> ${error}`,\n          pos: 'bottom-center',\n          status: 'danger'\n        });\n\n      });\n\n    }\n\n  };\n\n  const handleMedHistoryInput = (event) => {\n\n    const { name, value, id, checked } = event.target;\n\n    switch ( name ) {\n      case 'health_history':\n        // healthHistoryObj[value] = !healthHistoryObj[value];\n        setHealthHistoryState( prevState => ({...prevState, [value]: checked}))\n        // console.log(healthHistoryState)\n        // setForm( prevState => ({...prevState, ['health_history']: healthHistoryObj}) );\n        break;\n      case 'allergies':\n        allergiesObj[id] = value;\n        // console.log(allergiesObj)\n        // setForm( prevState => ({...prevState, ['allergies']: allergiesObj}) );\n        break;\n      case 'weekly_exercise_hours':\n        weekly_exercise_hours = parseInt(value)\n    }\n\n    // console.log(healthHistoryObj)\n    // console.log(allergiesObj)\n  }\n\n  const medHistoryQuestionnaire = [\n    <div className=\"\">\n      <h4 className=\"uk-margin\">Antecedentes Heredo-Familiares</h4>\n      <div className=\"uk-margin\">\n        <p>Si seleccionas una casilla, por favor indica el familiar</p>\n        <div className=\"uk-form-controls uk-flex\">\n          <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n            <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n              <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_diabetes\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_diabetes : null}/> Diabetes</label>\n              <div className=\"uk-form-controls\">\n                <select name=\"family_diabetes_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_diabetes_patient : \"\"}>\n                  <option>Ninguno</option>\n                  <option>Padre</option>\n                  <option>Madre</option>\n                  <option>Hermano(a)</option>\n                  <option>Abuelo(a) Paterno</option>\n                  <option>Abuelo(a) Materno</option>\n                  <option>Tío(a) Paterno</option>\n                  <option>Tío(a) Materno</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_hypertension\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_hypertension : null} /> Hipertensión</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_hypertension_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_hypertension_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_asthma\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_asthma : null} /> Asma</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_asthma_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_asthma_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_allergies\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_allergies : null} /> Alergias</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_allergies_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_allergies_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_heart_disease\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_heart_disease : null} /> Enfermedades del Corazón</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_heart_disease_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_heart_disease_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_liver_disease\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_liver_disease : null} /> Enfermedades del Hígado</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_liver_disease_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_liver_disease_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_digestive_disease\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_digestive_disease : null} /> Enfermedades del Sist. Digestivo</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_digestive_disease_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_digestive_disease_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_kidney_disease\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_kidney_disease : null} /> Enfermedades del Riñón</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_kidney_disease_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_kidney_disease_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_endocrin_disease\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_diabetes : null} /> Enfermedades Endócrinas</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_endocrin_disease_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_endocrin_disease_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_mental_disease\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_mental_disease : null} /> Enfermedades Mentales</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_mental_disease_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_mental_disease_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_cancer\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_cancer : null} /> Cáncer</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_cancer_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_cancer_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n              <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"family_other_disease\" onChange={handleInput} defaultChecked={medHistory ? medHistory.family_other_disease : null} /> Otras</label>\n                <div className=\"uk-form-controls\">\n                  <select name=\"family_other_disease_patient\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue={medHistory ? medHistory.family_other_disease_patient : \"\"}>\n                    <option>Ninguno</option>\n                    <option>Padre</option>\n                    <option>Madre</option>\n                    <option>Hermano(a)</option>\n                    <option>Abuelo(a) Paterno</option>\n                    <option>Abuelo(a) Materno</option>\n                    <option>Tío(a) Paterno</option>\n                    <option>Tío(a) Materno</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>,\n    <div className=\"\">\n      <h4 className=\"uk-margin\">Antecedentes Personales Patológicos</h4>\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\">Enfermedades Actuales:</label>\n        <div className=\"uk-form-controls uk-flex\">\n          <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Diabetes\" onChange={handleMedHistoryInput} /> Diabetes</label>\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Hipertensión\" onChange={handleMedHistoryInput} /> Hipertensión</label>\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Asma\" onChange={handleMedHistoryInput} /> Asma</label>\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Alergias\" onChange={handleMedHistoryInput} /> Alergias</label>\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Enfermedades del Corazón\" onChange={handleMedHistoryInput} /> Enfermedades del Corazón</label>\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Enfermedades del Hígado\" onChange={handleMedHistoryInput} /> Enfermedades del Hígado</label>\n          </div>\n          <div className=\"uk-width-1-2 uk-flex uk-flex-column\">\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Enfermedades del Riñón\" onChange={handleMedHistoryInput} /> Enfermedades del Riñon</label>\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Enfermedades Endócrinas\" onChange={handleMedHistoryInput} /> Enfermedades del Endócrinas</label>\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Enfermedades del Sist. Digestivo\" onChange={handleMedHistoryInput} /> Enfermedades del Sist. Digestivo</label>\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Enfermedades Mentales\" onChange={handleMedHistoryInput} /> Enfermedades Mentales</label>\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Cáncer\" onChange={handleMedHistoryInput} /> Cáncer</label>\n            <label><input className=\"uk-checkbox\" type=\"checkbox\" name=\"health_history\" value=\"Otras\" onChange={handleMedHistoryInput} /> Otras</label>\n          </div>\n        </div>\n      </div>\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Intervenciones Quirúrgicas:</label>\n        <div className=\"uk-form-controls\">\n          <CatalogSearchbar type=\"procedure\" form={form} handleFormInput={handleInput}/>\n        </div>\n      </div>\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Alergias:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"allergies\" onChange={handleInput} placeholder=\"Introducir alergias...\" />\n        </div>\n      </div>\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Traumatismos:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"traumatisms\" onChange={handleInput} placeholder=\"Introducir traumatismos...\" />\n        </div>\n      </div>\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Hospitalizaciones Previas:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"hospitalizations\" onChange={handleInput} placeholder=\"Introducir hospitalizaciones...\" />\n        </div>\n      </div>\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Adicciones:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"addictions\" onChange={handleInput} placeholder=\"Introducir adicciones...\" />\n        </div>\n      </div>\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Otros:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"others\" onChange={handleInput} defaultValue={medHistory ? medHistory.others : \"Introducir otros...\"} />\n        </div>\n      </div>\n    </div>,\n    <div className=\"\">\n      <h4 className=\"uk-margin\">Antecedentes Personales No Patológicos</h4>\n      <div className=\"uk-margin\">\n        <div className=\"uk-form-controls uk-flex\">\n          <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n            <label className=\"uk-form-label\">Tabaquismo:</label>\n            <div className=\"uk-form-controls\">\n              <select name=\"smoking_status\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue=\"\">\n                <option></option>\n                <option>No fuma</option>\n                <option>Moderado</option>\n                <option>Intenso</option>\n              </select>\n            </div>\n            <label className=\"uk-form-label\">Alcoholismo:</label>\n            <div className=\"uk-form-controls\">\n              <select name=\"alcoholism\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue=\"\">\n                <option></option>\n                <option>No toma</option>\n                <option>Moderado</option>\n                <option>Intenso</option>\n              </select>\n            </div>\n            <label className=\"uk-form-label\">Hábitos Alimenticios:</label>\n            <div className=\"uk-form-controls\">\n              <select name=\"nutritional_status\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue=\"\">\n                <option></option>\n                <option>Buenos</option>\n                <option>Regular</option>\n                <option>Malos</option>\n              </select>\n            </div>\n            <label className=\"uk-form-label\">Sueño:</label>\n            <div className=\"uk-form-controls\">\n              <select name=\"sleep_status\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue=\"\">\n                <option></option>\n                <option>Duerme bien</option>\n                <option>Duerme mal</option>\n              </select>\n            </div>\n            <label className=\"uk-form-label\">Horas de Ejercicio Semanales:</label>\n            <div className=\"uk-form-controls\">\n              <input className=\"uk-input uk-border-pill\" type=\"number\" name=\"weekly_exercise_hours\" onChange={handleMedHistoryInput} />\n            </div>\n            <label className=\"uk-form-label\">Higiene Bucal:</label>\n            <div className=\"uk-form-controls\">\n              <select name=\"oral_hygiene\" onChange={handleInput} className=\"uk-select uk-border-pill\" defaultValue=\"\">\n                <option></option>\n                <option>1 Vez al día</option>\n                <option>2 Veces al día</option>\n                <option>3 Veces al día</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>,\n  ]\n\n  const backButton = (event) => setRoute('none')\n\n  const [ step, setStep ] = useState(1);\n\n  const changeStep = (index) => {\n    setStep(index)\n  }\n\n  return (\n    <div className=\"content\">\n      \n      { route === 'none' && !medHistory ? (\n          <div className=\"uk-section\">\n            <div className=\"uk-container uk-overflow-auto\">\n              <Questionnaire title=\"Registra tus Antecedentes\" questionnaire={medHistoryQuestionnaire} handleSubmit={handleSubmit} form={form} backButton={backButton} isComplete={false}/>\n            </div>\n          </div>\n        ) : route === 'none' ? (\n          <div className=\"uk-section\">\n            <h2>Mis Antecedentes</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('edit')} >\n              Editar historial\n            </button>\n            <div className=\"uk-container uk-overflow-auto\">\n              <div className=\"uk-flex uk-flex-center\">\n                <ul className=\"uk-dotnav\">\n                  <li onClick={() => changeStep(1)} key=\"1\" className={ step === 1 ? \"uk-active\" : null }><a href=\"#\">1</a></li>\n                  <li onClick={() => changeStep(2)} key=\"2\" className={ step === 2 ? \"uk-active\" : null }><a href=\"#\">2</a></li>\n                  <li onClick={() => changeStep(3)} key=\"3\" className={ step === 3 ? \"uk-active\" : null }><a href=\"#\">3</a></li>\n                </ul>\n              </div>\n              <div className={ step === 1 ? \"uk-visible\" : \"uk-hidden\" }>\n                <h4 className=\"uk-margin\">Antecedentes Heredo-Familiares</h4>\n                <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                  <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                    <label> Diabetes: {medHistory ? medHistory.family_diabetes : \"Negativo\"}</label>\n                    <div className=\"uk-form-controls\">\n                      <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_diabetes_patient : \"Ninguno\"} />\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Hipertensión: {medHistory ? medHistory.family_hypertension : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_hypertension_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Asma: {medHistory ? medHistory.family_asthma : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_asthma_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Alergias: {medHistory ? medHistory.family_allergies : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_allergies_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Enfermedades del Corazón: {medHistory ? medHistory.family_heart_disease : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_heart_disease_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Enfermedades del Hígado: {medHistory ? medHistory.family_liver_disease : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_liver_disease_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Enfermedades del Sist. Digestivo: {medHistory ? medHistory.family_digestive_disease : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_digestive_disease_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Enfermedades del Riñón: {medHistory ? medHistory.family_kidney_disease : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_kidney_disease_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Enfermedades Endócrinas: {medHistory ? medHistory.family_endocrin_disease : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_endocrin_disease_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Enfermedades Mentales: {medHistory ? medHistory.family_mental_disease : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_mental_disease_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Cáncer: {medHistory ? medHistory.family_cancer : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_cancer_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"uk-width-1-1 uk-flex uk-flex-column\">\n                    <div className=\"uk-flex uk-flex-middle uk-width-1-1 uk-child-width-1-2\">\n                      <label> Otras Enfermedades: {medHistory ? medHistory.family_other_disease : \"Negativo\"}</label>\n                      <div className=\"uk-form-controls\">\n                        <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.family_other_disease_patient : \"Ninguno\"} />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className={ step === 2 ? \"uk-visible\" : \"uk-hidden\" }>\n                <h4 className=\"uk-margin\">Antecedentes Personales Patológicos</h4>\n                <h5>Enfermedades Actuales</h5>\n                <ul className=\"uk-list\">\n                  { medHistory.health_history ? Object.entries(medHistory.health_history).map( (entry, index) => {\n                    if (entry[1] === true) \n                    return (<li key={index}>{entry[0]}</li>) \n                  else \n                    return null\n                }) : 'Cargando' }\n                </ul>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Intervenciones Quirúrgicas:</label>\n                  <div className=\"uk-form-controls\">\n                    <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.procedure : \"Ninguno\"} />\n                  </div>\n                </div>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Alergias:</label>\n                  <div className=\"uk-form-controls\">\n                    <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.allergies : \"Ninguna\"} />\n                  </div>\n                </div>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Traumatismos:</label>\n                  <div className=\"uk-form-controls\">\n                    <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.traumatisms : \"Ninguno\"} />\n                  </div>\n                </div>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Hospitalizaciones Previas:</label>\n                  <div className=\"uk-form-controls\">\n                    <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.hospitalizations : \"Ninguno\"} />\n                  </div>\n                </div>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Adicciones:</label>\n                  <div className=\"uk-form-controls\">\n                    <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.addictions : \"Ninguno\"} />\n                  </div>\n                </div>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Otros:</label>\n                  <div className=\"uk-form-controls\">\n                  <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.others : \"Ninguno\"} />\n                  </div>\n                </div>\n              </div>\n              <div className={ step === 3 ? \"uk-visible\" : \"uk-hidden\" }>\n                <h4 className=\"uk-margin\">Antecedentes Personales No Patológicos</h4>\n                <p>Horas de actividad física a la semana: {medHistory.weekly_exercise_hours}</p>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Tabaquismo:</label>\n                  <div className=\"uk-form-controls\">\n                  <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.smoking_status : \"Ninguno\"} />\n                  </div>\n                </div>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Alcoholismo:</label>\n                  <div className=\"uk-form-controls\">\n                  <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.alcoholism : \"Ninguno\"} />\n                  </div>\n                </div>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Hábitos Alimenticios:</label>\n                  <div className=\"uk-form-controls\">\n                  <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.nutritional_status : \"Ninguno\"} />\n                  </div>\n                </div>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Sueño:</label>\n                  <div className=\"uk-form-controls\">\n                  <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.sleep_status : \"Ninguno\"} />\n                  </div>\n                </div>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Higiene Bucal:</label>\n                  <div className=\"uk-form-controls\">\n                  <input disabled={true} className=\"uk-input uk-border-pill\" defaultValue={medHistory ? medHistory.oral_hygiene : \"Ninguno\"} />\n                  </div>\n                </div>\n              </div>\n          </div>\n        </div>\n        ) : (\n          <div className=\"uk-section\">\n          <div className=\"uk-container uk-overflow-auto\">\n            <Questionnaire title=\"Editar mis Antecedentes\" questionnaire={medHistoryQuestionnaire} handleSubmit={handleSubmit} form={form} backButton={backButton} isComplete={true}/>\n          </div>\n            \n          </div>\n        )\n      }\n      </div>)\n\n}\n\nexport default MedHistory","import React from 'react';\nimport CatalogSearchbar from '../common/CatalogSearchbar'\n\nconst HospitalizationForm = ({ handleSubmit, handleInput, form, isButtonDisabled }) => {\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n      <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">¿Ingresó usted al quirófano?</label>\n        <div className=\"uk-margin uk-flex uk-flex-around\">\n          <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"isSurgery\" value={false} />No</label>\n          <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"isSurgery\" value={true} />Sí</label>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de admisión:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"admission_date\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de alta:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"discharge_date\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Motivo de visita</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"chief_complaint\" onChange={handleInput} placeholder=\"Dolor, fiebre, etc...\" />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Diagnóstico</label>\n        <div className=\"uk-form-controls\">\n          <CatalogSearchbar type=\"diagnosis\" form={form} handleFormInput={handleInput}/>\n        </div>\n        \n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Clínica</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"facility_name\" onChange={handleInput} placeholder=\"Hospital General de México...\" />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Observaciones y comentarios</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"description\" onChange={handleInput} placeholder=\"Describir evento\" />\n        </div>\n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-border-pill uk-width-2-3 uk-width-1-4@m\" disabled={isButtonDisabled} >\n          Crear Visita\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default HospitalizationForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst HospitalizationInfo = ({ hospitalization }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de admisión: {moment(hospitalization.admission_date).locale('es').format('LL')}</p>\n        <p>Motivo de visita: {hospitalization.chief_complaint}</p>\n        <p>Diagnóstico: {hospitalization.diagnosis}</p>\n        <p>Clínica: {hospitalization.facility_name}</p>\n        <p>Observaciones y comentarios: {hospitalization.description}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default HospitalizationInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport { AppContext } from '../../AppContext';\nimport useForm from '../../hooks/useForm';\nimport UIkit from 'uikit';\nimport moment from 'moment';\n\nimport { getHospitalizations, getHospitalization, createHospitalization } from '../../services/hospitalization-services';\nimport HospitalizationForm from './HospitalizationForm';\nimport HospitalizationInfo from './HospitalizationInfo';\n\nconst Hozpitalization = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ hospitalization, setHospitalization ] = useState({});\n  const [ hospitalizations, setHospitalizations ] = useState([]);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getHospitalizations()\n    .then( res => {\n      \n      const { hospitalizations } = res.data;\n      setHospitalizations(hospitalizations);\n      setRoute('hospitalizations');\n\n    })\n    \n  }, [isButtonDisabled]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();\n    setIsButtonDisabled(true);\n    console.log(form)\n\n    createHospitalization(form)\n    .then( res => {\n\n      const { hospitalization } = res.data    // Destructure updated preferences document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡La hospitalización fue creada exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('hospitalizations');\n      setIsButtonDisabled(false);\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n      \n      setIsButtonDisabled(false);\n\n    });\n\n  }\n\n  // const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadHospitalization = (hospitalization) => {\n    setHospitalization(hospitalization);\n    setRoute('read');\n  }\n\n  const goToPrescription = (event, hospitalization, newRoute) => {\n    event.preventDefault();\n    setHospitalization(hospitalization);\n    setObjectHandler(hospitalization);\n    setRoute(newRoute);\n    console.log(objectHandler)\n  }\n\n  const goToStudies = (event, hospitalization, newRoute) => {\n    event.preventDefault();\n    setObjectHandler(hospitalization);\n    setRoute(newRoute);\n    console.log(objectHandler);\n  }\n\n  return (\n    <div className=\"content\">\n      \n        { route === 'hospitalizations' ? (\n          <div className=\"uk-section\">\n            <h2>Hospitalizaciones</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nueva Hospitalización\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { hospitalizations.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado hospitalizaciones</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center\">Diagnóstico</th>\n                    <th className=\"uk-text-center uk-visible@s\">Clínica</th>\n                    <th className=\"uk-text-center uk-visible@s\">Estancia</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { hospitalizations ? \n                      hospitalizations.map( (hospitalization, index) => \n                        <tr key={index} >\n                          <td className=\"uk-text-center\">{moment(hospitalization.admission_date).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center\">{hospitalization.diagnosis ? hospitalization.diagnosis : 'No definido'}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{hospitalization.facility_name}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{`No disponible`}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadHospitalization({hospitalization})} >\n                              Ver\n                            </button>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nueva Hospitalización</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('hospitalizations')} >\n                    Regresar\n                  </button>\n                  <HospitalizationForm handleSubmit={handleSubmit} handleInput={handleInput} form={form} isButtonDisabled={isButtonDisabled} />\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Hospitalización</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('hospitalizations')} >\n                    Regresar\n                  </button>\n                  <HospitalizationInfo {...hospitalization} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('hospitalizations')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n  )\n}\n\nexport default Hozpitalization","import React from 'react';\nimport CatalogSearchbar from '../common/CatalogSearchbar'\n\nconst EmergencyForm = ({ handleSubmit, handleInput, form, isButtonDisabled }) => {\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de urgencia:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"date\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Motivo de visita</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"chief_complaint\" onChange={handleInput} placeholder=\"Dolor, fiebre, etc...\" />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Diagnóstico</label>\n        <div className=\"uk-form-controls\">\n          <CatalogSearchbar type=\"diagnosis\" form={form} handleFormInput={handleInput}/>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Clínica</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"facility_name\" onChange={handleInput} placeholder=\"Hospital General de México...\" />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Observaciones y comentarios</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"description\" onChange={handleInput} placeholder=\"Describir evento\" />\n        </div>\n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-border-pill uk-width-2-3 uk-width-1-4@m\" disabled={isButtonDisabled} >\n          Crear Urgencia\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default EmergencyForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst EmergencyInfo = ({ emergency }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de visita: {moment(emergency.date).locale('es').format('LL')}</p>\n        <p>Motivo de visita: {emergency.chief_complaint}</p>\n        <p>Diagnóstico: {emergency.diagnosis}</p>\n        <p>Clínica: {emergency.facility_name}</p>\n        <p>Observaciones y comentarios: {emergency.description}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default EmergencyInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport { AppContext } from '../../AppContext';\nimport useForm from '../../hooks/useForm';\nimport UIkit from 'uikit';\nimport moment from 'moment';\n\nimport { getEmergencies, getEmergency, createEmergency } from '../../services/emergency-services';\nimport EmergencyForm from './EmergencyForm';\nimport EmergencyInfo from './EmergencyInfo';\n\nconst Emergency = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ emergency, setEmergency ] = useState({});\n  const [ emergencies, setEmergencies ] = useState([]);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getEmergencies()\n    .then( res => {\n      \n      const { emergencies } = res.data;\n      setEmergencies(emergencies);\n      setRoute('emergencies');\n\n    })\n    \n  }, [isButtonDisabled]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();\n    setIsButtonDisabled(true);\n    console.log(form)\n\n    createEmergency(form)\n    .then( res => {\n\n      const { emergency } = res.data    // Destructure updated preferences document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡La urgencia fue creada exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('emergencies');\n      setIsButtonDisabled(false);\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n      \n      setIsButtonDisabled(false);\n\n    });\n\n  }\n\n  // const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadEmergency = (emergency) => {\n    setEmergency(emergency);\n    setRoute('read');\n  }\n\n  const goToPrescription = (event, emergency, newRoute) => {\n    event.preventDefault();\n    setEmergency(emergency);\n    setObjectHandler(emergency);\n    setRoute(newRoute);\n    console.log(objectHandler)\n  }\n\n  const goToStudies = (event, emergency, newRoute) => {\n    event.preventDefault();\n    setObjectHandler(emergency);\n    setRoute(newRoute);\n    console.log(objectHandler);\n  }\n\n  return (\n    <div className=\"content\">\n      \n        { route === 'emergencies' ? (\n          <div className=\"uk-section\">\n            <h2>Urgencias</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nueva Urgencia\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { emergencies.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado urgencias</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha</th>\n                    <th className=\"uk-text-center uk-visible@s\">Motivo de visita</th>\n                    <th className=\"uk-text-center\">Diagnóstico</th>\n                    <th className=\"uk-text-center uk-visible@s\">Clínica</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { emergencies ? \n                      emergencies.map( (emergency, index) => \n                        <tr key={index} >\n                          <td className=\"uk-text-center\">{moment(emergency.date).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{emergency.chief_complaint}</td>\n                          <td className=\"uk-text-center\">{emergency.diagnosis}</td>\n                          <td className=\"uk-text-center uk-visible@s\">{emergency.facility_name}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadEmergency({emergency})} >\n                              Ver\n                            </button>\n                          </td>\n                          <td>\n                            <a href={`#modal-sections-${index}`} uk-toggle={`target: #modal-sections-${index}`}>\n                              <span className=\"uk-margin-small-right\" uk-icon=\"more-vertical\"></span>\n                            </a>\n                            <div id={`modal-sections-${index}`} className=\"uk-flex-top\" uk-modal=\"true\">\n                              <div className=\"uk-modal-dialog uk-margin-auto-vertical\">\n                                <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\" />\n                                <div className=\"uk-modal-header\">\n                                  <h3 className=\"uk-text-center\">Datos de la Urgencia</h3>\n                                  <p>Fecha: {moment(emergency.date).locale('es').format('LL')}</p>\n                                  <p>Clínica: {emergency.facility_name}</p>\n                                </div>\n                                <div className=\"uk-modal-body uk-flex uk-flex-column\">\n                                  { emergency.treatment ? (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToPrescription(event, emergency, 'read')} >\n                                        <NavLink to=\"/recetas\">Ver Receta</NavLink>\n                                      </button>\n                                    ) : (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToPrescription(event, emergency, 'create')} >\n                                        <NavLink to=\"/recetas\">Agregar Receta</NavLink>\n                                      </button>\n                                    )\n                                  }\n                                  { emergency.treatment ? (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToStudies(event, emergency, 'read')} >\n                                        <NavLink to=\"/estudios\">Ver Estudios</NavLink>\n                                      </button>\n                                    ) : (\n                                      <button className=\"uk-button uk-button-default uk-border-pill uk-margin\" onClick={event => goToStudies(event, emergency, 'create')} >\n                                        <NavLink to=\"/estudios\">Agregar Estudios</NavLink>\n                                      </button>\n                                    )\n                                  }\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nueva Urgencia</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('emergencies')} >\n                    Regresar\n                  </button>\n                  <EmergencyForm handleSubmit={handleSubmit} handleInput={handleInput} form={form} isButtonDisabled={isButtonDisabled} />\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Urgencia</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('emergencies')} >\n                    Regresar\n                  </button>\n                  <EmergencyInfo {...emergency} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('emergencies')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n  )\n}\n\nexport default Emergency","import React, { useEffect, useState } from 'react'\nimport cie10 from '../../catalogs/cie10.json'\nimport procedures from '../../catalogs/procedimientos.json'\nimport drugs from '../../catalogs/drugs.json'\n\nconst CatalogSearchbar = ({type, form, handleFormInput}) => {\n\n  const [ searchResults, setSearchResults ] = useState('');\n  const [ searchValue, setSearchValue ] = useState('');\n  const [ showDrop, setShowDrop ] = useState(false);\n\n  const handleInput = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  let results = [];\n\n  useEffect( () => {\n\n    switch (type) {\n      case \"diagnosis\": results = cie10.filter( disease =>\n        disease.NOMBRE.toLowerCase().includes(searchValue)\n        );\n        break;\n\n      case \"procedure\": results = procedures.filter( disease =>\n        disease.PRO_NOMBRE.toLowerCase().includes(searchValue)\n        );\n        break;\n\n      case \"drugs\": results = drugs.filter( disease =>\n        disease.generic_name.toLowerCase().includes(searchValue)\n        );\n        break;\n    }\n\n    setSearchResults(results);\n\n    if ( results.length <= 15 ) {\n      setShowDrop(true);\n    }\n    console.log(searchResults)\n\n  }, [searchValue]);\n\n\n  return (\n      <div className=\"uk-margin uk-width-1-1\">\n        <div className=\"uk-search uk-search-default uk-width-1-1\">\n          <span className=\"uk-search-icon-flip\" uk-search-icon=\"true\"></span>\n          <input\n            className=\"uk-search-input uk-text-center\"\n            type=\"search\"\n            placeholder={ type === 'diagnosis' ? \"Busca padecimiento...\" : type === 'drugs' ? \"Busca por nombre genérico...\" : \"Busca procedimiento...\"}\n            value={searchValue}\n            onChange={handleInput}\n          />\n        </div>\n        { showDrop ? (\n            <select className=\"uk-select\" name=\"generic_name\" onChange={handleFormInput}>\n              {searchResults.map( (drug, index) => <option key={index} value={drug.generic_name} >{drug.generic_name}</option> )}\n            </select>\n          ) : null \n        }\n      </div>\n  )\n}\n\nexport default CatalogSearchbar","import React from 'react';\nimport DrugSearchbar from '../common/DrugSearchbar'\n\nconst DrugForm = ({ handleSubmit, handleInput, form, isButtonDisabled }) => {\n  return (\n    <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\" htmlFor=\"date\">Fecha de inicio del tratamiento:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"date\" name=\"date_added\" onChange={handleInput} />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre de patente:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"brand_name\" onChange={handleInput} placeholder=\"Tempra, Aspirina...\" />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Nombre genérico:</label>\n        <div className=\"uk-form-controls\">\n          <DrugSearchbar type=\"drugs\" form={form} handleFormInput={handleInput}/>\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Dosis:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"dose\" onChange={handleInput} placeholder=\"500 mg, 5 mg, etc...\" />\n        </div>\n        <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Presentación:</label>\n        <div className=\"uk-form-controls\">\n          <input className=\"uk-input\" type=\"text\" name=\"dosage_form\" onChange={handleInput} placeholder=\"Tableta, jarabe, etc\" />\n        </div>\n        \n      </div>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary uk-width-2-3 uk-border-pill\" disabled={isButtonDisabled} >\n          Agregar\n        </button>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default DrugForm","import React from 'react';\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst PrescriptionInfo = ({ drug }) => {\n  return (\n    <div className=\"uk-container\">\n      <div className=\"uk-margin\">\n        <p>Fecha de inicio de tratamiento: {moment(drug.date).locale('es').format('LL')}</p>\n        <p>Nombre Genérico : {drug.generic_name}</p>\n        <p>Nombre Comercial : {drug.brand_name}</p>\n        <p>Presentación : {drug.dosage_form}</p>\n        <p>Dosis : {drug.dose}</p>\n      </div>\n      <div className=\"uk-flex uk-flex-column uk-flex-middle\">\n        <div className=\"uk-button uk-button-primary uk-width-2-3 uk-width-1-4@m uk-border-pill uk-margin\">\n          Terminar\n        </div>\n        <div className=\"uk-button uk-button-danger uk-width-2-3 uk-width-1-4@m uk-border-pill\">\n          Eliminar\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PrescriptionInfo","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport { getDrugs, createDrug, getDrug, editDrug } from '../../services/drug-services';\n\nimport DrugForm from './DrugForm';\nimport DrugInfo from './DrugInfo';\n\nconst Drug = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput, handleFileInput } = useForm();\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { user, route, setRoute, objectHandler, setObjectHandler } = useContext(AppContext);\n  const [ drug, setDrug] = useState({});\n  const [ drugs, setDrugs ] = useState([]);\n  const [ showForm, setShowForm ] = useState(false);\n  const [ showDrug, setShowDrug ] = useState(false);\n  const [ isButtonDisabled, setIsButtonDisabled ] = useState(false);\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    if ( route !== 'create' && route !== 'read' ) {\n\n      getDrugs()\n      .then( res => {\n      \n        const { drugs } = res.data;\n        setDrugs(drugs);\n        setRoute('drugs');\n\n      });\n    }\n\n    \n    \n  }, [route]);\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setIsButtonDisabled(true)\n\n    createDrug(form)\n    .then( res => {\n\n      const { drug } = res.data    // Destructure updated preferences document from response\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡El registro de medicamento fue creado exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n      setRoute('drugs');\n      setIsButtonDisabled(false);\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n      \n      setIsButtonDisabled(false);\n\n    });\n    \n  };\n\n  const toggleButton = () => setIsButtonDisabled(!isButtonDisabled);\n  \n  const loadDrug = (drug) => {\n    setDrug(drug);\n    setRoute('read');\n  }\n\n  const deleteDrugObject = () => {\n    setObjectHandler(null);\n    setRoute('drugs');\n  }\n\n  return (\n\n    <div className=\"content\">\n      \n        { route === 'drugs' ? (\n          <div className=\"uk-section\">\n            <h2>Mis Medicamentos</h2>\n            <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('create')} >\n              + Nuevo Medicamento\n            </button>\n            <div className=\"uk-overflow-auto\">\n              { drugs.length < 1 ? (\n                  <h4 className=\"uk-text-danger\">No has agregado medicamentos</h4>\n                ) : null\n              }\n              <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"uk-text-center\">Fecha Agregada</th>\n                    <th className=\"uk-text-center uk-visible\">Medicamento</th>\n                    <th className=\"uk-text-center\">Detalles</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { drugs ? \n                      drugs.map( (drug, index) => \n                        <tr key={index}>\n                          <td className=\"uk-text-center\">{moment(drug.date_added).locale('es').format('LL')}</td>\n                          <td className=\"uk-text-center uk-visible\">{drug.brand_name}</td>\n                          <td className=\"uk-text-center\">\n                            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill\" onClick={event => loadDrug({drug})} >\n                              Ver\n                            </button>\n                          </td>\n                        </tr>\n                      )\n                    : <tr>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                        <td>Cargando</td>\n                      </tr>\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          ) : (\n            route === 'create' ? (\n              <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                  <h2>Nuevo Medicamento</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={deleteDrugObject} >\n                    Regresar\n                  </button>\n                  <DrugForm handleSubmit={handleSubmit} handleInput={handleInput} handleFileInput={handleFileInput} form={form} isButtonDisabled={isButtonDisabled} objectHandler={objectHandler}/>\n                </div>\n              </div>\n            ) : (\n              route === 'read' ? (\n                <div className=\"uk-section\">\n                  <h2>Ver Medicamento</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" onClick={event => setRoute('drugs')} >\n                    Regresar\n                  </button>\n                  <DrugInfo {...drug} />\n                </div>\n              ) : (\n                <div className=\"uk-section\">\n                  <h2>Cargando...</h2>\n                  <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m\" onClick={event => setRoute('drugs')} >\n                    Regresar\n                  </button>\n                </div> \n              )\n            )\n          )\n        }\n      \n    </div>\n    \n  )\n}\n\nexport default Drug","import React, { useState, useContext } from 'react'\nimport { AppContext } from '../AppContext'\nimport moment from 'moment';                                    // Import momentjs for date formatting\n\nconst Questionnaire = ({title = 'Cuestionario', questionnaire = [1,2,3]}) => {\n\n  const { user, setUser, route, setRoute } = useContext(AppContext); // Destructure user state variable\n\n  const handleInput = (event) => {\n    console.log(event)\n  }\n\n  const questionnaire_var = [\n    <div>\n      <label className=\"uk-form-label\" htmlFor=\"date\">Nombres:</label>\n      <div className=\"uk-form-controls\">\n        <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"first_name\" onChange={handleInput} placeholder={user.first_name} />\n      </div>\n      <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Apellido paterno:</label>\n      <div className=\"uk-form-controls\">\n        <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"last_name1\" onChange={handleInput} placeholder={user.last_name1} />\n      </div>\n      <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Apellido materno:</label>\n      <div className=\"uk-form-controls\">\n        <input className=\"uk-input uk-border-pill\" type=\"text\" name=\"last_name2\" onChange={handleInput} placeholder={user.last_name2} />\n      </div>\n      <label className=\"uk-form-label\">Fecha de nacimiento: {moment.utc(user.date_of_birth).format('LL')}</label>\n      <div className=\"uk-inline\">\n        <input onChange={handleInput} name=\"date_of_birth\" className=\"uk-input uk-border-pill\" type=\"date\" />\n      </div>\n      <label className=\"uk-form-label\" htmlFor=\"form-stacked-text\">Género</label>\n      <div className=\"uk-margin uk-flex uk-flex-around\">\n        <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"F\" />  Mujer</label>\n        <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"M\" />  Hombre</label>\n        <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"N\" />  No binario</label>\n      </div>\n    </div>\n    ,\n    <div>\n      <label className=\"uk-form-label\">CURP:</label>\n      <div className=\"uk-form-controls\">\n        <input onChange={handleInput} name=\"curp\" className=\"uk-input uk-border-pill\" type=\"text\" placeholder={user.curp} />\n      </div>\n      <label className=\"uk-form-label\">Código Postal:</label>\n      <div className=\"uk-form-controls\">\n        <input onChange={handleInput} name=\"zip_code\" className=\"uk-input uk-border-pill\" type=\"number\" placeholder={user.zip_code ? user.zip_code : 5544332211} />\n      </div>\n      <label className=\"uk-form-label\">Estado Civil:</label>\n      <div className=\"uk-form-controls\">\n        <select className=\"uk-select uk-border-pill\">\n          <option>Soltero</option>\n          <option>Casado</option>\n          <option>Viudo</option>\n          <option>Divorciado</option>\n        </select>\n      </div>\n      <label className=\"uk-form-label\">Grado Máximo de Estudios:</label>\n      <div className=\"uk-form-controls\">\n        <select className=\"uk-select uk-border-pill\">\n          <option>Primaria</option>\n          <option>Secundaria</option>\n          <option>Preparatoria</option>\n          <option>Licenciatura</option>\n          <option>Posgrado</option>\n        </select>\n      </div>\n    </div>,\n    <div>\n      <label className=\"uk-form-label\">Teléfono/Whatsapp:</label>\n      <div className=\"uk-form-controls\">\n        <input onChange={handleInput} name=\"phone_numnber\" className=\"uk-input uk-border-pill\" type=\"number\" placeholder={user.phone_number ? user.phone_number : 5544332211} />\n      </div>\n      <label className=\"uk-form-label\">Correo electrónico:</label>\n      <div className=\"uk-form-controls\">\n        <input onChange={handleInput} name=\"email\" className=\"uk-input uk-border-pill\" type=\"email\" placeholder={user.email} />\n      </div>\n    </div>\n  ]\n\n  const [ currentStep, setCurrentStep ] = useState(0);\n\n  const changeStepState = (index) => {\n    setCurrentStep(index)\n  }\n\n  return (\n    <div className=\"content\">\n      <div className=\"uk-section\">\n        <div className=\"uk-container\">\n          <h2>{title}</h2>\n          <button className=\"uk-button uk-button-default uk-border-pill uk-width-2-3 uk-width-1-4@m uk-margin\" >\n            Regresar\n          </button>\n          <div className=\"uk-flex uk-flex-center\">\n            <ul className=\"uk-dotnav\">\n              {\n                questionnaire_var.map( (section, index) => \n                  <li onClick={() => changeStepState(index)} key={index} className={ index === currentStep ? \"uk-active\" : null }><a href=\"#\">{index}</a></li>\n                )\n              }\n            </ul>\n          </div>\n          <form className=\"uk-form-stacked uk-text-left uk-margin\">\n            {\n              questionnaire_var.map( (section, index) => \n                <div key={index} className={ index === currentStep ? \"uk-visible uk-margin\" : \"uk-hidden\" }>\n                  { section }\n                </div>\n              )\n            }\n            <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin-large\">\n              <button type=\"submit\" className=\"uk-button uk-button-primary uk-border-pill uk-width-3-5 uk-width-1-4@s\" >\n                Guardar cambios\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Questionnaire","import React, { useContext } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { AppContext } from './AppContext';\n\n// Import Components for navigation\nimport Landing from './components/landing/Landing';\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\nimport Profile from './components/profile/Profile';\n// import Preferences from './components/profile/Preferences';\nimport Home from './components/home/Home';\n// import DoctorLanding from './components/doctor/DoctorLanding';\n// import DoctorHome from './components/doctor/DoctorHome';\n// import PatientHome from './components/patient/PatientHome';\n// import Patients from './components/doctor/myPatients/Patients'\nimport Study from './components/study/Study';\nimport Disease from './components/disease/Disease';\nimport Consultation from './components/consultation/Consultation';\nimport Prescription from './components/prescription/Prescription';\nimport MedHistory from './components/medHistory/MedHistory';\nimport CatalogSearchbar from './components/common/CatalogSearchbar';\nimport Hospitalization from './components/hospitalization/Hozpitalization';\nimport Emergency from './components/emergency/Emergency'\nimport ConsultationFormSpecial from './components/consultation/ConsultationFormSpecial'\nimport Drug from './components/drug/Drug'\nimport Questionnaire from './components/Questionnaire'\n// import Calendar from './components/schedule/Calendar';\n\nconst Router = () => {\n\n  const { user, setRoute } = useContext(AppContext); // Destructure user state variable\n\n  const handleRoute = (newRoute) => setRoute(newRoute);\n\n  return (\n    <Switch>\n\n      <Route exact path=\"/\">\n        <Landing />\n      </Route>\n\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n      \n      <Route path=\"/login\">\n        <Login />\n      </Route>\n\n      <Route path=\"/registro\">\n        <Signup />\n      </Route>\n\n      <Route path=\"/home\">\n        <Home />\n      </Route>\n\n      <Route path=\"/perfil\">\n        <Profile />\n      </Route>\n\n      <Route path=\"/antecedentes\">\n        <MedHistory />\n      </Route>\n\n      <Route path=\"/padecimientos\">\n        <Disease />\n      </Route>\n\n      <Route path=\"/consultas\">\n        <Consultation />\n      </Route>\n\n      <Route path=\"/medicamentos\">\n        <Drug />\n      </Route>\n\n      <Route path=\"/recetas\">\n        <Prescription />\n      </Route>\n\n      <Route path=\"/estudios\">\n        <Study />\n      </Route>\n\n      <Route path=\"/hospitalizaciones\">\n        <Hospitalization />\n      </Route>\n\n      <Route path=\"/urgencias\">\n        <Emergency />\n      </Route>\n\n      <Route path=\"/test\">\n        <Questionnaire />\n      </Route>\n\n    </Switch>\n  )\n};\n\nexport default Router;","import React, { useContext } from 'react';                // Import React and useContext hook\nimport { Link, NavLink } from 'react-router-dom';         // Import NavLink for \"navigation\"\nimport { useHistory } from 'react-router-dom';            // Import useHistory for \"redirection\"\nimport { AppContext }  from '../../AppContext';           // Import AppContext to use created context\nimport { logout } from '../../services/auth-services';    // Import logout service for logout functionality\nimport logo from '../../images/icons/blue-icon.svg'\n\n\n// Declare Nav functional component (Navigation Bar)\nconst Navbar = () => {\n  \n  // Destructure user state variable and resetUserContext function from context\n  const { user, setRoute, resetUserContext } = useContext(AppContext);\n  // Destructure push method from useHistory to \"redirect\" user\n  const { push } = useHistory();\n\n  // Declare function for handling logout button\n  const handleLogout = () => {\n\n    logout();                   // Execute logout function (clear localStorage)\n    push('/login');             // Redirect user to login\n    resetUserContext();         // delete user data from context to an empty object\n    closeMenu();\n\n  };\n\n  const handleRoute = (event, newRoute) => {\n    \n    event.preventDefault();               // Prevent page reloading after submit action\n    setRoute(newRoute);                   // Update route state variable with route sent as parameter\n    closeMenu();\n\n  }\n\n  const closeMenu = () => {\n    const toggle = document.getElementById('toggle');\n    toggle.checked = !toggle.checked;\n  }\n\n  return (\n\n    <nav className=\"uk-navbar uk-navbar-container uk-navbar-transparent uk-flex uk-flex-between uk-flex-middle uk-flex-wrap\">\n      \n      <ul className=\"uk-navbar-nav uk-height-1-1\">\n          <li className=\"uk-active uk-flex uk-flex-middle\">\n            <NavLink to=\"/\">\n              <div className=\"uk-margin-left\">\n                  <img src={logo} alt=\"logo\" width=\"48px\" height=\"48px\" className=\"uk-img\" />\n              </div>\n            </NavLink>\n          </li>\n          <li className=\"uk-active uk-flex uk-flex-middle uk-height-1-1\">\n              <NavLink to=\"/\">\n                B-Health\n              </NavLink>\n          </li>\n      </ul>\n\n      <label id=\"nav-menu\" htmlFor=\"toggle\" className=\"uk-margin-right uk-height-1-1\"><span uk-icon=\"menu\"></span></label>\n      <input type=\"checkbox\" id=\"toggle\"/>\n      \n      \n          \n          { user._id ? \n            <ul className=\"menu uk-navbar-nav\">\n              <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")}>\n                <NavLink to=\"/perfil\">\n                  <div className=\"uk-width-auto uk-margin-small-right\">\n                    <img className=\"uk-border-circle\" width={40} height={40} src={user.profile_picture} alt=\"User profile\" />\n                  </div>\n                  <p className=\"uk-margin-remove\">Mi Perfil</p>\n                </NavLink>\n              </li>\n              <li className=\"uk-active\">\n                <NavLink to=\"/login\">\n                  <button className=\"uk-button uk-button-primary uk-border-pill\" onClick={handleLogout} >\n                    Logout\n                  </button>\n                </NavLink>\n              </li>\n              <div className=\"mobile-only uk-overflow-auto\">\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/home\">Mi Salud</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/antecedentes\">Antecedentes</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/padecimientos\">Padecimientos</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/consultas\">Consultas</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/medicamentos\">Medicamentos</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/recetas\">Recetas</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/estudios\">Estudios</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/urgencias\">Urgencias</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/hospitalizaciones\">Hospitalizaciones</NavLink>\n                </li>\n                {/* <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/agenda\">Agenda</NavLink>\n                </li>\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/terapias\">Otras Terapias</NavLink>\n                </li> */}\n                <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n                  <NavLink to=\"/tienda\">Tienda</NavLink>\n                </li>\n              </div>\n            </ul>\n            :\n            <ul className=\"menu uk-navbar-nav\">\n              <li className=\"uk-active uk-flex uk-flex-center uk-flex-middle\" onClick={closeMenu} ><Link to=\"/servicios\">Servicios</Link></li>\n              <li className=\"uk-active uk-flex uk-flex-center uk-flex-middle\" onClick={closeMenu} ><Link to=\"/nosotros\">Nosotros</Link></li>\n              <li className=\"uk-active uk-flex uk-flex-center uk-flex-middle\" onClick={closeMenu} >\n                <Link to=\"/login\" className=\"uk-margin-remove uk-padding-remove\">\n                  <button className=\"uk-button uk-button-white uk-border-pill\">\n                    Inicia Sesión\n                  </button>\n                </Link>\n              </li>\n              <li className=\"uk-active uk-flex uk-flex-center uk-flex-middle\" onClick={closeMenu} >\n                <Link to=\"/registro\">\n                  <button className=\"uk-button uk-button-primary uk-border-pill\">\n                    Regístrate\n                  </button>\n                </Link>\n              </li>\n            </ul>\n          }\n\n    </nav>\n    \n  );\n\n};\n\nexport default Navbar;","import React, { useContext } from 'react';                // Import React and useContext hook\nimport { NavLink, Link } from 'react-router-dom';               // Import NavLink for \"navigation\"\n//import { useHistory } from 'react-router-dom';            // Import useHistory for \"redirection\"\nimport { AppContext }  from '../../AppContext';           // Import AppContext to use created context\n\n// Declare Sidebar functional component\nconst Sidebar = () => {\n  \n  // Destructure user and route state variables from context and setRoute function to change route\n  const { user, setRoute } = useContext(AppContext); // Destructure user state variable\n\n  // Declare function to update the route state variable according to the selected link for inner component nav\n  const handleRoute = (event, newRoute) => {\n    \n    event.preventDefault();               // Prevent page reloading after submit action\n    setRoute(newRoute);                   // Update route state variable with route sent as parameter\n  \n  }\n\n  // Destructure push method from useHistory to \"redirect\" user\n  //const { push } = useHistory();\n\n  return (\n     \n    <div className=\"sidebar\">\n      <ul className=\"uk-nav-default uk-nav-parent-icon uk-width-4-5 uk-text-left uk-margin-left uk-margin-large-top\" uk-nav=\"true\">\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/home\">Mi Salud</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/antecedentes\">Antecedentes</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/padecimientos\">Padecimientos</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/consultas\">Consultas</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/medicamentos\">Medicamentos</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/recetas\">Recetas</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/estudios\">Estudios</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/urgencias\">Urgencias</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/hospitalizaciones\">Hospitalizaciones</NavLink>\n        </li>\n        {/* <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/agenda\">Agenda</NavLink>\n        </li>\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/terapias\">Otras Terapias</NavLink>\n        </li> */}\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"none\")} >\n          <NavLink to=\"/tienda\">Tienda</NavLink>\n        </li>\n      </ul>\n    </div>\n        \n  );\n};\n\nexport default Sidebar;","import React, { useContext } from 'react';\nimport Router from './Router';\nimport { AppContext } from './AppContext';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/common/Navbar'\nimport Sidebar from './components/common/Sidebar';\n\nfunction App() {\n\n  const { user } = useContext(AppContext); // Destructure user state variable\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <main>\n        { user._id ? (\n          <div className=\"uk-flex\">\n            <Sidebar />\n            <Router />\n          </div>\n        ) : (\n          <Router />\n        )}\n      </main>\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Import BrowserRouter to allow the user to navigate within the app by setting defined routes. See ./Router.js for more information\nimport { BrowserRouter } from 'react-router-dom';\n\n// Import the Provider which will allow to pass down the state variables and methods to its descendants\nimport AppProvider from './AppContext';\n\n// Import UIkit for styles\nimport UIkit from 'uikit';\nimport Icons from 'uikit/dist/js/uikit-icons';\nimport 'uikit/dist/css/uikit.min.css';\n\nUIkit.use(Icons);   // Execute to allow icon use\n\n// Create a component that: Provides state variables and methods AND router functionality for navigation, to the APP\nconst WithRouterAndProvider = () => (\n  <AppProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AppProvider>\n)\n\nReactDOM.render(<WithRouterAndProvider />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}